
BattleshipProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001dd4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a4  00800060  00001dd4  00001e68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000028  00800104  00800104  00001f0c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f0c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001f68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00001fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000211a  00000000  00000000  000020c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000820  00000000  00000000  000041de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f5f  00000000  00000000  000049fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000334  00000000  00000000  00005960  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a5  00000000  00000000  00005c94  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001560  00000000  00000000  00006239  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00007799  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
       4:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
       8:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
       c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      10:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      14:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      18:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      1c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      20:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      24:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      28:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      2c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      30:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      34:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      38:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      3c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      40:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      44:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      48:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      4c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      50:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      54:	07 63       	ori	r16, 0x37	; 55
      56:	42 36       	cpi	r20, 0x62	; 98
      58:	b7 9b       	sbis	0x16, 7	; 22
      5a:	d8 a7       	std	Y+40, r29	; 0x28
      5c:	1a 39       	cpi	r17, 0x9A	; 154
      5e:	68 56       	subi	r22, 0x68	; 104
      60:	18 ae       	std	Y+56, r1	; 0x38
      62:	ba ab       	std	Y+50, r27	; 0x32
      64:	55 8c       	ldd	r5, Z+29	; 0x1d
      66:	1d 3c       	cpi	r17, 0xCD	; 205
      68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
      6a:	57 63       	ori	r21, 0x37	; 55
      6c:	bd 6d       	ori	r27, 0xDD	; 221
      6e:	ed fd       	.word	0xfded	; ????
      70:	75 3e       	cpi	r23, 0xE5	; 229
      72:	f6 17       	cp	r31, r22
      74:	72 31       	cpi	r23, 0x12	; 18
      76:	bf 00       	.word	0x00bf	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	08 00       	.word	0x0008	; ????
      7e:	00 00       	nop
      80:	be 92       	st	-X, r11
      82:	24 49       	sbci	r18, 0x94	; 148
      84:	12 3e       	cpi	r17, 0xE2	; 226
      86:	ab aa       	std	Y+51, r10	; 0x33
      88:	aa 2a       	or	r10, r26
      8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
      8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
      8e:	4c 3e       	cpi	r20, 0xEC	; 236
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	be ab       	std	Y+54, r27	; 0x36
      96:	aa aa       	std	Y+50, r10	; 0x32
      98:	aa 3e       	cpi	r26, 0xEA	; 234
      9a:	00 00       	nop
      9c:	00 00       	nop
      9e:	bf 00       	.word	0x00bf	; ????
      a0:	00 00       	nop
      a2:	80 3f       	cpi	r24, 0xF0	; 240
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	00 08       	sbc	r0, r0
      aa:	41 78       	andi	r20, 0x81	; 129
      ac:	d3 bb       	out	0x13, r29	; 19
      ae:	43 87       	std	Z+11, r20	; 0x0b
      b0:	d1 13       	cpse	r29, r17
      b2:	3d 19       	sub	r19, r13
      b4:	0e 3c       	cpi	r16, 0xCE	; 206
      b6:	c3 bd       	out	0x23, r28	; 35
      b8:	42 82       	std	Z+2, r4	; 0x02
      ba:	ad 2b       	or	r26, r29
      bc:	3e 68       	ori	r19, 0x8E	; 142
      be:	ec 82       	std	Y+4, r14	; 0x04
      c0:	76 be       	out	0x36, r7	; 54
      c2:	d9 8f       	std	Y+25, r29	; 0x19
      c4:	e1 a9       	ldd	r30, Z+49	; 0x31
      c6:	3e 4c       	sbci	r19, 0xCE	; 206
      c8:	80 ef       	ldi	r24, 0xF0	; 240
      ca:	ff be       	out	0x3f, r15	; 63
      cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__stack+0x71>
      ce:	ff 7f       	andi	r31, 0xFF	; 255
      d0:	3f 00       	.word	0x003f	; ????
      d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
      d6:	11 24       	eor	r1, r1
      d8:	1f be       	out	0x3f, r1	; 63
      da:	cf e5       	ldi	r28, 0x5F	; 95
      dc:	d8 e0       	ldi	r29, 0x08	; 8
      de:	de bf       	out	0x3e, r29	; 62
      e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
      e2:	11 e0       	ldi	r17, 0x01	; 1
      e4:	a0 e6       	ldi	r26, 0x60	; 96
      e6:	b0 e0       	ldi	r27, 0x00	; 0
      e8:	e4 ed       	ldi	r30, 0xD4	; 212
      ea:	fd e1       	ldi	r31, 0x1D	; 29
      ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
      ee:	05 90       	lpm	r0, Z+
      f0:	0d 92       	st	X+, r0
      f2:	a4 30       	cpi	r26, 0x04	; 4
      f4:	b1 07       	cpc	r27, r17
      f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>

000000f8 <__do_clear_bss>:
      f8:	21 e0       	ldi	r18, 0x01	; 1
      fa:	a4 e0       	ldi	r26, 0x04	; 4
      fc:	b1 e0       	ldi	r27, 0x01	; 1
      fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
     100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
     102:	ac 32       	cpi	r26, 0x2C	; 44
     104:	b2 07       	cpc	r27, r18
     106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
     108:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <main>
     10c:	0c 94 e8 0e 	jmp	0x1dd0	; 0x1dd0 <_exit>

00000110 <__bad_interrupt>:
     110:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000114 <time>:
     114:	fc 01       	movw	r30, r24
     116:	0f b6       	in	r0, 0x3f	; 63
     118:	f8 94       	cli
     11a:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <__system_time>
     11e:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <__system_time+0x1>
     122:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__system_time+0x2>
     126:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <__system_time+0x3>
     12a:	0f be       	out	0x3f, r0	; 63
     12c:	30 97       	sbiw	r30, 0x00	; 0
     12e:	21 f0       	breq	.+8      	; 0x138 <time+0x24>
     130:	60 83       	st	Z, r22
     132:	71 83       	std	Z+1, r23	; 0x01
     134:	82 83       	std	Z+2, r24	; 0x02
     136:	93 83       	std	Z+3, r25	; 0x03
     138:	08 95       	ret

0000013a <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
     13a:	67 2b       	or	r22, r23
     13c:	09 f0       	breq	.+2      	; 0x140 <pinChange+0x6>
     13e:	9f c0       	rjmp	.+318    	; 0x27e <pinChange+0x144>
     140:	00 97       	sbiw	r24, 0x00	; 0
     142:	11 f4       	brne	.+4      	; 0x148 <pinChange+0xe>
     144:	d8 98       	cbi	0x1b, 0	; 27
     146:	08 95       	ret
     148:	81 30       	cpi	r24, 0x01	; 1
     14a:	91 05       	cpc	r25, r1
     14c:	11 f4       	brne	.+4      	; 0x152 <pinChange+0x18>
     14e:	d9 98       	cbi	0x1b, 1	; 27
     150:	08 95       	ret
     152:	82 30       	cpi	r24, 0x02	; 2
     154:	91 05       	cpc	r25, r1
     156:	11 f4       	brne	.+4      	; 0x15c <pinChange+0x22>
     158:	da 98       	cbi	0x1b, 2	; 27
     15a:	08 95       	ret
     15c:	83 30       	cpi	r24, 0x03	; 3
     15e:	91 05       	cpc	r25, r1
     160:	11 f4       	brne	.+4      	; 0x166 <pinChange+0x2c>
     162:	db 98       	cbi	0x1b, 3	; 27
     164:	08 95       	ret
     166:	84 30       	cpi	r24, 0x04	; 4
     168:	91 05       	cpc	r25, r1
     16a:	11 f4       	brne	.+4      	; 0x170 <pinChange+0x36>
     16c:	dc 98       	cbi	0x1b, 4	; 27
     16e:	08 95       	ret
     170:	85 30       	cpi	r24, 0x05	; 5
     172:	91 05       	cpc	r25, r1
     174:	11 f4       	brne	.+4      	; 0x17a <pinChange+0x40>
     176:	dd 98       	cbi	0x1b, 5	; 27
     178:	08 95       	ret
     17a:	86 30       	cpi	r24, 0x06	; 6
     17c:	91 05       	cpc	r25, r1
     17e:	11 f4       	brne	.+4      	; 0x184 <pinChange+0x4a>
     180:	de 98       	cbi	0x1b, 6	; 27
     182:	08 95       	ret
     184:	87 30       	cpi	r24, 0x07	; 7
     186:	91 05       	cpc	r25, r1
     188:	11 f4       	brne	.+4      	; 0x18e <pinChange+0x54>
     18a:	df 98       	cbi	0x1b, 7	; 27
     18c:	08 95       	ret
     18e:	8a 30       	cpi	r24, 0x0A	; 10
     190:	91 05       	cpc	r25, r1
     192:	11 f4       	brne	.+4      	; 0x198 <pinChange+0x5e>
     194:	c0 98       	cbi	0x18, 0	; 24
     196:	08 95       	ret
     198:	8b 30       	cpi	r24, 0x0B	; 11
     19a:	91 05       	cpc	r25, r1
     19c:	11 f4       	brne	.+4      	; 0x1a2 <pinChange+0x68>
     19e:	c1 98       	cbi	0x18, 1	; 24
     1a0:	08 95       	ret
     1a2:	8c 30       	cpi	r24, 0x0C	; 12
     1a4:	91 05       	cpc	r25, r1
     1a6:	11 f4       	brne	.+4      	; 0x1ac <pinChange+0x72>
     1a8:	c2 98       	cbi	0x18, 2	; 24
     1aa:	08 95       	ret
     1ac:	8d 30       	cpi	r24, 0x0D	; 13
     1ae:	91 05       	cpc	r25, r1
     1b0:	11 f4       	brne	.+4      	; 0x1b6 <pinChange+0x7c>
     1b2:	c3 98       	cbi	0x18, 3	; 24
     1b4:	08 95       	ret
     1b6:	8e 30       	cpi	r24, 0x0E	; 14
     1b8:	91 05       	cpc	r25, r1
     1ba:	11 f4       	brne	.+4      	; 0x1c0 <pinChange+0x86>
     1bc:	c4 98       	cbi	0x18, 4	; 24
     1be:	08 95       	ret
     1c0:	8f 30       	cpi	r24, 0x0F	; 15
     1c2:	91 05       	cpc	r25, r1
     1c4:	11 f4       	brne	.+4      	; 0x1ca <pinChange+0x90>
     1c6:	c5 98       	cbi	0x18, 5	; 24
     1c8:	08 95       	ret
     1ca:	80 31       	cpi	r24, 0x10	; 16
     1cc:	91 05       	cpc	r25, r1
     1ce:	11 f4       	brne	.+4      	; 0x1d4 <pinChange+0x9a>
     1d0:	c6 98       	cbi	0x18, 6	; 24
     1d2:	08 95       	ret
     1d4:	81 31       	cpi	r24, 0x11	; 17
     1d6:	91 05       	cpc	r25, r1
     1d8:	11 f4       	brne	.+4      	; 0x1de <pinChange+0xa4>
     1da:	c7 98       	cbi	0x18, 7	; 24
     1dc:	08 95       	ret
     1de:	84 31       	cpi	r24, 0x14	; 20
     1e0:	91 05       	cpc	r25, r1
     1e2:	11 f4       	brne	.+4      	; 0x1e8 <pinChange+0xae>
     1e4:	a8 98       	cbi	0x15, 0	; 21
     1e6:	08 95       	ret
     1e8:	85 31       	cpi	r24, 0x15	; 21
     1ea:	91 05       	cpc	r25, r1
     1ec:	11 f4       	brne	.+4      	; 0x1f2 <pinChange+0xb8>
     1ee:	a9 98       	cbi	0x15, 1	; 21
     1f0:	08 95       	ret
     1f2:	86 31       	cpi	r24, 0x16	; 22
     1f4:	91 05       	cpc	r25, r1
     1f6:	11 f4       	brne	.+4      	; 0x1fc <pinChange+0xc2>
     1f8:	aa 98       	cbi	0x15, 2	; 21
     1fa:	08 95       	ret
     1fc:	87 31       	cpi	r24, 0x17	; 23
     1fe:	91 05       	cpc	r25, r1
     200:	11 f4       	brne	.+4      	; 0x206 <pinChange+0xcc>
     202:	ab 98       	cbi	0x15, 3	; 21
     204:	08 95       	ret
     206:	88 31       	cpi	r24, 0x18	; 24
     208:	91 05       	cpc	r25, r1
     20a:	11 f4       	brne	.+4      	; 0x210 <pinChange+0xd6>
     20c:	ac 98       	cbi	0x15, 4	; 21
     20e:	08 95       	ret
     210:	89 31       	cpi	r24, 0x19	; 25
     212:	91 05       	cpc	r25, r1
     214:	11 f4       	brne	.+4      	; 0x21a <pinChange+0xe0>
     216:	ad 98       	cbi	0x15, 5	; 21
     218:	08 95       	ret
     21a:	8a 31       	cpi	r24, 0x1A	; 26
     21c:	91 05       	cpc	r25, r1
     21e:	11 f4       	brne	.+4      	; 0x224 <pinChange+0xea>
     220:	ae 98       	cbi	0x15, 6	; 21
     222:	08 95       	ret
     224:	8b 31       	cpi	r24, 0x1B	; 27
     226:	91 05       	cpc	r25, r1
     228:	11 f4       	brne	.+4      	; 0x22e <pinChange+0xf4>
     22a:	af 98       	cbi	0x15, 7	; 21
     22c:	08 95       	ret
     22e:	8e 31       	cpi	r24, 0x1E	; 30
     230:	91 05       	cpc	r25, r1
     232:	11 f4       	brne	.+4      	; 0x238 <pinChange+0xfe>
     234:	90 98       	cbi	0x12, 0	; 18
     236:	08 95       	ret
     238:	8f 31       	cpi	r24, 0x1F	; 31
     23a:	91 05       	cpc	r25, r1
     23c:	11 f4       	brne	.+4      	; 0x242 <pinChange+0x108>
     23e:	91 98       	cbi	0x12, 1	; 18
     240:	08 95       	ret
     242:	80 32       	cpi	r24, 0x20	; 32
     244:	91 05       	cpc	r25, r1
     246:	11 f4       	brne	.+4      	; 0x24c <pinChange+0x112>
     248:	92 98       	cbi	0x12, 2	; 18
     24a:	08 95       	ret
     24c:	81 32       	cpi	r24, 0x21	; 33
     24e:	91 05       	cpc	r25, r1
     250:	11 f4       	brne	.+4      	; 0x256 <pinChange+0x11c>
     252:	93 98       	cbi	0x12, 3	; 18
     254:	08 95       	ret
     256:	82 32       	cpi	r24, 0x22	; 34
     258:	91 05       	cpc	r25, r1
     25a:	11 f4       	brne	.+4      	; 0x260 <pinChange+0x126>
     25c:	94 98       	cbi	0x12, 4	; 18
     25e:	08 95       	ret
     260:	83 32       	cpi	r24, 0x23	; 35
     262:	91 05       	cpc	r25, r1
     264:	11 f4       	brne	.+4      	; 0x26a <pinChange+0x130>
     266:	95 98       	cbi	0x12, 5	; 18
     268:	08 95       	ret
     26a:	84 32       	cpi	r24, 0x24	; 36
     26c:	91 05       	cpc	r25, r1
     26e:	11 f4       	brne	.+4      	; 0x274 <pinChange+0x13a>
     270:	96 98       	cbi	0x12, 6	; 18
     272:	08 95       	ret
     274:	85 97       	sbiw	r24, 0x25	; 37
     276:	09 f0       	breq	.+2      	; 0x27a <pinChange+0x140>
     278:	9f c0       	rjmp	.+318    	; 0x3b8 <pinChange+0x27e>
     27a:	97 98       	cbi	0x12, 7	; 18
     27c:	08 95       	ret
     27e:	00 97       	sbiw	r24, 0x00	; 0
     280:	11 f4       	brne	.+4      	; 0x286 <pinChange+0x14c>
     282:	d8 9a       	sbi	0x1b, 0	; 27
     284:	08 95       	ret
     286:	81 30       	cpi	r24, 0x01	; 1
     288:	91 05       	cpc	r25, r1
     28a:	11 f4       	brne	.+4      	; 0x290 <pinChange+0x156>
     28c:	d9 9a       	sbi	0x1b, 1	; 27
     28e:	08 95       	ret
     290:	82 30       	cpi	r24, 0x02	; 2
     292:	91 05       	cpc	r25, r1
     294:	11 f4       	brne	.+4      	; 0x29a <pinChange+0x160>
     296:	da 9a       	sbi	0x1b, 2	; 27
     298:	08 95       	ret
     29a:	83 30       	cpi	r24, 0x03	; 3
     29c:	91 05       	cpc	r25, r1
     29e:	11 f4       	brne	.+4      	; 0x2a4 <pinChange+0x16a>
     2a0:	db 9a       	sbi	0x1b, 3	; 27
     2a2:	08 95       	ret
     2a4:	84 30       	cpi	r24, 0x04	; 4
     2a6:	91 05       	cpc	r25, r1
     2a8:	11 f4       	brne	.+4      	; 0x2ae <pinChange+0x174>
     2aa:	dc 9a       	sbi	0x1b, 4	; 27
     2ac:	08 95       	ret
     2ae:	85 30       	cpi	r24, 0x05	; 5
     2b0:	91 05       	cpc	r25, r1
     2b2:	11 f4       	brne	.+4      	; 0x2b8 <pinChange+0x17e>
     2b4:	dd 9a       	sbi	0x1b, 5	; 27
     2b6:	08 95       	ret
     2b8:	86 30       	cpi	r24, 0x06	; 6
     2ba:	91 05       	cpc	r25, r1
     2bc:	11 f4       	brne	.+4      	; 0x2c2 <pinChange+0x188>
     2be:	de 9a       	sbi	0x1b, 6	; 27
     2c0:	08 95       	ret
     2c2:	87 30       	cpi	r24, 0x07	; 7
     2c4:	91 05       	cpc	r25, r1
     2c6:	11 f4       	brne	.+4      	; 0x2cc <pinChange+0x192>
     2c8:	df 9a       	sbi	0x1b, 7	; 27
     2ca:	08 95       	ret
     2cc:	8a 30       	cpi	r24, 0x0A	; 10
     2ce:	91 05       	cpc	r25, r1
     2d0:	11 f4       	brne	.+4      	; 0x2d6 <pinChange+0x19c>
     2d2:	c0 9a       	sbi	0x18, 0	; 24
     2d4:	08 95       	ret
     2d6:	8b 30       	cpi	r24, 0x0B	; 11
     2d8:	91 05       	cpc	r25, r1
     2da:	11 f4       	brne	.+4      	; 0x2e0 <pinChange+0x1a6>
     2dc:	c1 9a       	sbi	0x18, 1	; 24
     2de:	08 95       	ret
     2e0:	8c 30       	cpi	r24, 0x0C	; 12
     2e2:	91 05       	cpc	r25, r1
     2e4:	11 f4       	brne	.+4      	; 0x2ea <pinChange+0x1b0>
     2e6:	c2 9a       	sbi	0x18, 2	; 24
     2e8:	08 95       	ret
     2ea:	8d 30       	cpi	r24, 0x0D	; 13
     2ec:	91 05       	cpc	r25, r1
     2ee:	11 f4       	brne	.+4      	; 0x2f4 <pinChange+0x1ba>
     2f0:	c3 9a       	sbi	0x18, 3	; 24
     2f2:	08 95       	ret
     2f4:	8e 30       	cpi	r24, 0x0E	; 14
     2f6:	91 05       	cpc	r25, r1
     2f8:	11 f4       	brne	.+4      	; 0x2fe <pinChange+0x1c4>
     2fa:	c4 9a       	sbi	0x18, 4	; 24
     2fc:	08 95       	ret
     2fe:	8f 30       	cpi	r24, 0x0F	; 15
     300:	91 05       	cpc	r25, r1
     302:	11 f4       	brne	.+4      	; 0x308 <pinChange+0x1ce>
     304:	c5 9a       	sbi	0x18, 5	; 24
     306:	08 95       	ret
     308:	80 31       	cpi	r24, 0x10	; 16
     30a:	91 05       	cpc	r25, r1
     30c:	11 f4       	brne	.+4      	; 0x312 <pinChange+0x1d8>
     30e:	c6 9a       	sbi	0x18, 6	; 24
     310:	08 95       	ret
     312:	81 31       	cpi	r24, 0x11	; 17
     314:	91 05       	cpc	r25, r1
     316:	11 f4       	brne	.+4      	; 0x31c <pinChange+0x1e2>
     318:	c7 9a       	sbi	0x18, 7	; 24
     31a:	08 95       	ret
     31c:	84 31       	cpi	r24, 0x14	; 20
     31e:	91 05       	cpc	r25, r1
     320:	11 f4       	brne	.+4      	; 0x326 <pinChange+0x1ec>
     322:	a8 9a       	sbi	0x15, 0	; 21
     324:	08 95       	ret
     326:	85 31       	cpi	r24, 0x15	; 21
     328:	91 05       	cpc	r25, r1
     32a:	11 f4       	brne	.+4      	; 0x330 <pinChange+0x1f6>
     32c:	a9 9a       	sbi	0x15, 1	; 21
     32e:	08 95       	ret
     330:	86 31       	cpi	r24, 0x16	; 22
     332:	91 05       	cpc	r25, r1
     334:	11 f4       	brne	.+4      	; 0x33a <pinChange+0x200>
     336:	aa 9a       	sbi	0x15, 2	; 21
     338:	08 95       	ret
     33a:	87 31       	cpi	r24, 0x17	; 23
     33c:	91 05       	cpc	r25, r1
     33e:	11 f4       	brne	.+4      	; 0x344 <pinChange+0x20a>
     340:	ab 9a       	sbi	0x15, 3	; 21
     342:	08 95       	ret
     344:	88 31       	cpi	r24, 0x18	; 24
     346:	91 05       	cpc	r25, r1
     348:	11 f4       	brne	.+4      	; 0x34e <pinChange+0x214>
     34a:	ac 9a       	sbi	0x15, 4	; 21
     34c:	08 95       	ret
     34e:	89 31       	cpi	r24, 0x19	; 25
     350:	91 05       	cpc	r25, r1
     352:	11 f4       	brne	.+4      	; 0x358 <pinChange+0x21e>
     354:	ad 9a       	sbi	0x15, 5	; 21
     356:	08 95       	ret
     358:	8a 31       	cpi	r24, 0x1A	; 26
     35a:	91 05       	cpc	r25, r1
     35c:	11 f4       	brne	.+4      	; 0x362 <pinChange+0x228>
     35e:	ae 9a       	sbi	0x15, 6	; 21
     360:	08 95       	ret
     362:	8b 31       	cpi	r24, 0x1B	; 27
     364:	91 05       	cpc	r25, r1
     366:	11 f4       	brne	.+4      	; 0x36c <pinChange+0x232>
     368:	af 9a       	sbi	0x15, 7	; 21
     36a:	08 95       	ret
     36c:	8e 31       	cpi	r24, 0x1E	; 30
     36e:	91 05       	cpc	r25, r1
     370:	11 f4       	brne	.+4      	; 0x376 <pinChange+0x23c>
     372:	90 9a       	sbi	0x12, 0	; 18
     374:	08 95       	ret
     376:	8f 31       	cpi	r24, 0x1F	; 31
     378:	91 05       	cpc	r25, r1
     37a:	11 f4       	brne	.+4      	; 0x380 <pinChange+0x246>
     37c:	91 9a       	sbi	0x12, 1	; 18
     37e:	08 95       	ret
     380:	80 32       	cpi	r24, 0x20	; 32
     382:	91 05       	cpc	r25, r1
     384:	11 f4       	brne	.+4      	; 0x38a <pinChange+0x250>
     386:	92 9a       	sbi	0x12, 2	; 18
     388:	08 95       	ret
     38a:	81 32       	cpi	r24, 0x21	; 33
     38c:	91 05       	cpc	r25, r1
     38e:	11 f4       	brne	.+4      	; 0x394 <pinChange+0x25a>
     390:	93 9a       	sbi	0x12, 3	; 18
     392:	08 95       	ret
     394:	82 32       	cpi	r24, 0x22	; 34
     396:	91 05       	cpc	r25, r1
     398:	11 f4       	brne	.+4      	; 0x39e <pinChange+0x264>
     39a:	94 9a       	sbi	0x12, 4	; 18
     39c:	08 95       	ret
     39e:	83 32       	cpi	r24, 0x23	; 35
     3a0:	91 05       	cpc	r25, r1
     3a2:	11 f4       	brne	.+4      	; 0x3a8 <pinChange+0x26e>
     3a4:	95 9a       	sbi	0x12, 5	; 18
     3a6:	08 95       	ret
     3a8:	84 32       	cpi	r24, 0x24	; 36
     3aa:	91 05       	cpc	r25, r1
     3ac:	11 f4       	brne	.+4      	; 0x3b2 <pinChange+0x278>
     3ae:	96 9a       	sbi	0x12, 6	; 18
     3b0:	08 95       	ret
     3b2:	85 97       	sbiw	r24, 0x25	; 37
     3b4:	09 f4       	brne	.+2      	; 0x3b8 <pinChange+0x27e>
     3b6:	97 9a       	sbi	0x12, 7	; 18
     3b8:	08 95       	ret

000003ba <Lcd4_Port>:
     3ba:	cf 93       	push	r28
     3bc:	c8 2f       	mov	r28, r24
     3be:	80 ff       	sbrs	r24, 0
     3c0:	07 c0       	rjmp	.+14     	; 0x3d0 <Lcd4_Port+0x16>
     3c2:	61 e0       	ldi	r22, 0x01	; 1
     3c4:	70 e0       	ldi	r23, 0x00	; 0
     3c6:	82 e2       	ldi	r24, 0x22	; 34
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     3ce:	06 c0       	rjmp	.+12     	; 0x3dc <Lcd4_Port+0x22>
     3d0:	60 e0       	ldi	r22, 0x00	; 0
     3d2:	70 e0       	ldi	r23, 0x00	; 0
     3d4:	82 e2       	ldi	r24, 0x22	; 34
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     3dc:	c1 ff       	sbrs	r28, 1
     3de:	07 c0       	rjmp	.+14     	; 0x3ee <Lcd4_Port+0x34>
     3e0:	61 e0       	ldi	r22, 0x01	; 1
     3e2:	70 e0       	ldi	r23, 0x00	; 0
     3e4:	83 e2       	ldi	r24, 0x23	; 35
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     3ec:	06 c0       	rjmp	.+12     	; 0x3fa <Lcd4_Port+0x40>
     3ee:	60 e0       	ldi	r22, 0x00	; 0
     3f0:	70 e0       	ldi	r23, 0x00	; 0
     3f2:	83 e2       	ldi	r24, 0x23	; 35
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     3fa:	c2 ff       	sbrs	r28, 2
     3fc:	07 c0       	rjmp	.+14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     3fe:	61 e0       	ldi	r22, 0x01	; 1
     400:	70 e0       	ldi	r23, 0x00	; 0
     402:	84 e2       	ldi	r24, 0x24	; 36
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     40a:	06 c0       	rjmp	.+12     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     40c:	60 e0       	ldi	r22, 0x00	; 0
     40e:	70 e0       	ldi	r23, 0x00	; 0
     410:	84 e2       	ldi	r24, 0x24	; 36
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     418:	c3 ff       	sbrs	r28, 3
     41a:	07 c0       	rjmp	.+14     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     41c:	61 e0       	ldi	r22, 0x01	; 1
     41e:	70 e0       	ldi	r23, 0x00	; 0
     420:	85 e2       	ldi	r24, 0x25	; 37
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     428:	06 c0       	rjmp	.+12     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     42a:	60 e0       	ldi	r22, 0x00	; 0
     42c:	70 e0       	ldi	r23, 0x00	; 0
     42e:	85 e2       	ldi	r24, 0x25	; 37
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     436:	cf 91       	pop	r28
     438:	08 95       	ret

0000043a <Lcd4_Cmd>:
     43a:	cf 93       	push	r28
     43c:	c8 2f       	mov	r28, r24
     43e:	60 e0       	ldi	r22, 0x00	; 0
     440:	70 e0       	ldi	r23, 0x00	; 0
     442:	8a e1       	ldi	r24, 0x1A	; 26
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     44a:	8c 2f       	mov	r24, r28
     44c:	0e 94 dd 01 	call	0x3ba	; 0x3ba <Lcd4_Port>
     450:	61 e0       	ldi	r22, 0x01	; 1
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	8b e1       	ldi	r24, 0x1B	; 27
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     45c:	8f ec       	ldi	r24, 0xCF	; 207
     45e:	97 e0       	ldi	r25, 0x07	; 7
     460:	01 97       	sbiw	r24, 0x01	; 1
     462:	f1 f7       	brne	.-4      	; 0x460 <Lcd4_Cmd+0x26>
     464:	00 c0       	rjmp	.+0      	; 0x466 <Lcd4_Cmd+0x2c>
     466:	00 00       	nop
     468:	60 e0       	ldi	r22, 0x00	; 0
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	8b e1       	ldi	r24, 0x1B	; 27
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     474:	8f ec       	ldi	r24, 0xCF	; 207
     476:	97 e0       	ldi	r25, 0x07	; 7
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	f1 f7       	brne	.-4      	; 0x478 <Lcd4_Cmd+0x3e>
     47c:	00 c0       	rjmp	.+0      	; 0x47e <Lcd4_Cmd+0x44>
     47e:	00 00       	nop
     480:	cf 91       	pop	r28
     482:	08 95       	ret

00000484 <Lcd4_Clear>:
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     48a:	81 e0       	ldi	r24, 0x01	; 1
     48c:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     490:	08 95       	ret

00000492 <Lcd4_Set_Cursor>:
     492:	cf 93       	push	r28
     494:	c6 2f       	mov	r28, r22
     496:	81 30       	cpi	r24, 0x01	; 1
     498:	59 f4       	brne	.+22     	; 0x4b0 <Lcd4_Set_Cursor+0x1e>
     49a:	80 e8       	ldi	r24, 0x80	; 128
     49c:	86 0f       	add	r24, r22
     49e:	82 95       	swap	r24
     4a0:	8f 70       	andi	r24, 0x0F	; 15
     4a2:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     4a6:	8c 2f       	mov	r24, r28
     4a8:	8f 70       	andi	r24, 0x0F	; 15
     4aa:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     4ae:	0c c0       	rjmp	.+24     	; 0x4c8 <Lcd4_Set_Cursor+0x36>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	51 f4       	brne	.+20     	; 0x4c8 <Lcd4_Set_Cursor+0x36>
     4b4:	80 ec       	ldi	r24, 0xC0	; 192
     4b6:	86 0f       	add	r24, r22
     4b8:	82 95       	swap	r24
     4ba:	8f 70       	andi	r24, 0x0F	; 15
     4bc:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     4c0:	8c 2f       	mov	r24, r28
     4c2:	8f 70       	andi	r24, 0x0F	; 15
     4c4:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     4c8:	cf 91       	pop	r28
     4ca:	08 95       	ret

000004cc <Lcd4_Init>:
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	0e 94 dd 01 	call	0x3ba	; 0x3ba <Lcd4_Port>
     4d2:	8f e3       	ldi	r24, 0x3F	; 63
     4d4:	9c e9       	ldi	r25, 0x9C	; 156
     4d6:	01 97       	sbiw	r24, 0x01	; 1
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <Lcd4_Init+0xa>
     4da:	00 c0       	rjmp	.+0      	; 0x4dc <Lcd4_Init+0x10>
     4dc:	00 00       	nop
     4de:	83 e0       	ldi	r24, 0x03	; 3
     4e0:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     4e4:	8f e0       	ldi	r24, 0x0F	; 15
     4e6:	97 e2       	ldi	r25, 0x27	; 39
     4e8:	01 97       	sbiw	r24, 0x01	; 1
     4ea:	f1 f7       	brne	.-4      	; 0x4e8 <Lcd4_Init+0x1c>
     4ec:	00 c0       	rjmp	.+0      	; 0x4ee <Lcd4_Init+0x22>
     4ee:	00 00       	nop
     4f0:	83 e0       	ldi	r24, 0x03	; 3
     4f2:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     4f6:	8f ee       	ldi	r24, 0xEF	; 239
     4f8:	95 e5       	ldi	r25, 0x55	; 85
     4fa:	01 97       	sbiw	r24, 0x01	; 1
     4fc:	f1 f7       	brne	.-4      	; 0x4fa <Lcd4_Init+0x2e>
     4fe:	00 c0       	rjmp	.+0      	; 0x500 <Lcd4_Init+0x34>
     500:	00 00       	nop
     502:	83 e0       	ldi	r24, 0x03	; 3
     504:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     508:	82 e0       	ldi	r24, 0x02	; 2
     50a:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     50e:	82 e0       	ldi	r24, 0x02	; 2
     510:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     514:	88 e0       	ldi	r24, 0x08	; 8
     516:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     51a:	80 e0       	ldi	r24, 0x00	; 0
     51c:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     520:	8c e0       	ldi	r24, 0x0C	; 12
     522:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     526:	80 e0       	ldi	r24, 0x00	; 0
     528:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     52c:	86 e0       	ldi	r24, 0x06	; 6
     52e:	0e 94 1d 02 	call	0x43a	; 0x43a <Lcd4_Cmd>
     532:	08 95       	ret

00000534 <Lcd4_Write_Char>:
     534:	cf 93       	push	r28
     536:	c8 2f       	mov	r28, r24
     538:	61 e0       	ldi	r22, 0x01	; 1
     53a:	70 e0       	ldi	r23, 0x00	; 0
     53c:	8a e1       	ldi	r24, 0x1A	; 26
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     544:	8c 2f       	mov	r24, r28
     546:	82 95       	swap	r24
     548:	8f 70       	andi	r24, 0x0F	; 15
     54a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <Lcd4_Port>
     54e:	61 e0       	ldi	r22, 0x01	; 1
     550:	70 e0       	ldi	r23, 0x00	; 0
     552:	8b e1       	ldi	r24, 0x1B	; 27
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     55a:	8f ec       	ldi	r24, 0xCF	; 207
     55c:	97 e0       	ldi	r25, 0x07	; 7
     55e:	01 97       	sbiw	r24, 0x01	; 1
     560:	f1 f7       	brne	.-4      	; 0x55e <Lcd4_Write_Char+0x2a>
     562:	00 c0       	rjmp	.+0      	; 0x564 <Lcd4_Write_Char+0x30>
     564:	00 00       	nop
     566:	60 e0       	ldi	r22, 0x00	; 0
     568:	70 e0       	ldi	r23, 0x00	; 0
     56a:	8b e1       	ldi	r24, 0x1B	; 27
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     572:	8f ec       	ldi	r24, 0xCF	; 207
     574:	97 e0       	ldi	r25, 0x07	; 7
     576:	01 97       	sbiw	r24, 0x01	; 1
     578:	f1 f7       	brne	.-4      	; 0x576 <Lcd4_Write_Char+0x42>
     57a:	00 c0       	rjmp	.+0      	; 0x57c <Lcd4_Write_Char+0x48>
     57c:	00 00       	nop
     57e:	8c 2f       	mov	r24, r28
     580:	8f 70       	andi	r24, 0x0F	; 15
     582:	0e 94 dd 01 	call	0x3ba	; 0x3ba <Lcd4_Port>
     586:	61 e0       	ldi	r22, 0x01	; 1
     588:	70 e0       	ldi	r23, 0x00	; 0
     58a:	8b e1       	ldi	r24, 0x1B	; 27
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     592:	8f ec       	ldi	r24, 0xCF	; 207
     594:	97 e0       	ldi	r25, 0x07	; 7
     596:	01 97       	sbiw	r24, 0x01	; 1
     598:	f1 f7       	brne	.-4      	; 0x596 <Lcd4_Write_Char+0x62>
     59a:	00 c0       	rjmp	.+0      	; 0x59c <Lcd4_Write_Char+0x68>
     59c:	00 00       	nop
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	70 e0       	ldi	r23, 0x00	; 0
     5a2:	8b e1       	ldi	r24, 0x1B	; 27
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	0e 94 9d 00 	call	0x13a	; 0x13a <pinChange>
     5aa:	8f ec       	ldi	r24, 0xCF	; 207
     5ac:	97 e0       	ldi	r25, 0x07	; 7
     5ae:	01 97       	sbiw	r24, 0x01	; 1
     5b0:	f1 f7       	brne	.-4      	; 0x5ae <Lcd4_Write_Char+0x7a>
     5b2:	00 c0       	rjmp	.+0      	; 0x5b4 <Lcd4_Write_Char+0x80>
     5b4:	00 00       	nop
     5b6:	cf 91       	pop	r28
     5b8:	08 95       	ret

000005ba <Lcd4_Write_String>:
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
     5be:	ec 01       	movw	r28, r24
     5c0:	88 81       	ld	r24, Y
     5c2:	88 23       	and	r24, r24
     5c4:	31 f0       	breq	.+12     	; 0x5d2 <Lcd4_Write_String+0x18>
     5c6:	21 96       	adiw	r28, 0x01	; 1
     5c8:	0e 94 9a 02 	call	0x534	; 0x534 <Lcd4_Write_Char>
     5cc:	89 91       	ld	r24, Y+
     5ce:	81 11       	cpse	r24, r1
     5d0:	fb cf       	rjmp	.-10     	; 0x5c8 <Lcd4_Write_String+0xe>
     5d2:	df 91       	pop	r29
     5d4:	cf 91       	pop	r28
     5d6:	08 95       	ret

000005d8 <initData>:
time_t t;
// Methods that support the game logic:
// Initializing pin directions for I/O operations, and also the LCD screen.
int initData()
{
	DDRA = 0x00;
     5d8:	1a ba       	out	0x1a, r1	; 26
	DDRB = 0x00;
     5da:	17 ba       	out	0x17, r1	; 23

	DDRD = 0xFF;
     5dc:	8f ef       	ldi	r24, 0xFF	; 255
     5de:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;
     5e0:	84 bb       	out	0x14, r24	; 20

	Lcd4_Init();
     5e2:	0e 94 66 02 	call	0x4cc	; 0x4cc <Lcd4_Init>
	return 0;
}
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	08 95       	ret

000005ec <readButtons>:
// Reading button inputs (required to shoot the ships).
int readButtons()
{
	inButB = PINB;
     5ec:	86 b3       	in	r24, 0x16	; 22
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <inButB+0x1>
     5f4:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <inButB>
	inButA = PINA;
     5f8:	89 b3       	in	r24, 0x19	; 25
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <inButA+0x1>
     600:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <inButA>
	return 0;
}
     604:	80 e0       	ldi	r24, 0x00	; 0
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	08 95       	ret

0000060a <initRandPlaces>:
// Generating randomized (cursor) locations in order to place the ships starting from
// them.
int initRandPlaces()
{
     60a:	ef 92       	push	r14
     60c:	ff 92       	push	r15
     60e:	0f 93       	push	r16
     610:	1f 93       	push	r17
     612:	cf 93       	push	r28
     614:	df 93       	push	r29
	srand((unsigned) time(&t));
     616:	88 e0       	ldi	r24, 0x08	; 8
     618:	91 e0       	ldi	r25, 0x01	; 1
     61a:	0e 94 8a 00 	call	0x114	; 0x114 <time>
     61e:	cb 01       	movw	r24, r22
     620:	0e 94 85 0b 	call	0x170a	; 0x170a <srand>
	s1Holder = avail[rand()%6];
     624:	0e 94 80 0b 	call	0x1700	; 0x1700 <rand>
     628:	c6 e0       	ldi	r28, 0x06	; 6
     62a:	d0 e0       	ldi	r29, 0x00	; 0
     62c:	be 01       	movw	r22, r28
     62e:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__divmodhi4>
     632:	fc 01       	movw	r30, r24
     634:	ee 0f       	add	r30, r30
     636:	ff 1f       	adc	r31, r31
     638:	ec 59       	subi	r30, 0x9C	; 156
     63a:	ff 4f       	sbci	r31, 0xFF	; 255
     63c:	80 81       	ld	r24, Z
     63e:	91 81       	ldd	r25, Z+1	; 0x01
     640:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <s1Holder+0x1>
     644:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <s1Holder>
	s2Holder = avail[rand()%6];
     648:	0e 94 80 0b 	call	0x1700	; 0x1700 <rand>
     64c:	be 01       	movw	r22, r28
     64e:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__divmodhi4>
     652:	fc 01       	movw	r30, r24
     654:	ee 0f       	add	r30, r30
     656:	ff 1f       	adc	r31, r31
     658:	ec 59       	subi	r30, 0x9C	; 156
     65a:	ff 4f       	sbci	r31, 0xFF	; 255
     65c:	80 81       	ld	r24, Z
     65e:	91 81       	ldd	r25, Z+1	; 0x01
     660:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <s2Holder+0x1>
     664:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <s2Holder>
	while (s1Holder == s1Loc || s2Holder == s2Loc || s1Holder == s2Holder)
	{
		s1Holder = avail[rand()%6] * avail[rand()%6] % 10;
     668:	0a e0       	ldi	r16, 0x0A	; 10
     66a:	10 e0       	ldi	r17, 0x00	; 0
int initRandPlaces()
{
	srand((unsigned) time(&t));
	s1Holder = avail[rand()%6];
	s2Holder = avail[rand()%6];
	while (s1Holder == s1Loc || s2Holder == s2Loc || s1Holder == s2Holder)
     66c:	4c c0       	rjmp	.+152    	; 0x706 <initRandPlaces+0xfc>
	{
		s1Holder = avail[rand()%6] * avail[rand()%6] % 10;
     66e:	0e 94 80 0b 	call	0x1700	; 0x1700 <rand>
     672:	be 01       	movw	r22, r28
     674:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__divmodhi4>
     678:	fc 01       	movw	r30, r24
     67a:	ee 0f       	add	r30, r30
     67c:	ff 1f       	adc	r31, r31
     67e:	ec 59       	subi	r30, 0x9C	; 156
     680:	ff 4f       	sbci	r31, 0xFF	; 255
     682:	e0 80       	ld	r14, Z
     684:	f1 80       	ldd	r15, Z+1	; 0x01
     686:	0e 94 80 0b 	call	0x1700	; 0x1700 <rand>
     68a:	be 01       	movw	r22, r28
     68c:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__divmodhi4>
     690:	fc 01       	movw	r30, r24
     692:	ee 0f       	add	r30, r30
     694:	ff 1f       	adc	r31, r31
     696:	ec 59       	subi	r30, 0x9C	; 156
     698:	ff 4f       	sbci	r31, 0xFF	; 255
     69a:	20 81       	ld	r18, Z
     69c:	31 81       	ldd	r19, Z+1	; 0x01
     69e:	e2 9e       	mul	r14, r18
     6a0:	c0 01       	movw	r24, r0
     6a2:	e3 9e       	mul	r14, r19
     6a4:	90 0d       	add	r25, r0
     6a6:	f2 9e       	mul	r15, r18
     6a8:	90 0d       	add	r25, r0
     6aa:	11 24       	eor	r1, r1
     6ac:	b8 01       	movw	r22, r16
     6ae:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__divmodhi4>
     6b2:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <s1Holder+0x1>
     6b6:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <s1Holder>
		s2Holder = avail[rand()%6] * avail[rand()%6] % 10;
     6ba:	0e 94 80 0b 	call	0x1700	; 0x1700 <rand>
     6be:	be 01       	movw	r22, r28
     6c0:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__divmodhi4>
     6c4:	fc 01       	movw	r30, r24
     6c6:	ee 0f       	add	r30, r30
     6c8:	ff 1f       	adc	r31, r31
     6ca:	ec 59       	subi	r30, 0x9C	; 156
     6cc:	ff 4f       	sbci	r31, 0xFF	; 255
     6ce:	e0 80       	ld	r14, Z
     6d0:	f1 80       	ldd	r15, Z+1	; 0x01
     6d2:	0e 94 80 0b 	call	0x1700	; 0x1700 <rand>
     6d6:	be 01       	movw	r22, r28
     6d8:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__divmodhi4>
     6dc:	fc 01       	movw	r30, r24
     6de:	ee 0f       	add	r30, r30
     6e0:	ff 1f       	adc	r31, r31
     6e2:	ec 59       	subi	r30, 0x9C	; 156
     6e4:	ff 4f       	sbci	r31, 0xFF	; 255
     6e6:	20 81       	ld	r18, Z
     6e8:	31 81       	ldd	r19, Z+1	; 0x01
     6ea:	e2 9e       	mul	r14, r18
     6ec:	c0 01       	movw	r24, r0
     6ee:	e3 9e       	mul	r14, r19
     6f0:	90 0d       	add	r25, r0
     6f2:	f2 9e       	mul	r15, r18
     6f4:	90 0d       	add	r25, r0
     6f6:	11 24       	eor	r1, r1
     6f8:	b8 01       	movw	r22, r16
     6fa:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__divmodhi4>
     6fe:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <s2Holder+0x1>
     702:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <s2Holder>
int initRandPlaces()
{
	srand((unsigned) time(&t));
	s1Holder = avail[rand()%6];
	s2Holder = avail[rand()%6];
	while (s1Holder == s1Loc || s2Holder == s2Loc || s1Holder == s2Holder)
     706:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <s1Holder>
     70a:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <s1Holder+0x1>
     70e:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <s1Loc>
     712:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <s1Loc+0x1>
     716:	82 17       	cp	r24, r18
     718:	93 07       	cpc	r25, r19
     71a:	09 f4       	brne	.+2      	; 0x71e <initRandPlaces+0x114>
     71c:	a8 cf       	rjmp	.-176    	; 0x66e <initRandPlaces+0x64>
     71e:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <s2Holder>
     722:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <s2Holder+0x1>
     726:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <s2Loc>
     72a:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <s2Loc+0x1>
     72e:	24 17       	cp	r18, r20
     730:	35 07       	cpc	r19, r21
     732:	09 f4       	brne	.+2      	; 0x736 <initRandPlaces+0x12c>
     734:	9c cf       	rjmp	.-200    	; 0x66e <initRandPlaces+0x64>
     736:	82 17       	cp	r24, r18
     738:	93 07       	cpc	r25, r19
     73a:	09 f4       	brne	.+2      	; 0x73e <initRandPlaces+0x134>
     73c:	98 cf       	rjmp	.-208    	; 0x66e <initRandPlaces+0x64>
	{
		s1Holder = avail[rand()%6] * avail[rand()%6] % 10;
		s2Holder = avail[rand()%6] * avail[rand()%6] % 10;
	}
	return 0;
}
     73e:	80 e0       	ldi	r24, 0x00	; 0
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	df 91       	pop	r29
     744:	cf 91       	pop	r28
     746:	1f 91       	pop	r17
     748:	0f 91       	pop	r16
     74a:	ff 90       	pop	r15
     74c:	ef 90       	pop	r14
     74e:	08 95       	ret

00000750 <printShip>:
// Placing the ships in the UI (LCD screen).
int printShip(int row, int col, char ship[])
{
     750:	cf 93       	push	r28
     752:	df 93       	push	r29
     754:	ea 01       	movw	r28, r20
	Lcd4_Set_Cursor(row,col);
     756:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Set_Cursor>
	Lcd4_Write_String(ship);
     75a:	ce 01       	movw	r24, r28
     75c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <Lcd4_Write_String>
	return 0;
}
     760:	80 e0       	ldi	r24, 0x00	; 0
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	df 91       	pop	r29
     766:	cf 91       	pop	r28
     768:	08 95       	ret

0000076a <initShips>:
// Initializing ships according to their randomized places.
int initShips(int* i)
{
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
	if(*i)
     76e:	fc 01       	movw	r30, r24
     770:	20 81       	ld	r18, Z
     772:	31 81       	ldd	r19, Z+1	; 0x01
     774:	23 2b       	or	r18, r19
     776:	09 f4       	brne	.+2      	; 0x77a <initShips+0x10>
     778:	48 c0       	rjmp	.+144    	; 0x80a <initShips+0xa0>
     77a:	ec 01       	movw	r28, r24
	{
		s1Loc = s1Holder;
     77c:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <s1Holder>
     780:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <s1Holder+0x1>
     784:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <s1Loc+0x1>
     788:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <s1Loc>
		printShip(1,s1Loc,s1);
     78c:	4a e7       	ldi	r20, 0x7A	; 122
     78e:	50 e0       	ldi	r21, 0x00	; 0
     790:	81 e0       	ldi	r24, 0x01	; 1
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	0e 94 a8 03 	call	0x750	; 0x750 <printShip>
		s2Loc = s2Holder;
     798:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <s2Holder>
     79c:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <s2Holder+0x1>
     7a0:	70 93 1b 01 	sts	0x011B, r23	; 0x80011b <s2Loc+0x1>
     7a4:	60 93 1a 01 	sts	0x011A, r22	; 0x80011a <s2Loc>
		printShip(2,s2Loc,s2);
     7a8:	43 e7       	ldi	r20, 0x73	; 115
     7aa:	50 e0       	ldi	r21, 0x00	; 0
     7ac:	82 e0       	ldi	r24, 0x02	; 2
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	0e 94 a8 03 	call	0x750	; 0x750 <printShip>
		s3Holder = (s1Holder + 6) % 16;
     7b4:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <s1Holder>
     7b8:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <s1Holder+0x1>
     7bc:	6a 5f       	subi	r22, 0xFA	; 250
     7be:	7f 4f       	sbci	r23, 0xFF	; 255
     7c0:	6f 70       	andi	r22, 0x0F	; 15
     7c2:	70 78       	andi	r23, 0x80	; 128
     7c4:	77 23       	and	r23, r23
     7c6:	34 f4       	brge	.+12     	; 0x7d4 <initShips+0x6a>
     7c8:	61 50       	subi	r22, 0x01	; 1
     7ca:	71 09       	sbc	r23, r1
     7cc:	60 6f       	ori	r22, 0xF0	; 240
     7ce:	7f 6f       	ori	r23, 0xFF	; 255
     7d0:	6f 5f       	subi	r22, 0xFF	; 255
     7d2:	7f 4f       	sbci	r23, 0xFF	; 255
     7d4:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <s3Holder+0x1>
     7d8:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <s3Holder>
		s3Loc = s3Holder;
     7dc:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <s3Loc+0x1>
     7e0:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <s3Loc>
		printShip(1,s3Loc,s3);
     7e4:	40 e7       	ldi	r20, 0x70	; 112
     7e6:	50 e0       	ldi	r21, 0x00	; 0
     7e8:	81 e0       	ldi	r24, 0x01	; 1
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	0e 94 a8 03 	call	0x750	; 0x750 <printShip>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7f0:	ff ef       	ldi	r31, 0xFF	; 255
     7f2:	2d e3       	ldi	r18, 0x3D	; 61
     7f4:	89 e4       	ldi	r24, 0x49	; 73
     7f6:	f1 50       	subi	r31, 0x01	; 1
     7f8:	20 40       	sbci	r18, 0x00	; 0
     7fa:	80 40       	sbci	r24, 0x00	; 0
     7fc:	e1 f7       	brne	.-8      	; 0x7f6 <initShips+0x8c>
     7fe:	00 c0       	rjmp	.+0      	; 0x800 <initShips+0x96>
     800:	00 00       	nop
		_delay_ms(3000);
		Lcd4_Clear();
     802:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Clear>
		*i = 0;
     806:	19 82       	std	Y+1, r1	; 0x01
     808:	18 82       	st	Y, r1
	}
	return 0;
}
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	df 91       	pop	r29
     810:	cf 91       	pop	r28
     812:	08 95       	ret

00000814 <placeShips>:
// Placing ships in the domain, according to their cursor locations.
// These locations will be utilized when checking whether the taken shots hit a ship.
int placeShips(int loc1, int loc2)
{
     814:	4f 92       	push	r4
     816:	5f 92       	push	r5
     818:	6f 92       	push	r6
     81a:	7f 92       	push	r7
     81c:	af 92       	push	r10
     81e:	bf 92       	push	r11
     820:	cf 92       	push	r12
     822:	df 92       	push	r13
     824:	ef 92       	push	r14
     826:	ff 92       	push	r15
     828:	0f 93       	push	r16
     82a:	1f 93       	push	r17
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	00 d0       	rcall	.+0      	; 0x832 <placeShips+0x1e>
     832:	00 d0       	rcall	.+0      	; 0x834 <placeShips+0x20>
     834:	00 d0       	rcall	.+0      	; 0x836 <placeShips+0x22>
     836:	cd b7       	in	r28, 0x3d	; 61
     838:	de b7       	in	r29, 0x3e	; 62
	int starter1 = 0;
	int starter2 = 0;
	switch (loc1)
     83a:	84 30       	cpi	r24, 0x04	; 4
     83c:	91 05       	cpc	r25, r1
     83e:	c9 f0       	breq	.+50     	; 0x872 <__stack+0x13>
     840:	2c f4       	brge	.+10     	; 0x84c <placeShips+0x38>
     842:	00 97       	sbiw	r24, 0x00	; 0
     844:	61 f0       	breq	.+24     	; 0x85e <placeShips+0x4a>
     846:	02 97       	sbiw	r24, 0x02	; 2
     848:	79 f0       	breq	.+30     	; 0x868 <__stack+0x9>
     84a:	27 c0       	rjmp	.+78     	; 0x89a <__stack+0x3b>
     84c:	88 30       	cpi	r24, 0x08	; 8
     84e:	91 05       	cpc	r25, r1
     850:	d1 f0       	breq	.+52     	; 0x886 <__stack+0x27>
     852:	8a 30       	cpi	r24, 0x0A	; 10
     854:	91 05       	cpc	r25, r1
     856:	e1 f0       	breq	.+56     	; 0x890 <__stack+0x31>
     858:	06 97       	sbiw	r24, 0x06	; 6
     85a:	f9 f4       	brne	.+62     	; 0x89a <__stack+0x3b>
     85c:	0f c0       	rjmp	.+30     	; 0x87c <__stack+0x1d>
	{
		case 0: starter1 = 128;
     85e:	68 94       	set
     860:	aa 24       	eor	r10, r10
     862:	a7 f8       	bld	r10, 7
     864:	b1 2c       	mov	r11, r1
     866:	1b c0       	rjmp	.+54     	; 0x89e <__stack+0x3f>
		break;
		case 2: starter1 = 64;
     868:	68 94       	set
     86a:	aa 24       	eor	r10, r10
     86c:	a6 f8       	bld	r10, 6
     86e:	b1 2c       	mov	r11, r1
		break;
     870:	16 c0       	rjmp	.+44     	; 0x89e <__stack+0x3f>
		case 4: starter1 = 32;
     872:	68 94       	set
     874:	aa 24       	eor	r10, r10
     876:	a5 f8       	bld	r10, 5
     878:	b1 2c       	mov	r11, r1
		break;
     87a:	11 c0       	rjmp	.+34     	; 0x89e <__stack+0x3f>
		case 6: starter1 = 16;
     87c:	68 94       	set
     87e:	aa 24       	eor	r10, r10
     880:	a4 f8       	bld	r10, 4
     882:	b1 2c       	mov	r11, r1
		break;
     884:	0c c0       	rjmp	.+24     	; 0x89e <__stack+0x3f>
		case 8: starter1 = 8;
     886:	68 94       	set
     888:	aa 24       	eor	r10, r10
     88a:	a3 f8       	bld	r10, 3
     88c:	b1 2c       	mov	r11, r1
		break;
     88e:	07 c0       	rjmp	.+14     	; 0x89e <__stack+0x3f>
		case 10: starter1 = 4;
     890:	68 94       	set
     892:	aa 24       	eor	r10, r10
     894:	a2 f8       	bld	r10, 2
     896:	b1 2c       	mov	r11, r1
		break;
     898:	02 c0       	rjmp	.+4      	; 0x89e <__stack+0x3f>
}
// Placing ships in the domain, according to their cursor locations.
// These locations will be utilized when checking whether the taken shots hit a ship.
int placeShips(int loc1, int loc2)
{
	int starter1 = 0;
     89a:	a1 2c       	mov	r10, r1
     89c:	b1 2c       	mov	r11, r1
		break;
		case 10: starter1 = 4;
		break;
		default: break;
	}
	switch (loc2)
     89e:	64 30       	cpi	r22, 0x04	; 4
     8a0:	71 05       	cpc	r23, r1
     8a2:	e1 f0       	breq	.+56     	; 0x8dc <__stack+0x7d>
     8a4:	3c f4       	brge	.+14     	; 0x8b4 <__stack+0x55>
     8a6:	61 15       	cp	r22, r1
     8a8:	71 05       	cpc	r23, r1
     8aa:	71 f0       	breq	.+28     	; 0x8c8 <__stack+0x69>
     8ac:	62 30       	cpi	r22, 0x02	; 2
     8ae:	71 05       	cpc	r23, r1
     8b0:	81 f0       	breq	.+32     	; 0x8d2 <__stack+0x73>
     8b2:	28 c0       	rjmp	.+80     	; 0x904 <__stack+0xa5>
     8b4:	68 30       	cpi	r22, 0x08	; 8
     8b6:	71 05       	cpc	r23, r1
     8b8:	d9 f0       	breq	.+54     	; 0x8f0 <__stack+0x91>
     8ba:	6a 30       	cpi	r22, 0x0A	; 10
     8bc:	71 05       	cpc	r23, r1
     8be:	e9 f0       	breq	.+58     	; 0x8fa <__stack+0x9b>
     8c0:	66 30       	cpi	r22, 0x06	; 6
     8c2:	71 05       	cpc	r23, r1
     8c4:	f9 f4       	brne	.+62     	; 0x904 <__stack+0xa5>
     8c6:	0f c0       	rjmp	.+30     	; 0x8e6 <__stack+0x87>
	{
		case 0: starter2 = 128;
     8c8:	68 94       	set
     8ca:	ee 24       	eor	r14, r14
     8cc:	e7 f8       	bld	r14, 7
     8ce:	f1 2c       	mov	r15, r1
     8d0:	1b c0       	rjmp	.+54     	; 0x908 <__stack+0xa9>
		break;
		case 2: starter2 = 64;
     8d2:	68 94       	set
     8d4:	ee 24       	eor	r14, r14
     8d6:	e6 f8       	bld	r14, 6
     8d8:	f1 2c       	mov	r15, r1
		break;
     8da:	16 c0       	rjmp	.+44     	; 0x908 <__stack+0xa9>
		case 4: starter2 = 32;
     8dc:	68 94       	set
     8de:	ee 24       	eor	r14, r14
     8e0:	e5 f8       	bld	r14, 5
     8e2:	f1 2c       	mov	r15, r1
		break;
     8e4:	11 c0       	rjmp	.+34     	; 0x908 <__stack+0xa9>
		case 6: starter2 = 16;
     8e6:	68 94       	set
     8e8:	ee 24       	eor	r14, r14
     8ea:	e4 f8       	bld	r14, 4
     8ec:	f1 2c       	mov	r15, r1
		break;
     8ee:	0c c0       	rjmp	.+24     	; 0x908 <__stack+0xa9>
		case 8: starter2 = 8;
     8f0:	68 94       	set
     8f2:	ee 24       	eor	r14, r14
     8f4:	e3 f8       	bld	r14, 3
     8f6:	f1 2c       	mov	r15, r1
		break;
     8f8:	07 c0       	rjmp	.+14     	; 0x908 <__stack+0xa9>
		case 10: starter2 = 4;
     8fa:	68 94       	set
     8fc:	ee 24       	eor	r14, r14
     8fe:	e2 f8       	bld	r14, 2
     900:	f1 2c       	mov	r15, r1
		break;
     902:	02 c0       	rjmp	.+4      	; 0x908 <__stack+0xa9>
// Placing ships in the domain, according to their cursor locations.
// These locations will be utilized when checking whether the taken shots hit a ship.
int placeShips(int loc1, int loc2)
{
	int starter1 = 0;
	int starter2 = 0;
     904:	e1 2c       	mov	r14, r1
     906:	f1 2c       	mov	r15, r1
		break;
		default: break;
	}
	for(int i=0; i<2; i++)
	{
		s1Num[i] = starter1/pow(2,i);
     908:	b5 01       	movw	r22, r10
     90a:	0b 2c       	mov	r0, r11
     90c:	00 0c       	add	r0, r0
     90e:	88 0b       	sbc	r24, r24
     910:	99 0b       	sbc	r25, r25
     912:	0e 94 21 08 	call	0x1042	; 0x1042 <__floatsisf>
     916:	69 83       	std	Y+1, r22	; 0x01
     918:	7a 83       	std	Y+2, r23	; 0x02
     91a:	8b 83       	std	Y+3, r24	; 0x03
     91c:	9c 83       	std	Y+4, r25	; 0x04
     91e:	e4 e1       	ldi	r30, 0x14	; 20
     920:	f1 e0       	ldi	r31, 0x01	; 1
     922:	b1 82       	std	Z+1, r11	; 0x01
     924:	a0 82       	st	Z, r10
     926:	20 e0       	ldi	r18, 0x00	; 0
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	40 e0       	ldi	r20, 0x00	; 0
     92c:	5f e3       	ldi	r21, 0x3F	; 63
     92e:	0e 94 ad 08 	call	0x115a	; 0x115a <__mulsf3>
     932:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <__fixsfsi>
     936:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <s1Num+0x3>
     93a:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <s1Num+0x2>
     93e:	0e e1       	ldi	r16, 0x1E	; 30
     940:	11 e0       	ldi	r17, 0x01	; 1
     942:	1e 82       	std	Y+6, r1	; 0x06
     944:	1d 82       	std	Y+5, r1	; 0x05
	}
	for(int j=0; j<3; j++)
	{
		s2Num[j] = starter2/pow(2,j);
     946:	27 01       	movw	r4, r14
     948:	ff 0c       	add	r15, r15
     94a:	66 08       	sbc	r6, r6
     94c:	77 08       	sbc	r7, r7
     94e:	2d 81       	ldd	r18, Y+5	; 0x05
     950:	3e 81       	ldd	r19, Y+6	; 0x06
     952:	b9 01       	movw	r22, r18
     954:	33 0f       	add	r19, r19
     956:	88 0b       	sbc	r24, r24
     958:	99 0b       	sbc	r25, r25
     95a:	0e 94 21 08 	call	0x1042	; 0x1042 <__floatsisf>
     95e:	9b 01       	movw	r18, r22
     960:	ac 01       	movw	r20, r24
     962:	60 e0       	ldi	r22, 0x00	; 0
     964:	70 e0       	ldi	r23, 0x00	; 0
     966:	80 e0       	ldi	r24, 0x00	; 0
     968:	90 e4       	ldi	r25, 0x40	; 64
     96a:	0e 94 1a 09 	call	0x1234	; 0x1234 <pow>
     96e:	6b 01       	movw	r12, r22
     970:	7c 01       	movw	r14, r24
     972:	c3 01       	movw	r24, r6
     974:	b2 01       	movw	r22, r4
     976:	0e 94 21 08 	call	0x1042	; 0x1042 <__floatsisf>
     97a:	a7 01       	movw	r20, r14
     97c:	96 01       	movw	r18, r12
     97e:	0e 94 77 07 	call	0xeee	; 0xeee <__divsf3>
     982:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <__fixsfsi>
     986:	f8 01       	movw	r30, r16
     988:	61 93       	st	Z+, r22
     98a:	71 93       	st	Z+, r23
     98c:	8f 01       	movw	r16, r30
	}
	for(int i=0; i<2; i++)
	{
		s1Num[i] = starter1/pow(2,i);
	}
	for(int j=0; j<3; j++)
     98e:	2d 81       	ldd	r18, Y+5	; 0x05
     990:	3e 81       	ldd	r19, Y+6	; 0x06
     992:	2f 5f       	subi	r18, 0xFF	; 255
     994:	3f 4f       	sbci	r19, 0xFF	; 255
     996:	3e 83       	std	Y+6, r19	; 0x06
     998:	2d 83       	std	Y+5, r18	; 0x05
     99a:	23 30       	cpi	r18, 0x03	; 3
     99c:	31 05       	cpc	r19, r1
     99e:	b9 f6       	brne	.-82     	; 0x94e <__stack+0xef>
	{
		s2Num[j] = starter2/pow(2,j);
	}
	if (starter1 != 4)
     9a0:	34 e0       	ldi	r19, 0x04	; 4
     9a2:	a3 16       	cp	r10, r19
     9a4:	b1 04       	cpc	r11, r1
     9a6:	81 f0       	breq	.+32     	; 0x9c8 <__stack+0x169>
	{
		s3Num[0] = starter1/pow(2,3);
     9a8:	20 e0       	ldi	r18, 0x00	; 0
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	40 e0       	ldi	r20, 0x00	; 0
     9ae:	5e e3       	ldi	r21, 0x3E	; 62
     9b0:	69 81       	ldd	r22, Y+1	; 0x01
     9b2:	7a 81       	ldd	r23, Y+2	; 0x02
     9b4:	8b 81       	ldd	r24, Y+3	; 0x03
     9b6:	9c 81       	ldd	r25, Y+4	; 0x04
     9b8:	0e 94 ad 08 	call	0x115a	; 0x115a <__mulsf3>
     9bc:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <__fixsfsi>
     9c0:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <s3Num+0x1>
     9c4:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <s3Num>
	else
	{
		s3Num[0] == 128;
	}
	return 0;
}
     9c8:	80 e0       	ldi	r24, 0x00	; 0
     9ca:	90 e0       	ldi	r25, 0x00	; 0
     9cc:	26 96       	adiw	r28, 0x06	; 6
     9ce:	0f b6       	in	r0, 0x3f	; 63
     9d0:	f8 94       	cli
     9d2:	de bf       	out	0x3e, r29	; 62
     9d4:	0f be       	out	0x3f, r0	; 63
     9d6:	cd bf       	out	0x3d, r28	; 61
     9d8:	df 91       	pop	r29
     9da:	cf 91       	pop	r28
     9dc:	1f 91       	pop	r17
     9de:	0f 91       	pop	r16
     9e0:	ff 90       	pop	r15
     9e2:	ef 90       	pop	r14
     9e4:	df 90       	pop	r13
     9e6:	cf 90       	pop	r12
     9e8:	bf 90       	pop	r11
     9ea:	af 90       	pop	r10
     9ec:	7f 90       	pop	r7
     9ee:	6f 90       	pop	r6
     9f0:	5f 90       	pop	r5
     9f2:	4f 90       	pop	r4
     9f4:	08 95       	ret

000009f6 <printDamage>:
// Printing the shot portion of a ship.
int printDamage(int row, int col, char p1, char p2)
{
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	d4 2f       	mov	r29, r20
     9fc:	c2 2f       	mov	r28, r18
	Lcd4_Set_Cursor(row, col);
     9fe:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Set_Cursor>
	Lcd4_Write_Char(p1);
     a02:	8d 2f       	mov	r24, r29
     a04:	0e 94 9a 02 	call	0x534	; 0x534 <Lcd4_Write_Char>
	Lcd4_Write_Char(p2);
     a08:	8c 2f       	mov	r24, r28
     a0a:	0e 94 9a 02 	call	0x534	; 0x534 <Lcd4_Write_Char>
	return 0;
}
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	df 91       	pop	r29
     a14:	cf 91       	pop	r28
     a16:	08 95       	ret

00000a18 <evalButtons>:
// Checking whether the button inputs have indeed hit a ship.
int evalButtons(int a, int b)
{
	if(b == 0)
     a18:	61 15       	cp	r22, r1
     a1a:	71 05       	cpc	r23, r1
     a1c:	09 f0       	breq	.+2      	; 0xa20 <evalButtons+0x8>
     a1e:	81 c0       	rjmp	.+258    	; 0xb22 <evalButtons+0x10a>
	{
		if (a == s1Num[0])
     a20:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <s1Num>
     a24:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <s1Num+0x1>
     a28:	28 17       	cp	r18, r24
     a2a:	39 07       	cpc	r19, r25
     a2c:	19 f5       	brne	.+70     	; 0xa74 <evalButtons+0x5c>
		{
			if(s1[0] != '#' && s1[1] != '#')
     a2e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <s1>
     a32:	83 32       	cpi	r24, 0x23	; 35
     a34:	09 f4       	brne	.+2      	; 0xa38 <evalButtons+0x20>
     a36:	f4 c0       	rjmp	.+488    	; 0xc20 <evalButtons+0x208>
     a38:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <s1+0x1>
     a3c:	83 32       	cpi	r24, 0x23	; 35
     a3e:	09 f4       	brne	.+2      	; 0xa42 <evalButtons+0x2a>
     a40:	ef c0       	rjmp	.+478    	; 0xc20 <evalButtons+0x208>
			{
				generalStat = generalStat + 1;
     a42:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <generalStat>
     a46:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <generalStat+0x1>
     a4a:	01 96       	adiw	r24, 0x01	; 1
     a4c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <generalStat+0x1>
     a50:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <generalStat>
				for(int i=0; i<2; i++)
				{
					s1[i] = '#';
     a54:	ea e7       	ldi	r30, 0x7A	; 122
     a56:	f0 e0       	ldi	r31, 0x00	; 0
     a58:	83 e2       	ldi	r24, 0x23	; 35
     a5a:	80 83       	st	Z, r24
     a5c:	81 83       	std	Z+1, r24	; 0x01
				}
				printDamage(1, s1Loc, s1[0], s1[1]);
     a5e:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <s1Loc>
     a62:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <s1Loc+0x1>
     a66:	23 e2       	ldi	r18, 0x23	; 35
     a68:	43 e2       	ldi	r20, 0x23	; 35
     a6a:	81 e0       	ldi	r24, 0x01	; 1
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <printDamage>
     a72:	d6 c0       	rjmp	.+428    	; 0xc20 <evalButtons+0x208>
			}
		}
		else if (a == s1Num[1])
     a74:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <s1Num+0x2>
     a78:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <s1Num+0x3>
     a7c:	82 17       	cp	r24, r18
     a7e:	93 07       	cpc	r25, r19
     a80:	29 f5       	brne	.+74     	; 0xacc <evalButtons+0xb4>
		{
			if(s1[2] != '#' && s1[3] != '#')
     a82:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <s1+0x2>
     a86:	83 32       	cpi	r24, 0x23	; 35
     a88:	09 f4       	brne	.+2      	; 0xa8c <evalButtons+0x74>
     a8a:	ca c0       	rjmp	.+404    	; 0xc20 <evalButtons+0x208>
     a8c:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <s1+0x3>
     a90:	83 32       	cpi	r24, 0x23	; 35
     a92:	09 f4       	brne	.+2      	; 0xa96 <evalButtons+0x7e>
     a94:	c5 c0       	rjmp	.+394    	; 0xc20 <evalButtons+0x208>
			{
				generalStat = generalStat + 1;
     a96:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <generalStat>
     a9a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <generalStat+0x1>
     a9e:	01 96       	adiw	r24, 0x01	; 1
     aa0:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <generalStat+0x1>
     aa4:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <generalStat>
				for(int i=2; i<4; i++)
				{
					s1[i] = '#';
     aa8:	ea e7       	ldi	r30, 0x7A	; 122
     aaa:	f0 e0       	ldi	r31, 0x00	; 0
     aac:	83 e2       	ldi	r24, 0x23	; 35
     aae:	82 83       	std	Z+2, r24	; 0x02
     ab0:	83 83       	std	Z+3, r24	; 0x03
				}
				printDamage(1, s1Loc + 2, s1[2], s1[3]);
     ab2:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <s1Loc>
     ab6:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <s1Loc+0x1>
     aba:	6e 5f       	subi	r22, 0xFE	; 254
     abc:	7f 4f       	sbci	r23, 0xFF	; 255
     abe:	23 e2       	ldi	r18, 0x23	; 35
     ac0:	43 e2       	ldi	r20, 0x23	; 35
     ac2:	81 e0       	ldi	r24, 0x01	; 1
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <printDamage>
     aca:	aa c0       	rjmp	.+340    	; 0xc20 <evalButtons+0x208>
			}
		}
		else if (a == s3Num[0])
     acc:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <s3Num>
     ad0:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <s3Num+0x1>
     ad4:	82 17       	cp	r24, r18
     ad6:	93 07       	cpc	r25, r19
     ad8:	09 f0       	breq	.+2      	; 0xadc <evalButtons+0xc4>
     ada:	a2 c0       	rjmp	.+324    	; 0xc20 <evalButtons+0x208>
		{
			if(s3[0] != '#' && s3[1] != '#')
     adc:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <s3>
     ae0:	83 32       	cpi	r24, 0x23	; 35
     ae2:	09 f4       	brne	.+2      	; 0xae6 <evalButtons+0xce>
     ae4:	9d c0       	rjmp	.+314    	; 0xc20 <evalButtons+0x208>
     ae6:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <s3+0x1>
     aea:	83 32       	cpi	r24, 0x23	; 35
     aec:	09 f4       	brne	.+2      	; 0xaf0 <evalButtons+0xd8>
     aee:	98 c0       	rjmp	.+304    	; 0xc20 <evalButtons+0x208>
			{
				generalStat = generalStat + 1;
     af0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <generalStat>
     af4:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <generalStat+0x1>
     af8:	01 96       	adiw	r24, 0x01	; 1
     afa:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <generalStat+0x1>
     afe:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <generalStat>
				for(int i=0; i<2; i++)
				{
					s3[i] = '#';
     b02:	e0 e7       	ldi	r30, 0x70	; 112
     b04:	f0 e0       	ldi	r31, 0x00	; 0
     b06:	83 e2       	ldi	r24, 0x23	; 35
     b08:	80 83       	st	Z, r24
     b0a:	81 83       	std	Z+1, r24	; 0x01
				}
				printDamage(1, s3Loc, s3[0], s3[1]);
     b0c:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <s3Loc>
     b10:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <s3Loc+0x1>
     b14:	23 e2       	ldi	r18, 0x23	; 35
     b16:	43 e2       	ldi	r20, 0x23	; 35
     b18:	81 e0       	ldi	r24, 0x01	; 1
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <printDamage>
     b20:	7f c0       	rjmp	.+254    	; 0xc20 <evalButtons+0x208>
			}
		}
	}
	else
	{
		if (b == s2Num[0])
     b22:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <s2Num>
     b26:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <s2Num+0x1>
     b2a:	68 17       	cp	r22, r24
     b2c:	79 07       	cpc	r23, r25
     b2e:	19 f5       	brne	.+70     	; 0xb76 <evalButtons+0x15e>
		{
			if(s2[0] != '#' && s2[1] != '#')
     b30:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <s2>
     b34:	83 32       	cpi	r24, 0x23	; 35
     b36:	09 f4       	brne	.+2      	; 0xb3a <evalButtons+0x122>
     b38:	73 c0       	rjmp	.+230    	; 0xc20 <evalButtons+0x208>
     b3a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <s2+0x1>
     b3e:	83 32       	cpi	r24, 0x23	; 35
     b40:	09 f4       	brne	.+2      	; 0xb44 <evalButtons+0x12c>
     b42:	6e c0       	rjmp	.+220    	; 0xc20 <evalButtons+0x208>
			{
				generalStat = generalStat + 1;
     b44:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <generalStat>
     b48:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <generalStat+0x1>
     b4c:	01 96       	adiw	r24, 0x01	; 1
     b4e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <generalStat+0x1>
     b52:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <generalStat>
				for(int i=0; i<2; i++)
				{
					s2[i] = '#';
     b56:	e3 e7       	ldi	r30, 0x73	; 115
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	83 e2       	ldi	r24, 0x23	; 35
     b5c:	80 83       	st	Z, r24
     b5e:	81 83       	std	Z+1, r24	; 0x01
				}
				printDamage(2, s2Loc, s2[0], s2[1]);
     b60:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <s2Loc>
     b64:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <s2Loc+0x1>
     b68:	23 e2       	ldi	r18, 0x23	; 35
     b6a:	43 e2       	ldi	r20, 0x23	; 35
     b6c:	82 e0       	ldi	r24, 0x02	; 2
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <printDamage>
     b74:	55 c0       	rjmp	.+170    	; 0xc20 <evalButtons+0x208>
			}
		}
		else if (b == s2Num[1])
     b76:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <s2Num+0x2>
     b7a:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <s2Num+0x3>
     b7e:	68 17       	cp	r22, r24
     b80:	79 07       	cpc	r23, r25
     b82:	29 f5       	brne	.+74     	; 0xbce <evalButtons+0x1b6>
		{
			if(s2[2] != '#' && s2[3] != '#')
     b84:	80 91 75 00 	lds	r24, 0x0075	; 0x800075 <s2+0x2>
     b88:	83 32       	cpi	r24, 0x23	; 35
     b8a:	09 f4       	brne	.+2      	; 0xb8e <evalButtons+0x176>
     b8c:	49 c0       	rjmp	.+146    	; 0xc20 <evalButtons+0x208>
     b8e:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <s2+0x3>
     b92:	83 32       	cpi	r24, 0x23	; 35
     b94:	09 f4       	brne	.+2      	; 0xb98 <evalButtons+0x180>
     b96:	44 c0       	rjmp	.+136    	; 0xc20 <evalButtons+0x208>
			{
				generalStat = generalStat + 1;
     b98:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <generalStat>
     b9c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <generalStat+0x1>
     ba0:	01 96       	adiw	r24, 0x01	; 1
     ba2:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <generalStat+0x1>
     ba6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <generalStat>
				for(int i=2; i<4; i++)
				{
					s2[i] = '#';
     baa:	e3 e7       	ldi	r30, 0x73	; 115
     bac:	f0 e0       	ldi	r31, 0x00	; 0
     bae:	83 e2       	ldi	r24, 0x23	; 35
     bb0:	82 83       	std	Z+2, r24	; 0x02
     bb2:	83 83       	std	Z+3, r24	; 0x03
				}
				printDamage(2, s2Loc + 2, s2[2], s2[3]);
     bb4:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <s2Loc>
     bb8:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <s2Loc+0x1>
     bbc:	6e 5f       	subi	r22, 0xFE	; 254
     bbe:	7f 4f       	sbci	r23, 0xFF	; 255
     bc0:	23 e2       	ldi	r18, 0x23	; 35
     bc2:	43 e2       	ldi	r20, 0x23	; 35
     bc4:	82 e0       	ldi	r24, 0x02	; 2
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <printDamage>
     bcc:	29 c0       	rjmp	.+82     	; 0xc20 <evalButtons+0x208>
			}
		}
		else if (b == s2Num[2])
     bce:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <s2Num+0x4>
     bd2:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <s2Num+0x5>
     bd6:	68 17       	cp	r22, r24
     bd8:	79 07       	cpc	r23, r25
     bda:	11 f5       	brne	.+68     	; 0xc20 <evalButtons+0x208>
		{
			if(s2[4] != '#' && s2[5] != '#')
     bdc:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <s2+0x4>
     be0:	83 32       	cpi	r24, 0x23	; 35
     be2:	f1 f0       	breq	.+60     	; 0xc20 <evalButtons+0x208>
     be4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <s2+0x5>
     be8:	83 32       	cpi	r24, 0x23	; 35
     bea:	d1 f0       	breq	.+52     	; 0xc20 <evalButtons+0x208>
			{
				generalStat = generalStat + 1;
     bec:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <generalStat>
     bf0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <generalStat+0x1>
     bf4:	01 96       	adiw	r24, 0x01	; 1
     bf6:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <generalStat+0x1>
     bfa:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <generalStat>
				for(int i=4; i<6; i++)
				{
					s2[i] = '#';
     bfe:	e3 e7       	ldi	r30, 0x73	; 115
     c00:	f0 e0       	ldi	r31, 0x00	; 0
     c02:	83 e2       	ldi	r24, 0x23	; 35
     c04:	84 83       	std	Z+4, r24	; 0x04
     c06:	85 83       	std	Z+5, r24	; 0x05
				}
				printDamage(2, s2Loc + 4, s2[4], s2[5]);
     c08:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <s2Loc>
     c0c:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <s2Loc+0x1>
     c10:	6c 5f       	subi	r22, 0xFC	; 252
     c12:	7f 4f       	sbci	r23, 0xFF	; 255
     c14:	23 e2       	ldi	r18, 0x23	; 35
     c16:	43 e2       	ldi	r20, 0x23	; 35
     c18:	82 e0       	ldi	r24, 0x02	; 2
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <printDamage>
			}
		}
	}
	return 0;
}
     c20:	80 e0       	ldi	r24, 0x00	; 0
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	08 95       	ret

00000c26 <resetShips>:
// Resetting ship data.
int resetShips()
{
	strcpy(s1,"IHH>");
     c26:	85 e0       	ldi	r24, 0x05	; 5
     c28:	e5 eb       	ldi	r30, 0xB5	; 181
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	aa e7       	ldi	r26, 0x7A	; 122
     c2e:	b0 e0       	ldi	r27, 0x00	; 0
     c30:	01 90       	ld	r0, Z+
     c32:	0d 92       	st	X+, r0
     c34:	8a 95       	dec	r24
     c36:	e1 f7       	brne	.-8      	; 0xc30 <resetShips+0xa>
	strcpy(s2,"IHHHH>");
     c38:	87 e0       	ldi	r24, 0x07	; 7
     c3a:	ea eb       	ldi	r30, 0xBA	; 186
     c3c:	f0 e0       	ldi	r31, 0x00	; 0
     c3e:	a3 e7       	ldi	r26, 0x73	; 115
     c40:	b0 e0       	ldi	r27, 0x00	; 0
     c42:	01 90       	ld	r0, Z+
     c44:	0d 92       	st	X+, r0
     c46:	8a 95       	dec	r24
     c48:	e1 f7       	brne	.-8      	; 0xc42 <resetShips+0x1c>
	strcpy(s3,"I>");
     c4a:	89 e4       	ldi	r24, 0x49	; 73
     c4c:	9e e3       	ldi	r25, 0x3E	; 62
     c4e:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <s3+0x1>
     c52:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <s3>
     c56:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <s3+0x2>
	return 0;
}
     c5a:	80 e0       	ldi	r24, 0x00	; 0
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	08 95       	ret

00000c60 <resetStats>:
// Resetting fields that are necessary to reinitiate the game.
int resetStats()
{
	generalStat = 0;
     c60:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <generalStat+0x1>
     c64:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <generalStat>
	totMoves = 0;
     c68:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <__data_end+0x1>
     c6c:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
	init = 1;
     c70:	81 e0       	ldi	r24, 0x01	; 1
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	90 93 82 00 	sts	0x0082, r25	; 0x800082 <init+0x1>
     c78:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <init>
	game = 1;
     c7c:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <game+0x1>
     c80:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <game>
	return 0;
}
     c84:	80 e0       	ldi	r24, 0x00	; 0
     c86:	90 e0       	ldi	r25, 0x00	; 0
     c88:	08 95       	ret

00000c8a <displayResult>:
// Displaying results (and win/lose state) according to the total move count.
// total > 6 => lost.
int displayResult(int total)
{
     c8a:	ef 92       	push	r14
     c8c:	ff 92       	push	r15
     c8e:	0f 93       	push	r16
     c90:	1f 93       	push	r17
     c92:	cf 93       	push	r28
     c94:	df 93       	push	r29
     c96:	cd b7       	in	r28, 0x3d	; 61
     c98:	de b7       	in	r29, 0x3e	; 62
     c9a:	c4 56       	subi	r28, 0x64	; 100
     c9c:	d1 09       	sbc	r29, r1
     c9e:	0f b6       	in	r0, 0x3f	; 63
     ca0:	f8 94       	cli
     ca2:	de bf       	out	0x3e, r29	; 62
     ca4:	0f be       	out	0x3f, r0	; 63
     ca6:	cd bf       	out	0x3d, r28	; 61
     ca8:	8c 01       	movw	r16, r24
	Lcd4_Clear();
     caa:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Clear>
	
	char str[50];
	sprintf(str,"%d",total);
     cae:	1f 93       	push	r17
     cb0:	0f 93       	push	r16
     cb2:	81 ec       	ldi	r24, 0xC1	; 193
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	9f 93       	push	r25
     cb8:	8f 93       	push	r24
     cba:	ce 01       	movw	r24, r28
     cbc:	01 96       	adiw	r24, 0x01	; 1
     cbe:	7c 01       	movw	r14, r24
     cc0:	9f 93       	push	r25
     cc2:	8f 93       	push	r24
     cc4:	0e 94 9b 0b 	call	0x1736	; 0x1736 <sprintf>
	char message[50] = "Moves: ";
     cc8:	88 e0       	ldi	r24, 0x08	; 8
     cca:	e3 e8       	ldi	r30, 0x83	; 131
     ccc:	f0 e0       	ldi	r31, 0x00	; 0
     cce:	de 01       	movw	r26, r28
     cd0:	d3 96       	adiw	r26, 0x33	; 51
     cd2:	01 90       	ld	r0, Z+
     cd4:	0d 92       	st	X+, r0
     cd6:	8a 95       	dec	r24
     cd8:	e1 f7       	brne	.-8      	; 0xcd2 <displayResult+0x48>
     cda:	fe 01       	movw	r30, r28
     cdc:	fb 96       	adiw	r30, 0x3b	; 59
     cde:	8a e2       	ldi	r24, 0x2A	; 42
     ce0:	df 01       	movw	r26, r30
     ce2:	1d 92       	st	X+, r1
     ce4:	8a 95       	dec	r24
     ce6:	e9 f7       	brne	.-6      	; 0xce2 <displayResult+0x58>
	strcat(message,str);
     ce8:	b7 01       	movw	r22, r14
     cea:	ce 01       	movw	r24, r28
     cec:	c3 96       	adiw	r24, 0x33	; 51
     cee:	0e 94 90 0b 	call	0x1720	; 0x1720 <strcat>
	Lcd4_Set_Cursor(1,3);
     cf2:	63 e0       	ldi	r22, 0x03	; 3
     cf4:	81 e0       	ldi	r24, 0x01	; 1
     cf6:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Set_Cursor>
	Lcd4_Write_String(message);
     cfa:	ce 01       	movw	r24, r28
     cfc:	c3 96       	adiw	r24, 0x33	; 51
     cfe:	0e 94 dd 02 	call	0x5ba	; 0x5ba <Lcd4_Write_String>

	if(total > 6)
     d02:	0f 90       	pop	r0
     d04:	0f 90       	pop	r0
     d06:	0f 90       	pop	r0
     d08:	0f 90       	pop	r0
     d0a:	0f 90       	pop	r0
     d0c:	0f 90       	pop	r0
     d0e:	07 30       	cpi	r16, 0x07	; 7
     d10:	11 05       	cpc	r17, r1
     d12:	4c f0       	brlt	.+18     	; 0xd26 <displayResult+0x9c>
	{
		Lcd4_Set_Cursor(2,3);
     d14:	63 e0       	ldi	r22, 0x03	; 3
     d16:	82 e0       	ldi	r24, 0x02	; 2
     d18:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Set_Cursor>
		Lcd4_Write_String("Game lost.");
     d1c:	84 ec       	ldi	r24, 0xC4	; 196
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	0e 94 dd 02 	call	0x5ba	; 0x5ba <Lcd4_Write_String>
     d24:	08 c0       	rjmp	.+16     	; 0xd36 <displayResult+0xac>
	}
	else
	{
		Lcd4_Set_Cursor(2,3);
     d26:	63 e0       	ldi	r22, 0x03	; 3
     d28:	82 e0       	ldi	r24, 0x02	; 2
     d2a:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Set_Cursor>
		Lcd4_Write_String("Game won!");
     d2e:	8f ec       	ldi	r24, 0xCF	; 207
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	0e 94 dd 02 	call	0x5ba	; 0x5ba <Lcd4_Write_String>
     d36:	bf ef       	ldi	r27, 0xFF	; 255
     d38:	29 e6       	ldi	r18, 0x69	; 105
     d3a:	88 e1       	ldi	r24, 0x18	; 24
     d3c:	b1 50       	subi	r27, 0x01	; 1
     d3e:	20 40       	sbci	r18, 0x00	; 0
     d40:	80 40       	sbci	r24, 0x00	; 0
     d42:	e1 f7       	brne	.-8      	; 0xd3c <displayResult+0xb2>
     d44:	00 c0       	rjmp	.+0      	; 0xd46 <displayResult+0xbc>
     d46:	00 00       	nop
	}
	_delay_ms(1000);
	Lcd4_Clear();
     d48:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Clear>
	return 0;
}
     d4c:	80 e0       	ldi	r24, 0x00	; 0
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	cc 59       	subi	r28, 0x9C	; 156
     d52:	df 4f       	sbci	r29, 0xFF	; 255
     d54:	0f b6       	in	r0, 0x3f	; 63
     d56:	f8 94       	cli
     d58:	de bf       	out	0x3e, r29	; 62
     d5a:	0f be       	out	0x3f, r0	; 63
     d5c:	cd bf       	out	0x3d, r28	; 61
     d5e:	df 91       	pop	r29
     d60:	cf 91       	pop	r28
     d62:	1f 91       	pop	r17
     d64:	0f 91       	pop	r16
     d66:	ff 90       	pop	r15
     d68:	ef 90       	pop	r14
     d6a:	08 95       	ret

00000d6c <endSession>:
// Ending a turn of the game.
int endSession()
{
	game = 0;
     d6c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <game+0x1>
     d70:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <game>
	Lcd4_Clear();
     d74:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Clear>
	resetShips();
     d78:	0e 94 13 06 	call	0xc26	; 0xc26 <resetShips>
	resetStats();
     d7c:	0e 94 30 06 	call	0xc60	; 0xc60 <resetStats>
     d80:	2f ef       	ldi	r18, 0xFF	; 255
     d82:	89 e6       	ldi	r24, 0x69	; 105
     d84:	98 e1       	ldi	r25, 0x18	; 24
     d86:	21 50       	subi	r18, 0x01	; 1
     d88:	80 40       	sbci	r24, 0x00	; 0
     d8a:	90 40       	sbci	r25, 0x00	; 0
     d8c:	e1 f7       	brne	.-8      	; 0xd86 <endSession+0x1a>
     d8e:	00 c0       	rjmp	.+0      	; 0xd90 <endSession+0x24>
     d90:	00 00       	nop
	_delay_ms(1000);
	return 0;
}
     d92:	80 e0       	ldi	r24, 0x00	; 0
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	08 95       	ret

00000d98 <printMessage>:
// Printing a given message on the LCD.
int printMessage(int row, int col, char msg[])
{
     d98:	cf 93       	push	r28
     d9a:	df 93       	push	r29
     d9c:	ea 01       	movw	r28, r20
	Lcd4_Set_Cursor(row,col);
     d9e:	0e 94 49 02 	call	0x492	; 0x492 <Lcd4_Set_Cursor>
	Lcd4_Write_String(msg);
     da2:	ce 01       	movw	r24, r28
     da4:	0e 94 dd 02 	call	0x5ba	; 0x5ba <Lcd4_Write_String>
	return 0;
}
     da8:	80 e0       	ldi	r24, 0x00	; 0
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	df 91       	pop	r29
     dae:	cf 91       	pop	r28
     db0:	08 95       	ret

00000db2 <main>:
// Main game flow.
int main(void)
{
	
	initData();
     db2:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <initData>
     db6:	7e c0       	rjmp	.+252    	; 0xeb4 <main+0x102>

	while(1)
	{
		while(game)
		{
			initRandPlaces();
     db8:	0e 94 05 03 	call	0x60a	; 0x60a <initRandPlaces>
			initShips(&init);
     dbc:	81 e8       	ldi	r24, 0x81	; 129
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	0e 94 b5 03 	call	0x76a	; 0x76a <initShips>
			placeShips(s1Loc, s2Loc);
     dc4:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <s2Loc>
     dc8:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <s2Loc+0x1>
     dcc:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <s1Loc>
     dd0:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <s1Loc+0x1>
     dd4:	0e 94 0a 04 	call	0x814	; 0x814 <placeShips>
			readButtons();
     dd8:	0e 94 f6 02 	call	0x5ec	; 0x5ec <readButtons>
			if (inButA != 0 || inButB != 0) // Debouncing actually.
     ddc:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <inButA>
     de0:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <inButA+0x1>
     de4:	00 97       	sbiw	r24, 0x00	; 0
     de6:	31 f4       	brne	.+12     	; 0xdf4 <main+0x42>
     de8:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <inButB>
     dec:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <inButB+0x1>
     df0:	23 2b       	or	r18, r19
     df2:	c1 f0       	breq	.+48     	; 0xe24 <main+0x72>
			{
				evalButtons(inButA, inButB);
     df4:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <inButB>
     df8:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <inButB+0x1>
     dfc:	0e 94 0c 05 	call	0xa18	; 0xa18 <evalButtons>
				totMoves++;
     e00:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
     e04:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
     e08:	01 96       	adiw	r24, 0x01	; 1
     e0a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
     e0e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
     e12:	2f ef       	ldi	r18, 0xFF	; 255
     e14:	84 e3       	ldi	r24, 0x34	; 52
     e16:	9c e0       	ldi	r25, 0x0C	; 12
     e18:	21 50       	subi	r18, 0x01	; 1
     e1a:	80 40       	sbci	r24, 0x00	; 0
     e1c:	90 40       	sbci	r25, 0x00	; 0
     e1e:	e1 f7       	brne	.-8      	; 0xe18 <main+0x66>
     e20:	00 c0       	rjmp	.+0      	; 0xe22 <main+0x70>
     e22:	00 00       	nop
				_delay_ms(500); // was necessary in order to observe the last shot before the ship sinks.
			}
			if (generalStat == 6)
     e24:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <generalStat>
     e28:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <generalStat+0x1>
     e2c:	06 97       	sbiw	r24, 0x06	; 6
     e2e:	09 f0       	breq	.+2      	; 0xe32 <main+0x80>
     e30:	41 c0       	rjmp	.+130    	; 0xeb4 <main+0x102>
			{
				int endGame = 0;
				displayResult(totMoves);
     e32:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
     e36:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
     e3a:	0e 94 45 06 	call	0xc8a	; 0xc8a <displayResult>
     e3e:	2f ef       	ldi	r18, 0xFF	; 255
     e40:	89 e6       	ldi	r24, 0x69	; 105
     e42:	98 e1       	ldi	r25, 0x18	; 24
     e44:	21 50       	subi	r18, 0x01	; 1
     e46:	80 40       	sbci	r24, 0x00	; 0
     e48:	90 40       	sbci	r25, 0x00	; 0
     e4a:	e1 f7       	brne	.-8      	; 0xe44 <main+0x92>
     e4c:	00 c0       	rjmp	.+0      	; 0xe4e <main+0x9c>
     e4e:	00 00       	nop
				_delay_ms(1000);
				Lcd4_Clear();
     e50:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Clear>
				while(!endGame)
				{
					printMessage(1,1,"Play again?");
     e54:	49 ed       	ldi	r20, 0xD9	; 217
     e56:	50 e0       	ldi	r21, 0x00	; 0
     e58:	61 e0       	ldi	r22, 0x01	; 1
     e5a:	70 e0       	ldi	r23, 0x00	; 0
     e5c:	81 e0       	ldi	r24, 0x01	; 1
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	0e 94 cc 06 	call	0xd98	; 0xd98 <printMessage>
					printMessage(2,1,"(y/n : B1/B0)");
     e64:	45 ee       	ldi	r20, 0xE5	; 229
     e66:	50 e0       	ldi	r21, 0x00	; 0
     e68:	61 e0       	ldi	r22, 0x01	; 1
     e6a:	70 e0       	ldi	r23, 0x00	; 0
     e6c:	82 e0       	ldi	r24, 0x02	; 2
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	0e 94 cc 06 	call	0xd98	; 0xd98 <printMessage>
					readButtons();
     e74:	0e 94 f6 02 	call	0x5ec	; 0x5ec <readButtons>
					if (inButB == 1)
     e78:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <inButB>
     e7c:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <inButB+0x1>
     e80:	81 30       	cpi	r24, 0x01	; 1
     e82:	91 05       	cpc	r25, r1
     e84:	f1 f0       	breq	.+60     	; 0xec2 <main+0x110>
						Lcd4_Clear();
						printMessage(2,3,"Bye!");
						_delay_ms(1000);
						return 0;
					}
					else if (inButB == 2)
     e86:	02 97       	sbiw	r24, 0x02	; 2
     e88:	29 f7       	brne	.-54     	; 0xe54 <main+0xa2>
					{
						Lcd4_Clear();
     e8a:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Clear>
						printMessage(2,3,"Reloading.");
     e8e:	48 ef       	ldi	r20, 0xF8	; 248
     e90:	50 e0       	ldi	r21, 0x00	; 0
     e92:	63 e0       	ldi	r22, 0x03	; 3
     e94:	70 e0       	ldi	r23, 0x00	; 0
     e96:	82 e0       	ldi	r24, 0x02	; 2
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	0e 94 cc 06 	call	0xd98	; 0xd98 <printMessage>
     e9e:	2f ef       	ldi	r18, 0xFF	; 255
     ea0:	89 e6       	ldi	r24, 0x69	; 105
     ea2:	98 e1       	ldi	r25, 0x18	; 24
     ea4:	21 50       	subi	r18, 0x01	; 1
     ea6:	80 40       	sbci	r24, 0x00	; 0
     ea8:	90 40       	sbci	r25, 0x00	; 0
     eaa:	e1 f7       	brne	.-8      	; 0xea4 <main+0xf2>
     eac:	00 c0       	rjmp	.+0      	; 0xeae <main+0xfc>
     eae:	00 00       	nop
						_delay_ms(1000);
						endGame = 1;
					}
				}
				endSession();
     eb0:	0e 94 b6 06 	call	0xd6c	; 0xd6c <endSession>
	
	initData();

	while(1)
	{
		while(game)
     eb4:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <game>
     eb8:	90 91 80 00 	lds	r25, 0x0080	; 0x800080 <game+0x1>
     ebc:	00 97       	sbiw	r24, 0x00	; 0
     ebe:	f1 f3       	breq	.-4      	; 0xebc <main+0x10a>
     ec0:	7b cf       	rjmp	.-266    	; 0xdb8 <main+0x6>
					printMessage(1,1,"Play again?");
					printMessage(2,1,"(y/n : B1/B0)");
					readButtons();
					if (inButB == 1)
					{
						Lcd4_Clear();
     ec2:	0e 94 42 02 	call	0x484	; 0x484 <Lcd4_Clear>
						printMessage(2,3,"Bye!");
     ec6:	43 ef       	ldi	r20, 0xF3	; 243
     ec8:	50 e0       	ldi	r21, 0x00	; 0
     eca:	63 e0       	ldi	r22, 0x03	; 3
     ecc:	70 e0       	ldi	r23, 0x00	; 0
     ece:	82 e0       	ldi	r24, 0x02	; 2
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	0e 94 cc 06 	call	0xd98	; 0xd98 <printMessage>
     ed6:	2f ef       	ldi	r18, 0xFF	; 255
     ed8:	89 e6       	ldi	r24, 0x69	; 105
     eda:	98 e1       	ldi	r25, 0x18	; 24
     edc:	21 50       	subi	r18, 0x01	; 1
     ede:	80 40       	sbci	r24, 0x00	; 0
     ee0:	90 40       	sbci	r25, 0x00	; 0
     ee2:	e1 f7       	brne	.-8      	; 0xedc <main+0x12a>
     ee4:	00 c0       	rjmp	.+0      	; 0xee6 <main+0x134>
     ee6:	00 00       	nop
				endSession();
				break;
			}
		}
	}
     ee8:	80 e0       	ldi	r24, 0x00	; 0
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	08 95       	ret

00000eee <__divsf3>:
     eee:	0e 94 8b 07 	call	0xf16	; 0xf16 <__divsf3x>
     ef2:	0c 94 73 08 	jmp	0x10e6	; 0x10e6 <__fp_round>
     ef6:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <__fp_pscB>
     efa:	58 f0       	brcs	.+22     	; 0xf12 <__divsf3+0x24>
     efc:	0e 94 65 08 	call	0x10ca	; 0x10ca <__fp_pscA>
     f00:	40 f0       	brcs	.+16     	; 0xf12 <__divsf3+0x24>
     f02:	29 f4       	brne	.+10     	; 0xf0e <__divsf3+0x20>
     f04:	5f 3f       	cpi	r21, 0xFF	; 255
     f06:	29 f0       	breq	.+10     	; 0xf12 <__divsf3+0x24>
     f08:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__fp_inf>
     f0c:	51 11       	cpse	r21, r1
     f0e:	0c 94 a7 08 	jmp	0x114e	; 0x114e <__fp_szero>
     f12:	0c 94 62 08 	jmp	0x10c4	; 0x10c4 <__fp_nan>

00000f16 <__divsf3x>:
     f16:	0e 94 84 08 	call	0x1108	; 0x1108 <__fp_split3>
     f1a:	68 f3       	brcs	.-38     	; 0xef6 <__divsf3+0x8>

00000f1c <__divsf3_pse>:
     f1c:	99 23       	and	r25, r25
     f1e:	b1 f3       	breq	.-20     	; 0xf0c <__divsf3+0x1e>
     f20:	55 23       	and	r21, r21
     f22:	91 f3       	breq	.-28     	; 0xf08 <__divsf3+0x1a>
     f24:	95 1b       	sub	r25, r21
     f26:	55 0b       	sbc	r21, r21
     f28:	bb 27       	eor	r27, r27
     f2a:	aa 27       	eor	r26, r26
     f2c:	62 17       	cp	r22, r18
     f2e:	73 07       	cpc	r23, r19
     f30:	84 07       	cpc	r24, r20
     f32:	38 f0       	brcs	.+14     	; 0xf42 <__divsf3_pse+0x26>
     f34:	9f 5f       	subi	r25, 0xFF	; 255
     f36:	5f 4f       	sbci	r21, 0xFF	; 255
     f38:	22 0f       	add	r18, r18
     f3a:	33 1f       	adc	r19, r19
     f3c:	44 1f       	adc	r20, r20
     f3e:	aa 1f       	adc	r26, r26
     f40:	a9 f3       	breq	.-22     	; 0xf2c <__divsf3_pse+0x10>
     f42:	35 d0       	rcall	.+106    	; 0xfae <__divsf3_pse+0x92>
     f44:	0e 2e       	mov	r0, r30
     f46:	3a f0       	brmi	.+14     	; 0xf56 <__divsf3_pse+0x3a>
     f48:	e0 e8       	ldi	r30, 0x80	; 128
     f4a:	32 d0       	rcall	.+100    	; 0xfb0 <__divsf3_pse+0x94>
     f4c:	91 50       	subi	r25, 0x01	; 1
     f4e:	50 40       	sbci	r21, 0x00	; 0
     f50:	e6 95       	lsr	r30
     f52:	00 1c       	adc	r0, r0
     f54:	ca f7       	brpl	.-14     	; 0xf48 <__divsf3_pse+0x2c>
     f56:	2b d0       	rcall	.+86     	; 0xfae <__divsf3_pse+0x92>
     f58:	fe 2f       	mov	r31, r30
     f5a:	29 d0       	rcall	.+82     	; 0xfae <__divsf3_pse+0x92>
     f5c:	66 0f       	add	r22, r22
     f5e:	77 1f       	adc	r23, r23
     f60:	88 1f       	adc	r24, r24
     f62:	bb 1f       	adc	r27, r27
     f64:	26 17       	cp	r18, r22
     f66:	37 07       	cpc	r19, r23
     f68:	48 07       	cpc	r20, r24
     f6a:	ab 07       	cpc	r26, r27
     f6c:	b0 e8       	ldi	r27, 0x80	; 128
     f6e:	09 f0       	breq	.+2      	; 0xf72 <__divsf3_pse+0x56>
     f70:	bb 0b       	sbc	r27, r27
     f72:	80 2d       	mov	r24, r0
     f74:	bf 01       	movw	r22, r30
     f76:	ff 27       	eor	r31, r31
     f78:	93 58       	subi	r25, 0x83	; 131
     f7a:	5f 4f       	sbci	r21, 0xFF	; 255
     f7c:	3a f0       	brmi	.+14     	; 0xf8c <__divsf3_pse+0x70>
     f7e:	9e 3f       	cpi	r25, 0xFE	; 254
     f80:	51 05       	cpc	r21, r1
     f82:	78 f0       	brcs	.+30     	; 0xfa2 <__divsf3_pse+0x86>
     f84:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__fp_inf>
     f88:	0c 94 a7 08 	jmp	0x114e	; 0x114e <__fp_szero>
     f8c:	5f 3f       	cpi	r21, 0xFF	; 255
     f8e:	e4 f3       	brlt	.-8      	; 0xf88 <__divsf3_pse+0x6c>
     f90:	98 3e       	cpi	r25, 0xE8	; 232
     f92:	d4 f3       	brlt	.-12     	; 0xf88 <__divsf3_pse+0x6c>
     f94:	86 95       	lsr	r24
     f96:	77 95       	ror	r23
     f98:	67 95       	ror	r22
     f9a:	b7 95       	ror	r27
     f9c:	f7 95       	ror	r31
     f9e:	9f 5f       	subi	r25, 0xFF	; 255
     fa0:	c9 f7       	brne	.-14     	; 0xf94 <__divsf3_pse+0x78>
     fa2:	88 0f       	add	r24, r24
     fa4:	91 1d       	adc	r25, r1
     fa6:	96 95       	lsr	r25
     fa8:	87 95       	ror	r24
     faa:	97 f9       	bld	r25, 7
     fac:	08 95       	ret
     fae:	e1 e0       	ldi	r30, 0x01	; 1
     fb0:	66 0f       	add	r22, r22
     fb2:	77 1f       	adc	r23, r23
     fb4:	88 1f       	adc	r24, r24
     fb6:	bb 1f       	adc	r27, r27
     fb8:	62 17       	cp	r22, r18
     fba:	73 07       	cpc	r23, r19
     fbc:	84 07       	cpc	r24, r20
     fbe:	ba 07       	cpc	r27, r26
     fc0:	20 f0       	brcs	.+8      	; 0xfca <__divsf3_pse+0xae>
     fc2:	62 1b       	sub	r22, r18
     fc4:	73 0b       	sbc	r23, r19
     fc6:	84 0b       	sbc	r24, r20
     fc8:	ba 0b       	sbc	r27, r26
     fca:	ee 1f       	adc	r30, r30
     fcc:	88 f7       	brcc	.-30     	; 0xfb0 <__divsf3_pse+0x94>
     fce:	e0 95       	com	r30
     fd0:	08 95       	ret

00000fd2 <__fixsfsi>:
     fd2:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__fixunssfsi>
     fd6:	68 94       	set
     fd8:	b1 11       	cpse	r27, r1
     fda:	0c 94 a7 08 	jmp	0x114e	; 0x114e <__fp_szero>
     fde:	08 95       	ret

00000fe0 <__fixunssfsi>:
     fe0:	0e 94 8c 08 	call	0x1118	; 0x1118 <__fp_splitA>
     fe4:	88 f0       	brcs	.+34     	; 0x1008 <__fixunssfsi+0x28>
     fe6:	9f 57       	subi	r25, 0x7F	; 127
     fe8:	98 f0       	brcs	.+38     	; 0x1010 <__fixunssfsi+0x30>
     fea:	b9 2f       	mov	r27, r25
     fec:	99 27       	eor	r25, r25
     fee:	b7 51       	subi	r27, 0x17	; 23
     ff0:	b0 f0       	brcs	.+44     	; 0x101e <__fixunssfsi+0x3e>
     ff2:	e1 f0       	breq	.+56     	; 0x102c <__fixunssfsi+0x4c>
     ff4:	66 0f       	add	r22, r22
     ff6:	77 1f       	adc	r23, r23
     ff8:	88 1f       	adc	r24, r24
     ffa:	99 1f       	adc	r25, r25
     ffc:	1a f0       	brmi	.+6      	; 0x1004 <__fixunssfsi+0x24>
     ffe:	ba 95       	dec	r27
    1000:	c9 f7       	brne	.-14     	; 0xff4 <__fixunssfsi+0x14>
    1002:	14 c0       	rjmp	.+40     	; 0x102c <__fixunssfsi+0x4c>
    1004:	b1 30       	cpi	r27, 0x01	; 1
    1006:	91 f0       	breq	.+36     	; 0x102c <__fixunssfsi+0x4c>
    1008:	0e 94 a6 08 	call	0x114c	; 0x114c <__fp_zero>
    100c:	b1 e0       	ldi	r27, 0x01	; 1
    100e:	08 95       	ret
    1010:	0c 94 a6 08 	jmp	0x114c	; 0x114c <__fp_zero>
    1014:	67 2f       	mov	r22, r23
    1016:	78 2f       	mov	r23, r24
    1018:	88 27       	eor	r24, r24
    101a:	b8 5f       	subi	r27, 0xF8	; 248
    101c:	39 f0       	breq	.+14     	; 0x102c <__fixunssfsi+0x4c>
    101e:	b9 3f       	cpi	r27, 0xF9	; 249
    1020:	cc f3       	brlt	.-14     	; 0x1014 <__fixunssfsi+0x34>
    1022:	86 95       	lsr	r24
    1024:	77 95       	ror	r23
    1026:	67 95       	ror	r22
    1028:	b3 95       	inc	r27
    102a:	d9 f7       	brne	.-10     	; 0x1022 <__fixunssfsi+0x42>
    102c:	3e f4       	brtc	.+14     	; 0x103c <__fixunssfsi+0x5c>
    102e:	90 95       	com	r25
    1030:	80 95       	com	r24
    1032:	70 95       	com	r23
    1034:	61 95       	neg	r22
    1036:	7f 4f       	sbci	r23, 0xFF	; 255
    1038:	8f 4f       	sbci	r24, 0xFF	; 255
    103a:	9f 4f       	sbci	r25, 0xFF	; 255
    103c:	08 95       	ret

0000103e <__floatunsisf>:
    103e:	e8 94       	clt
    1040:	09 c0       	rjmp	.+18     	; 0x1054 <__floatsisf+0x12>

00001042 <__floatsisf>:
    1042:	97 fb       	bst	r25, 7
    1044:	3e f4       	brtc	.+14     	; 0x1054 <__floatsisf+0x12>
    1046:	90 95       	com	r25
    1048:	80 95       	com	r24
    104a:	70 95       	com	r23
    104c:	61 95       	neg	r22
    104e:	7f 4f       	sbci	r23, 0xFF	; 255
    1050:	8f 4f       	sbci	r24, 0xFF	; 255
    1052:	9f 4f       	sbci	r25, 0xFF	; 255
    1054:	99 23       	and	r25, r25
    1056:	a9 f0       	breq	.+42     	; 0x1082 <__floatsisf+0x40>
    1058:	f9 2f       	mov	r31, r25
    105a:	96 e9       	ldi	r25, 0x96	; 150
    105c:	bb 27       	eor	r27, r27
    105e:	93 95       	inc	r25
    1060:	f6 95       	lsr	r31
    1062:	87 95       	ror	r24
    1064:	77 95       	ror	r23
    1066:	67 95       	ror	r22
    1068:	b7 95       	ror	r27
    106a:	f1 11       	cpse	r31, r1
    106c:	f8 cf       	rjmp	.-16     	; 0x105e <__floatsisf+0x1c>
    106e:	fa f4       	brpl	.+62     	; 0x10ae <__floatsisf+0x6c>
    1070:	bb 0f       	add	r27, r27
    1072:	11 f4       	brne	.+4      	; 0x1078 <__floatsisf+0x36>
    1074:	60 ff       	sbrs	r22, 0
    1076:	1b c0       	rjmp	.+54     	; 0x10ae <__floatsisf+0x6c>
    1078:	6f 5f       	subi	r22, 0xFF	; 255
    107a:	7f 4f       	sbci	r23, 0xFF	; 255
    107c:	8f 4f       	sbci	r24, 0xFF	; 255
    107e:	9f 4f       	sbci	r25, 0xFF	; 255
    1080:	16 c0       	rjmp	.+44     	; 0x10ae <__floatsisf+0x6c>
    1082:	88 23       	and	r24, r24
    1084:	11 f0       	breq	.+4      	; 0x108a <__floatsisf+0x48>
    1086:	96 e9       	ldi	r25, 0x96	; 150
    1088:	11 c0       	rjmp	.+34     	; 0x10ac <__floatsisf+0x6a>
    108a:	77 23       	and	r23, r23
    108c:	21 f0       	breq	.+8      	; 0x1096 <__floatsisf+0x54>
    108e:	9e e8       	ldi	r25, 0x8E	; 142
    1090:	87 2f       	mov	r24, r23
    1092:	76 2f       	mov	r23, r22
    1094:	05 c0       	rjmp	.+10     	; 0x10a0 <__floatsisf+0x5e>
    1096:	66 23       	and	r22, r22
    1098:	71 f0       	breq	.+28     	; 0x10b6 <__floatsisf+0x74>
    109a:	96 e8       	ldi	r25, 0x86	; 134
    109c:	86 2f       	mov	r24, r22
    109e:	70 e0       	ldi	r23, 0x00	; 0
    10a0:	60 e0       	ldi	r22, 0x00	; 0
    10a2:	2a f0       	brmi	.+10     	; 0x10ae <__floatsisf+0x6c>
    10a4:	9a 95       	dec	r25
    10a6:	66 0f       	add	r22, r22
    10a8:	77 1f       	adc	r23, r23
    10aa:	88 1f       	adc	r24, r24
    10ac:	da f7       	brpl	.-10     	; 0x10a4 <__floatsisf+0x62>
    10ae:	88 0f       	add	r24, r24
    10b0:	96 95       	lsr	r25
    10b2:	87 95       	ror	r24
    10b4:	97 f9       	bld	r25, 7
    10b6:	08 95       	ret

000010b8 <__fp_inf>:
    10b8:	97 f9       	bld	r25, 7
    10ba:	9f 67       	ori	r25, 0x7F	; 127
    10bc:	80 e8       	ldi	r24, 0x80	; 128
    10be:	70 e0       	ldi	r23, 0x00	; 0
    10c0:	60 e0       	ldi	r22, 0x00	; 0
    10c2:	08 95       	ret

000010c4 <__fp_nan>:
    10c4:	9f ef       	ldi	r25, 0xFF	; 255
    10c6:	80 ec       	ldi	r24, 0xC0	; 192
    10c8:	08 95       	ret

000010ca <__fp_pscA>:
    10ca:	00 24       	eor	r0, r0
    10cc:	0a 94       	dec	r0
    10ce:	16 16       	cp	r1, r22
    10d0:	17 06       	cpc	r1, r23
    10d2:	18 06       	cpc	r1, r24
    10d4:	09 06       	cpc	r0, r25
    10d6:	08 95       	ret

000010d8 <__fp_pscB>:
    10d8:	00 24       	eor	r0, r0
    10da:	0a 94       	dec	r0
    10dc:	12 16       	cp	r1, r18
    10de:	13 06       	cpc	r1, r19
    10e0:	14 06       	cpc	r1, r20
    10e2:	05 06       	cpc	r0, r21
    10e4:	08 95       	ret

000010e6 <__fp_round>:
    10e6:	09 2e       	mov	r0, r25
    10e8:	03 94       	inc	r0
    10ea:	00 0c       	add	r0, r0
    10ec:	11 f4       	brne	.+4      	; 0x10f2 <__fp_round+0xc>
    10ee:	88 23       	and	r24, r24
    10f0:	52 f0       	brmi	.+20     	; 0x1106 <__fp_round+0x20>
    10f2:	bb 0f       	add	r27, r27
    10f4:	40 f4       	brcc	.+16     	; 0x1106 <__fp_round+0x20>
    10f6:	bf 2b       	or	r27, r31
    10f8:	11 f4       	brne	.+4      	; 0x10fe <__fp_round+0x18>
    10fa:	60 ff       	sbrs	r22, 0
    10fc:	04 c0       	rjmp	.+8      	; 0x1106 <__fp_round+0x20>
    10fe:	6f 5f       	subi	r22, 0xFF	; 255
    1100:	7f 4f       	sbci	r23, 0xFF	; 255
    1102:	8f 4f       	sbci	r24, 0xFF	; 255
    1104:	9f 4f       	sbci	r25, 0xFF	; 255
    1106:	08 95       	ret

00001108 <__fp_split3>:
    1108:	57 fd       	sbrc	r21, 7
    110a:	90 58       	subi	r25, 0x80	; 128
    110c:	44 0f       	add	r20, r20
    110e:	55 1f       	adc	r21, r21
    1110:	59 f0       	breq	.+22     	; 0x1128 <__fp_splitA+0x10>
    1112:	5f 3f       	cpi	r21, 0xFF	; 255
    1114:	71 f0       	breq	.+28     	; 0x1132 <__fp_splitA+0x1a>
    1116:	47 95       	ror	r20

00001118 <__fp_splitA>:
    1118:	88 0f       	add	r24, r24
    111a:	97 fb       	bst	r25, 7
    111c:	99 1f       	adc	r25, r25
    111e:	61 f0       	breq	.+24     	; 0x1138 <__fp_splitA+0x20>
    1120:	9f 3f       	cpi	r25, 0xFF	; 255
    1122:	79 f0       	breq	.+30     	; 0x1142 <__fp_splitA+0x2a>
    1124:	87 95       	ror	r24
    1126:	08 95       	ret
    1128:	12 16       	cp	r1, r18
    112a:	13 06       	cpc	r1, r19
    112c:	14 06       	cpc	r1, r20
    112e:	55 1f       	adc	r21, r21
    1130:	f2 cf       	rjmp	.-28     	; 0x1116 <__fp_split3+0xe>
    1132:	46 95       	lsr	r20
    1134:	f1 df       	rcall	.-30     	; 0x1118 <__fp_splitA>
    1136:	08 c0       	rjmp	.+16     	; 0x1148 <__fp_splitA+0x30>
    1138:	16 16       	cp	r1, r22
    113a:	17 06       	cpc	r1, r23
    113c:	18 06       	cpc	r1, r24
    113e:	99 1f       	adc	r25, r25
    1140:	f1 cf       	rjmp	.-30     	; 0x1124 <__fp_splitA+0xc>
    1142:	86 95       	lsr	r24
    1144:	71 05       	cpc	r23, r1
    1146:	61 05       	cpc	r22, r1
    1148:	08 94       	sec
    114a:	08 95       	ret

0000114c <__fp_zero>:
    114c:	e8 94       	clt

0000114e <__fp_szero>:
    114e:	bb 27       	eor	r27, r27
    1150:	66 27       	eor	r22, r22
    1152:	77 27       	eor	r23, r23
    1154:	cb 01       	movw	r24, r22
    1156:	97 f9       	bld	r25, 7
    1158:	08 95       	ret

0000115a <__mulsf3>:
    115a:	0e 94 c0 08 	call	0x1180	; 0x1180 <__mulsf3x>
    115e:	0c 94 73 08 	jmp	0x10e6	; 0x10e6 <__fp_round>
    1162:	0e 94 65 08 	call	0x10ca	; 0x10ca <__fp_pscA>
    1166:	38 f0       	brcs	.+14     	; 0x1176 <__mulsf3+0x1c>
    1168:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <__fp_pscB>
    116c:	20 f0       	brcs	.+8      	; 0x1176 <__mulsf3+0x1c>
    116e:	95 23       	and	r25, r21
    1170:	11 f0       	breq	.+4      	; 0x1176 <__mulsf3+0x1c>
    1172:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__fp_inf>
    1176:	0c 94 62 08 	jmp	0x10c4	; 0x10c4 <__fp_nan>
    117a:	11 24       	eor	r1, r1
    117c:	0c 94 a7 08 	jmp	0x114e	; 0x114e <__fp_szero>

00001180 <__mulsf3x>:
    1180:	0e 94 84 08 	call	0x1108	; 0x1108 <__fp_split3>
    1184:	70 f3       	brcs	.-36     	; 0x1162 <__mulsf3+0x8>

00001186 <__mulsf3_pse>:
    1186:	95 9f       	mul	r25, r21
    1188:	c1 f3       	breq	.-16     	; 0x117a <__mulsf3+0x20>
    118a:	95 0f       	add	r25, r21
    118c:	50 e0       	ldi	r21, 0x00	; 0
    118e:	55 1f       	adc	r21, r21
    1190:	62 9f       	mul	r22, r18
    1192:	f0 01       	movw	r30, r0
    1194:	72 9f       	mul	r23, r18
    1196:	bb 27       	eor	r27, r27
    1198:	f0 0d       	add	r31, r0
    119a:	b1 1d       	adc	r27, r1
    119c:	63 9f       	mul	r22, r19
    119e:	aa 27       	eor	r26, r26
    11a0:	f0 0d       	add	r31, r0
    11a2:	b1 1d       	adc	r27, r1
    11a4:	aa 1f       	adc	r26, r26
    11a6:	64 9f       	mul	r22, r20
    11a8:	66 27       	eor	r22, r22
    11aa:	b0 0d       	add	r27, r0
    11ac:	a1 1d       	adc	r26, r1
    11ae:	66 1f       	adc	r22, r22
    11b0:	82 9f       	mul	r24, r18
    11b2:	22 27       	eor	r18, r18
    11b4:	b0 0d       	add	r27, r0
    11b6:	a1 1d       	adc	r26, r1
    11b8:	62 1f       	adc	r22, r18
    11ba:	73 9f       	mul	r23, r19
    11bc:	b0 0d       	add	r27, r0
    11be:	a1 1d       	adc	r26, r1
    11c0:	62 1f       	adc	r22, r18
    11c2:	83 9f       	mul	r24, r19
    11c4:	a0 0d       	add	r26, r0
    11c6:	61 1d       	adc	r22, r1
    11c8:	22 1f       	adc	r18, r18
    11ca:	74 9f       	mul	r23, r20
    11cc:	33 27       	eor	r19, r19
    11ce:	a0 0d       	add	r26, r0
    11d0:	61 1d       	adc	r22, r1
    11d2:	23 1f       	adc	r18, r19
    11d4:	84 9f       	mul	r24, r20
    11d6:	60 0d       	add	r22, r0
    11d8:	21 1d       	adc	r18, r1
    11da:	82 2f       	mov	r24, r18
    11dc:	76 2f       	mov	r23, r22
    11de:	6a 2f       	mov	r22, r26
    11e0:	11 24       	eor	r1, r1
    11e2:	9f 57       	subi	r25, 0x7F	; 127
    11e4:	50 40       	sbci	r21, 0x00	; 0
    11e6:	9a f0       	brmi	.+38     	; 0x120e <__mulsf3_pse+0x88>
    11e8:	f1 f0       	breq	.+60     	; 0x1226 <__mulsf3_pse+0xa0>
    11ea:	88 23       	and	r24, r24
    11ec:	4a f0       	brmi	.+18     	; 0x1200 <__mulsf3_pse+0x7a>
    11ee:	ee 0f       	add	r30, r30
    11f0:	ff 1f       	adc	r31, r31
    11f2:	bb 1f       	adc	r27, r27
    11f4:	66 1f       	adc	r22, r22
    11f6:	77 1f       	adc	r23, r23
    11f8:	88 1f       	adc	r24, r24
    11fa:	91 50       	subi	r25, 0x01	; 1
    11fc:	50 40       	sbci	r21, 0x00	; 0
    11fe:	a9 f7       	brne	.-22     	; 0x11ea <__mulsf3_pse+0x64>
    1200:	9e 3f       	cpi	r25, 0xFE	; 254
    1202:	51 05       	cpc	r21, r1
    1204:	80 f0       	brcs	.+32     	; 0x1226 <__mulsf3_pse+0xa0>
    1206:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__fp_inf>
    120a:	0c 94 a7 08 	jmp	0x114e	; 0x114e <__fp_szero>
    120e:	5f 3f       	cpi	r21, 0xFF	; 255
    1210:	e4 f3       	brlt	.-8      	; 0x120a <__mulsf3_pse+0x84>
    1212:	98 3e       	cpi	r25, 0xE8	; 232
    1214:	d4 f3       	brlt	.-12     	; 0x120a <__mulsf3_pse+0x84>
    1216:	86 95       	lsr	r24
    1218:	77 95       	ror	r23
    121a:	67 95       	ror	r22
    121c:	b7 95       	ror	r27
    121e:	f7 95       	ror	r31
    1220:	e7 95       	ror	r30
    1222:	9f 5f       	subi	r25, 0xFF	; 255
    1224:	c1 f7       	brne	.-16     	; 0x1216 <__mulsf3_pse+0x90>
    1226:	fe 2b       	or	r31, r30
    1228:	88 0f       	add	r24, r24
    122a:	91 1d       	adc	r25, r1
    122c:	96 95       	lsr	r25
    122e:	87 95       	ror	r24
    1230:	97 f9       	bld	r25, 7
    1232:	08 95       	ret

00001234 <pow>:
    1234:	fa 01       	movw	r30, r20
    1236:	ee 0f       	add	r30, r30
    1238:	ff 1f       	adc	r31, r31
    123a:	30 96       	adiw	r30, 0x00	; 0
    123c:	21 05       	cpc	r18, r1
    123e:	31 05       	cpc	r19, r1
    1240:	a1 f1       	breq	.+104    	; 0x12aa <pow+0x76>
    1242:	61 15       	cp	r22, r1
    1244:	71 05       	cpc	r23, r1
    1246:	61 f4       	brne	.+24     	; 0x1260 <pow+0x2c>
    1248:	80 38       	cpi	r24, 0x80	; 128
    124a:	bf e3       	ldi	r27, 0x3F	; 63
    124c:	9b 07       	cpc	r25, r27
    124e:	49 f1       	breq	.+82     	; 0x12a2 <pow+0x6e>
    1250:	68 94       	set
    1252:	90 38       	cpi	r25, 0x80	; 128
    1254:	81 05       	cpc	r24, r1
    1256:	61 f0       	breq	.+24     	; 0x1270 <pow+0x3c>
    1258:	80 38       	cpi	r24, 0x80	; 128
    125a:	bf ef       	ldi	r27, 0xFF	; 255
    125c:	9b 07       	cpc	r25, r27
    125e:	41 f0       	breq	.+16     	; 0x1270 <pow+0x3c>
    1260:	99 23       	and	r25, r25
    1262:	4a f5       	brpl	.+82     	; 0x12b6 <pow+0x82>
    1264:	ff 3f       	cpi	r31, 0xFF	; 255
    1266:	e1 05       	cpc	r30, r1
    1268:	31 05       	cpc	r19, r1
    126a:	21 05       	cpc	r18, r1
    126c:	19 f1       	breq	.+70     	; 0x12b4 <pow+0x80>
    126e:	e8 94       	clt
    1270:	08 94       	sec
    1272:	e7 95       	ror	r30
    1274:	d9 01       	movw	r26, r18
    1276:	aa 23       	and	r26, r26
    1278:	29 f4       	brne	.+10     	; 0x1284 <pow+0x50>
    127a:	ab 2f       	mov	r26, r27
    127c:	be 2f       	mov	r27, r30
    127e:	f8 5f       	subi	r31, 0xF8	; 248
    1280:	d0 f3       	brcs	.-12     	; 0x1276 <pow+0x42>
    1282:	10 c0       	rjmp	.+32     	; 0x12a4 <pow+0x70>
    1284:	ff 5f       	subi	r31, 0xFF	; 255
    1286:	70 f4       	brcc	.+28     	; 0x12a4 <pow+0x70>
    1288:	a6 95       	lsr	r26
    128a:	e0 f7       	brcc	.-8      	; 0x1284 <pow+0x50>
    128c:	f7 39       	cpi	r31, 0x97	; 151
    128e:	50 f0       	brcs	.+20     	; 0x12a4 <pow+0x70>
    1290:	19 f0       	breq	.+6      	; 0x1298 <pow+0x64>
    1292:	ff 3a       	cpi	r31, 0xAF	; 175
    1294:	38 f4       	brcc	.+14     	; 0x12a4 <pow+0x70>
    1296:	9f 77       	andi	r25, 0x7F	; 127
    1298:	9f 93       	push	r25
    129a:	0d d0       	rcall	.+26     	; 0x12b6 <pow+0x82>
    129c:	0f 90       	pop	r0
    129e:	07 fc       	sbrc	r0, 7
    12a0:	90 58       	subi	r25, 0x80	; 128
    12a2:	08 95       	ret
    12a4:	46 f0       	brts	.+16     	; 0x12b6 <pow+0x82>
    12a6:	0c 94 62 08 	jmp	0x10c4	; 0x10c4 <__fp_nan>
    12aa:	60 e0       	ldi	r22, 0x00	; 0
    12ac:	70 e0       	ldi	r23, 0x00	; 0
    12ae:	80 e8       	ldi	r24, 0x80	; 128
    12b0:	9f e3       	ldi	r25, 0x3F	; 63
    12b2:	08 95       	ret
    12b4:	4f e7       	ldi	r20, 0x7F	; 127
    12b6:	9f 77       	andi	r25, 0x7F	; 127
    12b8:	5f 93       	push	r21
    12ba:	4f 93       	push	r20
    12bc:	3f 93       	push	r19
    12be:	2f 93       	push	r18
    12c0:	0e 94 15 0a 	call	0x142a	; 0x142a <log>
    12c4:	2f 91       	pop	r18
    12c6:	3f 91       	pop	r19
    12c8:	4f 91       	pop	r20
    12ca:	5f 91       	pop	r21
    12cc:	0e 94 ad 08 	call	0x115a	; 0x115a <__mulsf3>
    12d0:	0c 94 72 09 	jmp	0x12e4	; 0x12e4 <exp>
    12d4:	29 f4       	brne	.+10     	; 0x12e0 <pow+0xac>
    12d6:	16 f0       	brts	.+4      	; 0x12dc <pow+0xa8>
    12d8:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__fp_inf>
    12dc:	0c 94 a6 08 	jmp	0x114c	; 0x114c <__fp_zero>
    12e0:	0c 94 62 08 	jmp	0x10c4	; 0x10c4 <__fp_nan>

000012e4 <exp>:
    12e4:	0e 94 8c 08 	call	0x1118	; 0x1118 <__fp_splitA>
    12e8:	a8 f3       	brcs	.-22     	; 0x12d4 <pow+0xa0>
    12ea:	96 38       	cpi	r25, 0x86	; 134
    12ec:	a0 f7       	brcc	.-24     	; 0x12d6 <pow+0xa2>
    12ee:	07 f8       	bld	r0, 7
    12f0:	0f 92       	push	r0
    12f2:	e8 94       	clt
    12f4:	2b e3       	ldi	r18, 0x3B	; 59
    12f6:	3a ea       	ldi	r19, 0xAA	; 170
    12f8:	48 eb       	ldi	r20, 0xB8	; 184
    12fa:	5f e7       	ldi	r21, 0x7F	; 127
    12fc:	0e 94 c3 08 	call	0x1186	; 0x1186 <__mulsf3_pse>
    1300:	0f 92       	push	r0
    1302:	0f 92       	push	r0
    1304:	0f 92       	push	r0
    1306:	4d b7       	in	r20, 0x3d	; 61
    1308:	5e b7       	in	r21, 0x3e	; 62
    130a:	0f 92       	push	r0
    130c:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <modf>
    1310:	e4 e5       	ldi	r30, 0x54	; 84
    1312:	f0 e0       	ldi	r31, 0x00	; 0
    1314:	0e 94 a4 09 	call	0x1348	; 0x1348 <__fp_powser>
    1318:	4f 91       	pop	r20
    131a:	5f 91       	pop	r21
    131c:	ef 91       	pop	r30
    131e:	ff 91       	pop	r31
    1320:	e5 95       	asr	r30
    1322:	ee 1f       	adc	r30, r30
    1324:	ff 1f       	adc	r31, r31
    1326:	49 f0       	breq	.+18     	; 0x133a <exp+0x56>
    1328:	fe 57       	subi	r31, 0x7E	; 126
    132a:	e0 68       	ori	r30, 0x80	; 128
    132c:	44 27       	eor	r20, r20
    132e:	ee 0f       	add	r30, r30
    1330:	44 1f       	adc	r20, r20
    1332:	fa 95       	dec	r31
    1334:	e1 f7       	brne	.-8      	; 0x132e <exp+0x4a>
    1336:	41 95       	neg	r20
    1338:	55 0b       	sbc	r21, r21
    133a:	0e 94 d7 09 	call	0x13ae	; 0x13ae <ldexp>
    133e:	0f 90       	pop	r0
    1340:	07 fe       	sbrs	r0, 7
    1342:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <inverse>
    1346:	08 95       	ret

00001348 <__fp_powser>:
    1348:	df 93       	push	r29
    134a:	cf 93       	push	r28
    134c:	1f 93       	push	r17
    134e:	0f 93       	push	r16
    1350:	ff 92       	push	r15
    1352:	ef 92       	push	r14
    1354:	df 92       	push	r13
    1356:	7b 01       	movw	r14, r22
    1358:	8c 01       	movw	r16, r24
    135a:	68 94       	set
    135c:	06 c0       	rjmp	.+12     	; 0x136a <__fp_powser+0x22>
    135e:	da 2e       	mov	r13, r26
    1360:	ef 01       	movw	r28, r30
    1362:	0e 94 c0 08 	call	0x1180	; 0x1180 <__mulsf3x>
    1366:	fe 01       	movw	r30, r28
    1368:	e8 94       	clt
    136a:	a5 91       	lpm	r26, Z+
    136c:	25 91       	lpm	r18, Z+
    136e:	35 91       	lpm	r19, Z+
    1370:	45 91       	lpm	r20, Z+
    1372:	55 91       	lpm	r21, Z+
    1374:	a6 f3       	brts	.-24     	; 0x135e <__fp_powser+0x16>
    1376:	ef 01       	movw	r28, r30
    1378:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__addsf3x>
    137c:	fe 01       	movw	r30, r28
    137e:	97 01       	movw	r18, r14
    1380:	a8 01       	movw	r20, r16
    1382:	da 94       	dec	r13
    1384:	69 f7       	brne	.-38     	; 0x1360 <__fp_powser+0x18>
    1386:	df 90       	pop	r13
    1388:	ef 90       	pop	r14
    138a:	ff 90       	pop	r15
    138c:	0f 91       	pop	r16
    138e:	1f 91       	pop	r17
    1390:	cf 91       	pop	r28
    1392:	df 91       	pop	r29
    1394:	08 95       	ret

00001396 <inverse>:
    1396:	9b 01       	movw	r18, r22
    1398:	ac 01       	movw	r20, r24
    139a:	60 e0       	ldi	r22, 0x00	; 0
    139c:	70 e0       	ldi	r23, 0x00	; 0
    139e:	80 e8       	ldi	r24, 0x80	; 128
    13a0:	9f e3       	ldi	r25, 0x3F	; 63
    13a2:	0c 94 77 07 	jmp	0xeee	; 0xeee <__divsf3>
    13a6:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__fp_inf>
    13aa:	0c 94 fe 0a 	jmp	0x15fc	; 0x15fc <__fp_mpack>

000013ae <ldexp>:
    13ae:	0e 94 8c 08 	call	0x1118	; 0x1118 <__fp_splitA>
    13b2:	d8 f3       	brcs	.-10     	; 0x13aa <inverse+0x14>
    13b4:	99 23       	and	r25, r25
    13b6:	c9 f3       	breq	.-14     	; 0x13aa <inverse+0x14>
    13b8:	94 0f       	add	r25, r20
    13ba:	51 1d       	adc	r21, r1
    13bc:	a3 f3       	brvs	.-24     	; 0x13a6 <inverse+0x10>
    13be:	91 50       	subi	r25, 0x01	; 1
    13c0:	50 40       	sbci	r21, 0x00	; 0
    13c2:	94 f0       	brlt	.+36     	; 0x13e8 <ldexp+0x3a>
    13c4:	59 f0       	breq	.+22     	; 0x13dc <ldexp+0x2e>
    13c6:	88 23       	and	r24, r24
    13c8:	32 f0       	brmi	.+12     	; 0x13d6 <ldexp+0x28>
    13ca:	66 0f       	add	r22, r22
    13cc:	77 1f       	adc	r23, r23
    13ce:	88 1f       	adc	r24, r24
    13d0:	91 50       	subi	r25, 0x01	; 1
    13d2:	50 40       	sbci	r21, 0x00	; 0
    13d4:	c1 f7       	brne	.-16     	; 0x13c6 <ldexp+0x18>
    13d6:	9e 3f       	cpi	r25, 0xFE	; 254
    13d8:	51 05       	cpc	r21, r1
    13da:	2c f7       	brge	.-54     	; 0x13a6 <inverse+0x10>
    13dc:	88 0f       	add	r24, r24
    13de:	91 1d       	adc	r25, r1
    13e0:	96 95       	lsr	r25
    13e2:	87 95       	ror	r24
    13e4:	97 f9       	bld	r25, 7
    13e6:	08 95       	ret
    13e8:	5f 3f       	cpi	r21, 0xFF	; 255
    13ea:	ac f0       	brlt	.+42     	; 0x1416 <ldexp+0x68>
    13ec:	98 3e       	cpi	r25, 0xE8	; 232
    13ee:	9c f0       	brlt	.+38     	; 0x1416 <ldexp+0x68>
    13f0:	bb 27       	eor	r27, r27
    13f2:	86 95       	lsr	r24
    13f4:	77 95       	ror	r23
    13f6:	67 95       	ror	r22
    13f8:	b7 95       	ror	r27
    13fa:	08 f4       	brcc	.+2      	; 0x13fe <ldexp+0x50>
    13fc:	b1 60       	ori	r27, 0x01	; 1
    13fe:	93 95       	inc	r25
    1400:	c1 f7       	brne	.-16     	; 0x13f2 <ldexp+0x44>
    1402:	bb 0f       	add	r27, r27
    1404:	58 f7       	brcc	.-42     	; 0x13dc <ldexp+0x2e>
    1406:	11 f4       	brne	.+4      	; 0x140c <ldexp+0x5e>
    1408:	60 ff       	sbrs	r22, 0
    140a:	e8 cf       	rjmp	.-48     	; 0x13dc <ldexp+0x2e>
    140c:	6f 5f       	subi	r22, 0xFF	; 255
    140e:	7f 4f       	sbci	r23, 0xFF	; 255
    1410:	8f 4f       	sbci	r24, 0xFF	; 255
    1412:	9f 4f       	sbci	r25, 0xFF	; 255
    1414:	e3 cf       	rjmp	.-58     	; 0x13dc <ldexp+0x2e>
    1416:	0c 94 a7 08 	jmp	0x114e	; 0x114e <__fp_szero>
    141a:	16 f0       	brts	.+4      	; 0x1420 <ldexp+0x72>
    141c:	0c 94 fe 0a 	jmp	0x15fc	; 0x15fc <__fp_mpack>
    1420:	0c 94 62 08 	jmp	0x10c4	; 0x10c4 <__fp_nan>
    1424:	68 94       	set
    1426:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__fp_inf>

0000142a <log>:
    142a:	0e 94 8c 08 	call	0x1118	; 0x1118 <__fp_splitA>
    142e:	a8 f3       	brcs	.-22     	; 0x141a <ldexp+0x6c>
    1430:	99 23       	and	r25, r25
    1432:	c1 f3       	breq	.-16     	; 0x1424 <ldexp+0x76>
    1434:	ae f3       	brts	.-22     	; 0x1420 <ldexp+0x72>
    1436:	df 93       	push	r29
    1438:	cf 93       	push	r28
    143a:	1f 93       	push	r17
    143c:	0f 93       	push	r16
    143e:	ff 92       	push	r15
    1440:	c9 2f       	mov	r28, r25
    1442:	dd 27       	eor	r29, r29
    1444:	88 23       	and	r24, r24
    1446:	2a f0       	brmi	.+10     	; 0x1452 <log+0x28>
    1448:	21 97       	sbiw	r28, 0x01	; 1
    144a:	66 0f       	add	r22, r22
    144c:	77 1f       	adc	r23, r23
    144e:	88 1f       	adc	r24, r24
    1450:	da f7       	brpl	.-10     	; 0x1448 <log+0x1e>
    1452:	20 e0       	ldi	r18, 0x00	; 0
    1454:	30 e0       	ldi	r19, 0x00	; 0
    1456:	40 e8       	ldi	r20, 0x80	; 128
    1458:	5f eb       	ldi	r21, 0xBF	; 191
    145a:	9f e3       	ldi	r25, 0x3F	; 63
    145c:	88 39       	cpi	r24, 0x98	; 152
    145e:	20 f0       	brcs	.+8      	; 0x1468 <log+0x3e>
    1460:	80 3e       	cpi	r24, 0xE0	; 224
    1462:	38 f0       	brcs	.+14     	; 0x1472 <log+0x48>
    1464:	21 96       	adiw	r28, 0x01	; 1
    1466:	8f 77       	andi	r24, 0x7F	; 127
    1468:	0e 94 92 0a 	call	0x1524	; 0x1524 <__addsf3>
    146c:	ec e7       	ldi	r30, 0x7C	; 124
    146e:	f0 e0       	ldi	r31, 0x00	; 0
    1470:	04 c0       	rjmp	.+8      	; 0x147a <log+0x50>
    1472:	0e 94 92 0a 	call	0x1524	; 0x1524 <__addsf3>
    1476:	e9 ea       	ldi	r30, 0xA9	; 169
    1478:	f0 e0       	ldi	r31, 0x00	; 0
    147a:	0e 94 a4 09 	call	0x1348	; 0x1348 <__fp_powser>
    147e:	8b 01       	movw	r16, r22
    1480:	be 01       	movw	r22, r28
    1482:	ec 01       	movw	r28, r24
    1484:	fb 2e       	mov	r15, r27
    1486:	6f 57       	subi	r22, 0x7F	; 127
    1488:	71 09       	sbc	r23, r1
    148a:	75 95       	asr	r23
    148c:	77 1f       	adc	r23, r23
    148e:	88 0b       	sbc	r24, r24
    1490:	99 0b       	sbc	r25, r25
    1492:	0e 94 21 08 	call	0x1042	; 0x1042 <__floatsisf>
    1496:	28 e1       	ldi	r18, 0x18	; 24
    1498:	32 e7       	ldi	r19, 0x72	; 114
    149a:	41 e3       	ldi	r20, 0x31	; 49
    149c:	5f e3       	ldi	r21, 0x3F	; 63
    149e:	0e 94 c0 08 	call	0x1180	; 0x1180 <__mulsf3x>
    14a2:	af 2d       	mov	r26, r15
    14a4:	98 01       	movw	r18, r16
    14a6:	ae 01       	movw	r20, r28
    14a8:	ff 90       	pop	r15
    14aa:	0f 91       	pop	r16
    14ac:	1f 91       	pop	r17
    14ae:	cf 91       	pop	r28
    14b0:	df 91       	pop	r29
    14b2:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__addsf3x>
    14b6:	0c 94 73 08 	jmp	0x10e6	; 0x10e6 <__fp_round>

000014ba <modf>:
    14ba:	fa 01       	movw	r30, r20
    14bc:	dc 01       	movw	r26, r24
    14be:	aa 0f       	add	r26, r26
    14c0:	bb 1f       	adc	r27, r27
    14c2:	9b 01       	movw	r18, r22
    14c4:	ac 01       	movw	r20, r24
    14c6:	bf 57       	subi	r27, 0x7F	; 127
    14c8:	28 f4       	brcc	.+10     	; 0x14d4 <modf+0x1a>
    14ca:	22 27       	eor	r18, r18
    14cc:	33 27       	eor	r19, r19
    14ce:	44 27       	eor	r20, r20
    14d0:	50 78       	andi	r21, 0x80	; 128
    14d2:	20 c0       	rjmp	.+64     	; 0x1514 <modf+0x5a>
    14d4:	b7 51       	subi	r27, 0x17	; 23
    14d6:	90 f4       	brcc	.+36     	; 0x14fc <modf+0x42>
    14d8:	ab 2f       	mov	r26, r27
    14da:	00 24       	eor	r0, r0
    14dc:	46 95       	lsr	r20
    14de:	37 95       	ror	r19
    14e0:	27 95       	ror	r18
    14e2:	01 1c       	adc	r0, r1
    14e4:	a3 95       	inc	r26
    14e6:	d2 f3       	brmi	.-12     	; 0x14dc <modf+0x22>
    14e8:	00 20       	and	r0, r0
    14ea:	71 f0       	breq	.+28     	; 0x1508 <modf+0x4e>
    14ec:	22 0f       	add	r18, r18
    14ee:	33 1f       	adc	r19, r19
    14f0:	44 1f       	adc	r20, r20
    14f2:	b3 95       	inc	r27
    14f4:	da f3       	brmi	.-10     	; 0x14ec <modf+0x32>
    14f6:	0e d0       	rcall	.+28     	; 0x1514 <modf+0x5a>
    14f8:	0c 94 91 0a 	jmp	0x1522	; 0x1522 <__subsf3>
    14fc:	61 30       	cpi	r22, 0x01	; 1
    14fe:	71 05       	cpc	r23, r1
    1500:	a0 e8       	ldi	r26, 0x80	; 128
    1502:	8a 07       	cpc	r24, r26
    1504:	b9 46       	sbci	r27, 0x69	; 105
    1506:	30 f4       	brcc	.+12     	; 0x1514 <modf+0x5a>
    1508:	9b 01       	movw	r18, r22
    150a:	ac 01       	movw	r20, r24
    150c:	66 27       	eor	r22, r22
    150e:	77 27       	eor	r23, r23
    1510:	88 27       	eor	r24, r24
    1512:	90 78       	andi	r25, 0x80	; 128
    1514:	30 96       	adiw	r30, 0x00	; 0
    1516:	21 f0       	breq	.+8      	; 0x1520 <modf+0x66>
    1518:	20 83       	st	Z, r18
    151a:	31 83       	std	Z+1, r19	; 0x01
    151c:	42 83       	std	Z+2, r20	; 0x02
    151e:	53 83       	std	Z+3, r21	; 0x03
    1520:	08 95       	ret

00001522 <__subsf3>:
    1522:	50 58       	subi	r21, 0x80	; 128

00001524 <__addsf3>:
    1524:	bb 27       	eor	r27, r27
    1526:	aa 27       	eor	r26, r26
    1528:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__addsf3x>
    152c:	0c 94 73 08 	jmp	0x10e6	; 0x10e6 <__fp_round>
    1530:	0e 94 65 08 	call	0x10ca	; 0x10ca <__fp_pscA>
    1534:	38 f0       	brcs	.+14     	; 0x1544 <__addsf3+0x20>
    1536:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <__fp_pscB>
    153a:	20 f0       	brcs	.+8      	; 0x1544 <__addsf3+0x20>
    153c:	39 f4       	brne	.+14     	; 0x154c <__addsf3+0x28>
    153e:	9f 3f       	cpi	r25, 0xFF	; 255
    1540:	19 f4       	brne	.+6      	; 0x1548 <__addsf3+0x24>
    1542:	26 f4       	brtc	.+8      	; 0x154c <__addsf3+0x28>
    1544:	0c 94 62 08 	jmp	0x10c4	; 0x10c4 <__fp_nan>
    1548:	0e f4       	brtc	.+2      	; 0x154c <__addsf3+0x28>
    154a:	e0 95       	com	r30
    154c:	e7 fb       	bst	r30, 7
    154e:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__fp_inf>

00001552 <__addsf3x>:
    1552:	e9 2f       	mov	r30, r25
    1554:	0e 94 84 08 	call	0x1108	; 0x1108 <__fp_split3>
    1558:	58 f3       	brcs	.-42     	; 0x1530 <__addsf3+0xc>
    155a:	ba 17       	cp	r27, r26
    155c:	62 07       	cpc	r22, r18
    155e:	73 07       	cpc	r23, r19
    1560:	84 07       	cpc	r24, r20
    1562:	95 07       	cpc	r25, r21
    1564:	20 f0       	brcs	.+8      	; 0x156e <__addsf3x+0x1c>
    1566:	79 f4       	brne	.+30     	; 0x1586 <__addsf3x+0x34>
    1568:	a6 f5       	brtc	.+104    	; 0x15d2 <__addsf3x+0x80>
    156a:	0c 94 a6 08 	jmp	0x114c	; 0x114c <__fp_zero>
    156e:	0e f4       	brtc	.+2      	; 0x1572 <__addsf3x+0x20>
    1570:	e0 95       	com	r30
    1572:	0b 2e       	mov	r0, r27
    1574:	ba 2f       	mov	r27, r26
    1576:	a0 2d       	mov	r26, r0
    1578:	0b 01       	movw	r0, r22
    157a:	b9 01       	movw	r22, r18
    157c:	90 01       	movw	r18, r0
    157e:	0c 01       	movw	r0, r24
    1580:	ca 01       	movw	r24, r20
    1582:	a0 01       	movw	r20, r0
    1584:	11 24       	eor	r1, r1
    1586:	ff 27       	eor	r31, r31
    1588:	59 1b       	sub	r21, r25
    158a:	99 f0       	breq	.+38     	; 0x15b2 <__addsf3x+0x60>
    158c:	59 3f       	cpi	r21, 0xF9	; 249
    158e:	50 f4       	brcc	.+20     	; 0x15a4 <__addsf3x+0x52>
    1590:	50 3e       	cpi	r21, 0xE0	; 224
    1592:	68 f1       	brcs	.+90     	; 0x15ee <__addsf3x+0x9c>
    1594:	1a 16       	cp	r1, r26
    1596:	f0 40       	sbci	r31, 0x00	; 0
    1598:	a2 2f       	mov	r26, r18
    159a:	23 2f       	mov	r18, r19
    159c:	34 2f       	mov	r19, r20
    159e:	44 27       	eor	r20, r20
    15a0:	58 5f       	subi	r21, 0xF8	; 248
    15a2:	f3 cf       	rjmp	.-26     	; 0x158a <__addsf3x+0x38>
    15a4:	46 95       	lsr	r20
    15a6:	37 95       	ror	r19
    15a8:	27 95       	ror	r18
    15aa:	a7 95       	ror	r26
    15ac:	f0 40       	sbci	r31, 0x00	; 0
    15ae:	53 95       	inc	r21
    15b0:	c9 f7       	brne	.-14     	; 0x15a4 <__addsf3x+0x52>
    15b2:	7e f4       	brtc	.+30     	; 0x15d2 <__addsf3x+0x80>
    15b4:	1f 16       	cp	r1, r31
    15b6:	ba 0b       	sbc	r27, r26
    15b8:	62 0b       	sbc	r22, r18
    15ba:	73 0b       	sbc	r23, r19
    15bc:	84 0b       	sbc	r24, r20
    15be:	ba f0       	brmi	.+46     	; 0x15ee <__addsf3x+0x9c>
    15c0:	91 50       	subi	r25, 0x01	; 1
    15c2:	a1 f0       	breq	.+40     	; 0x15ec <__addsf3x+0x9a>
    15c4:	ff 0f       	add	r31, r31
    15c6:	bb 1f       	adc	r27, r27
    15c8:	66 1f       	adc	r22, r22
    15ca:	77 1f       	adc	r23, r23
    15cc:	88 1f       	adc	r24, r24
    15ce:	c2 f7       	brpl	.-16     	; 0x15c0 <__addsf3x+0x6e>
    15d0:	0e c0       	rjmp	.+28     	; 0x15ee <__addsf3x+0x9c>
    15d2:	ba 0f       	add	r27, r26
    15d4:	62 1f       	adc	r22, r18
    15d6:	73 1f       	adc	r23, r19
    15d8:	84 1f       	adc	r24, r20
    15da:	48 f4       	brcc	.+18     	; 0x15ee <__addsf3x+0x9c>
    15dc:	87 95       	ror	r24
    15de:	77 95       	ror	r23
    15e0:	67 95       	ror	r22
    15e2:	b7 95       	ror	r27
    15e4:	f7 95       	ror	r31
    15e6:	9e 3f       	cpi	r25, 0xFE	; 254
    15e8:	08 f0       	brcs	.+2      	; 0x15ec <__addsf3x+0x9a>
    15ea:	b0 cf       	rjmp	.-160    	; 0x154c <__addsf3+0x28>
    15ec:	93 95       	inc	r25
    15ee:	88 0f       	add	r24, r24
    15f0:	08 f0       	brcs	.+2      	; 0x15f4 <__addsf3x+0xa2>
    15f2:	99 27       	eor	r25, r25
    15f4:	ee 0f       	add	r30, r30
    15f6:	97 95       	ror	r25
    15f8:	87 95       	ror	r24
    15fa:	08 95       	ret

000015fc <__fp_mpack>:
    15fc:	9f 3f       	cpi	r25, 0xFF	; 255
    15fe:	31 f0       	breq	.+12     	; 0x160c <__fp_mpack_finite+0xc>

00001600 <__fp_mpack_finite>:
    1600:	91 50       	subi	r25, 0x01	; 1
    1602:	20 f4       	brcc	.+8      	; 0x160c <__fp_mpack_finite+0xc>
    1604:	87 95       	ror	r24
    1606:	77 95       	ror	r23
    1608:	67 95       	ror	r22
    160a:	b7 95       	ror	r27
    160c:	88 0f       	add	r24, r24
    160e:	91 1d       	adc	r25, r1
    1610:	96 95       	lsr	r25
    1612:	87 95       	ror	r24
    1614:	97 f9       	bld	r25, 7
    1616:	08 95       	ret

00001618 <__divmodhi4>:
    1618:	97 fb       	bst	r25, 7
    161a:	07 2e       	mov	r0, r23
    161c:	16 f4       	brtc	.+4      	; 0x1622 <__divmodhi4+0xa>
    161e:	00 94       	com	r0
    1620:	07 d0       	rcall	.+14     	; 0x1630 <__divmodhi4_neg1>
    1622:	77 fd       	sbrc	r23, 7
    1624:	09 d0       	rcall	.+18     	; 0x1638 <__divmodhi4_neg2>
    1626:	0e 94 20 0b 	call	0x1640	; 0x1640 <__udivmodhi4>
    162a:	07 fc       	sbrc	r0, 7
    162c:	05 d0       	rcall	.+10     	; 0x1638 <__divmodhi4_neg2>
    162e:	3e f4       	brtc	.+14     	; 0x163e <__divmodhi4_exit>

00001630 <__divmodhi4_neg1>:
    1630:	90 95       	com	r25
    1632:	81 95       	neg	r24
    1634:	9f 4f       	sbci	r25, 0xFF	; 255
    1636:	08 95       	ret

00001638 <__divmodhi4_neg2>:
    1638:	70 95       	com	r23
    163a:	61 95       	neg	r22
    163c:	7f 4f       	sbci	r23, 0xFF	; 255

0000163e <__divmodhi4_exit>:
    163e:	08 95       	ret

00001640 <__udivmodhi4>:
    1640:	aa 1b       	sub	r26, r26
    1642:	bb 1b       	sub	r27, r27
    1644:	51 e1       	ldi	r21, 0x11	; 17
    1646:	07 c0       	rjmp	.+14     	; 0x1656 <__udivmodhi4_ep>

00001648 <__udivmodhi4_loop>:
    1648:	aa 1f       	adc	r26, r26
    164a:	bb 1f       	adc	r27, r27
    164c:	a6 17       	cp	r26, r22
    164e:	b7 07       	cpc	r27, r23
    1650:	10 f0       	brcs	.+4      	; 0x1656 <__udivmodhi4_ep>
    1652:	a6 1b       	sub	r26, r22
    1654:	b7 0b       	sbc	r27, r23

00001656 <__udivmodhi4_ep>:
    1656:	88 1f       	adc	r24, r24
    1658:	99 1f       	adc	r25, r25
    165a:	5a 95       	dec	r21
    165c:	a9 f7       	brne	.-22     	; 0x1648 <__udivmodhi4_loop>
    165e:	80 95       	com	r24
    1660:	90 95       	com	r25
    1662:	bc 01       	movw	r22, r24
    1664:	cd 01       	movw	r24, r26
    1666:	08 95       	ret

00001668 <do_rand>:
    1668:	8f 92       	push	r8
    166a:	9f 92       	push	r9
    166c:	af 92       	push	r10
    166e:	bf 92       	push	r11
    1670:	cf 92       	push	r12
    1672:	df 92       	push	r13
    1674:	ef 92       	push	r14
    1676:	ff 92       	push	r15
    1678:	cf 93       	push	r28
    167a:	df 93       	push	r29
    167c:	ec 01       	movw	r28, r24
    167e:	68 81       	ld	r22, Y
    1680:	79 81       	ldd	r23, Y+1	; 0x01
    1682:	8a 81       	ldd	r24, Y+2	; 0x02
    1684:	9b 81       	ldd	r25, Y+3	; 0x03
    1686:	61 15       	cp	r22, r1
    1688:	71 05       	cpc	r23, r1
    168a:	81 05       	cpc	r24, r1
    168c:	91 05       	cpc	r25, r1
    168e:	21 f4       	brne	.+8      	; 0x1698 <do_rand+0x30>
    1690:	64 e2       	ldi	r22, 0x24	; 36
    1692:	79 ed       	ldi	r23, 0xD9	; 217
    1694:	8b e5       	ldi	r24, 0x5B	; 91
    1696:	97 e0       	ldi	r25, 0x07	; 7
    1698:	2d e1       	ldi	r18, 0x1D	; 29
    169a:	33 ef       	ldi	r19, 0xF3	; 243
    169c:	41 e0       	ldi	r20, 0x01	; 1
    169e:	50 e0       	ldi	r21, 0x00	; 0
    16a0:	0e 94 4e 0e 	call	0x1c9c	; 0x1c9c <__divmodsi4>
    16a4:	49 01       	movw	r8, r18
    16a6:	5a 01       	movw	r10, r20
    16a8:	9b 01       	movw	r18, r22
    16aa:	ac 01       	movw	r20, r24
    16ac:	a7 ea       	ldi	r26, 0xA7	; 167
    16ae:	b1 e4       	ldi	r27, 0x41	; 65
    16b0:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <__muluhisi3>
    16b4:	6b 01       	movw	r12, r22
    16b6:	7c 01       	movw	r14, r24
    16b8:	ac ee       	ldi	r26, 0xEC	; 236
    16ba:	b4 ef       	ldi	r27, 0xF4	; 244
    16bc:	a5 01       	movw	r20, r10
    16be:	94 01       	movw	r18, r8
    16c0:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <__mulohisi3>
    16c4:	dc 01       	movw	r26, r24
    16c6:	cb 01       	movw	r24, r22
    16c8:	8c 0d       	add	r24, r12
    16ca:	9d 1d       	adc	r25, r13
    16cc:	ae 1d       	adc	r26, r14
    16ce:	bf 1d       	adc	r27, r15
    16d0:	b7 ff       	sbrs	r27, 7
    16d2:	03 c0       	rjmp	.+6      	; 0x16da <do_rand+0x72>
    16d4:	01 97       	sbiw	r24, 0x01	; 1
    16d6:	a1 09       	sbc	r26, r1
    16d8:	b0 48       	sbci	r27, 0x80	; 128
    16da:	88 83       	st	Y, r24
    16dc:	99 83       	std	Y+1, r25	; 0x01
    16de:	aa 83       	std	Y+2, r26	; 0x02
    16e0:	bb 83       	std	Y+3, r27	; 0x03
    16e2:	9f 77       	andi	r25, 0x7F	; 127
    16e4:	df 91       	pop	r29
    16e6:	cf 91       	pop	r28
    16e8:	ff 90       	pop	r15
    16ea:	ef 90       	pop	r14
    16ec:	df 90       	pop	r13
    16ee:	cf 90       	pop	r12
    16f0:	bf 90       	pop	r11
    16f2:	af 90       	pop	r10
    16f4:	9f 90       	pop	r9
    16f6:	8f 90       	pop	r8
    16f8:	08 95       	ret

000016fa <rand_r>:
    16fa:	0e 94 34 0b 	call	0x1668	; 0x1668 <do_rand>
    16fe:	08 95       	ret

00001700 <rand>:
    1700:	80 e6       	ldi	r24, 0x60	; 96
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	0e 94 34 0b 	call	0x1668	; 0x1668 <do_rand>
    1708:	08 95       	ret

0000170a <srand>:
    170a:	a0 e0       	ldi	r26, 0x00	; 0
    170c:	b0 e0       	ldi	r27, 0x00	; 0
    170e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
    1712:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
    1716:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__data_start+0x2>
    171a:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__data_start+0x3>
    171e:	08 95       	ret

00001720 <strcat>:
    1720:	fb 01       	movw	r30, r22
    1722:	dc 01       	movw	r26, r24
    1724:	0d 90       	ld	r0, X+
    1726:	00 20       	and	r0, r0
    1728:	e9 f7       	brne	.-6      	; 0x1724 <strcat+0x4>
    172a:	11 97       	sbiw	r26, 0x01	; 1
    172c:	01 90       	ld	r0, Z+
    172e:	0d 92       	st	X+, r0
    1730:	00 20       	and	r0, r0
    1732:	e1 f7       	brne	.-8      	; 0x172c <strcat+0xc>
    1734:	08 95       	ret

00001736 <sprintf>:
    1736:	ae e0       	ldi	r26, 0x0E	; 14
    1738:	b0 e0       	ldi	r27, 0x00	; 0
    173a:	e1 ea       	ldi	r30, 0xA1	; 161
    173c:	fb e0       	ldi	r31, 0x0B	; 11
    173e:	0c 94 8e 0e 	jmp	0x1d1c	; 0x1d1c <__prologue_saves__+0x1c>
    1742:	0d 89       	ldd	r16, Y+21	; 0x15
    1744:	1e 89       	ldd	r17, Y+22	; 0x16
    1746:	86 e0       	ldi	r24, 0x06	; 6
    1748:	8c 83       	std	Y+4, r24	; 0x04
    174a:	1a 83       	std	Y+2, r17	; 0x02
    174c:	09 83       	std	Y+1, r16	; 0x01
    174e:	8f ef       	ldi	r24, 0xFF	; 255
    1750:	9f e7       	ldi	r25, 0x7F	; 127
    1752:	9e 83       	std	Y+6, r25	; 0x06
    1754:	8d 83       	std	Y+5, r24	; 0x05
    1756:	ae 01       	movw	r20, r28
    1758:	47 5e       	subi	r20, 0xE7	; 231
    175a:	5f 4f       	sbci	r21, 0xFF	; 255
    175c:	6f 89       	ldd	r22, Y+23	; 0x17
    175e:	78 8d       	ldd	r23, Y+24	; 0x18
    1760:	ce 01       	movw	r24, r28
    1762:	01 96       	adiw	r24, 0x01	; 1
    1764:	0e 94 bd 0b 	call	0x177a	; 0x177a <vfprintf>
    1768:	ef 81       	ldd	r30, Y+7	; 0x07
    176a:	f8 85       	ldd	r31, Y+8	; 0x08
    176c:	e0 0f       	add	r30, r16
    176e:	f1 1f       	adc	r31, r17
    1770:	10 82       	st	Z, r1
    1772:	2e 96       	adiw	r28, 0x0e	; 14
    1774:	e4 e0       	ldi	r30, 0x04	; 4
    1776:	0c 94 aa 0e 	jmp	0x1d54	; 0x1d54 <__epilogue_restores__+0x1c>

0000177a <vfprintf>:
    177a:	ab e0       	ldi	r26, 0x0B	; 11
    177c:	b0 e0       	ldi	r27, 0x00	; 0
    177e:	e3 ec       	ldi	r30, 0xC3	; 195
    1780:	fb e0       	ldi	r31, 0x0B	; 11
    1782:	0c 94 80 0e 	jmp	0x1d00	; 0x1d00 <__prologue_saves__>
    1786:	6c 01       	movw	r12, r24
    1788:	7b 01       	movw	r14, r22
    178a:	8a 01       	movw	r16, r20
    178c:	fc 01       	movw	r30, r24
    178e:	17 82       	std	Z+7, r1	; 0x07
    1790:	16 82       	std	Z+6, r1	; 0x06
    1792:	83 81       	ldd	r24, Z+3	; 0x03
    1794:	81 ff       	sbrs	r24, 1
    1796:	cc c1       	rjmp	.+920    	; 0x1b30 <vfprintf+0x3b6>
    1798:	ce 01       	movw	r24, r28
    179a:	01 96       	adiw	r24, 0x01	; 1
    179c:	3c 01       	movw	r6, r24
    179e:	f6 01       	movw	r30, r12
    17a0:	93 81       	ldd	r25, Z+3	; 0x03
    17a2:	f7 01       	movw	r30, r14
    17a4:	93 fd       	sbrc	r25, 3
    17a6:	85 91       	lpm	r24, Z+
    17a8:	93 ff       	sbrs	r25, 3
    17aa:	81 91       	ld	r24, Z+
    17ac:	7f 01       	movw	r14, r30
    17ae:	88 23       	and	r24, r24
    17b0:	09 f4       	brne	.+2      	; 0x17b4 <vfprintf+0x3a>
    17b2:	ba c1       	rjmp	.+884    	; 0x1b28 <vfprintf+0x3ae>
    17b4:	85 32       	cpi	r24, 0x25	; 37
    17b6:	39 f4       	brne	.+14     	; 0x17c6 <vfprintf+0x4c>
    17b8:	93 fd       	sbrc	r25, 3
    17ba:	85 91       	lpm	r24, Z+
    17bc:	93 ff       	sbrs	r25, 3
    17be:	81 91       	ld	r24, Z+
    17c0:	7f 01       	movw	r14, r30
    17c2:	85 32       	cpi	r24, 0x25	; 37
    17c4:	29 f4       	brne	.+10     	; 0x17d0 <vfprintf+0x56>
    17c6:	b6 01       	movw	r22, r12
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <fputc>
    17ce:	e7 cf       	rjmp	.-50     	; 0x179e <vfprintf+0x24>
    17d0:	91 2c       	mov	r9, r1
    17d2:	21 2c       	mov	r2, r1
    17d4:	31 2c       	mov	r3, r1
    17d6:	ff e1       	ldi	r31, 0x1F	; 31
    17d8:	f3 15       	cp	r31, r3
    17da:	d8 f0       	brcs	.+54     	; 0x1812 <vfprintf+0x98>
    17dc:	8b 32       	cpi	r24, 0x2B	; 43
    17de:	79 f0       	breq	.+30     	; 0x17fe <vfprintf+0x84>
    17e0:	38 f4       	brcc	.+14     	; 0x17f0 <vfprintf+0x76>
    17e2:	80 32       	cpi	r24, 0x20	; 32
    17e4:	79 f0       	breq	.+30     	; 0x1804 <vfprintf+0x8a>
    17e6:	83 32       	cpi	r24, 0x23	; 35
    17e8:	a1 f4       	brne	.+40     	; 0x1812 <vfprintf+0x98>
    17ea:	23 2d       	mov	r18, r3
    17ec:	20 61       	ori	r18, 0x10	; 16
    17ee:	1d c0       	rjmp	.+58     	; 0x182a <vfprintf+0xb0>
    17f0:	8d 32       	cpi	r24, 0x2D	; 45
    17f2:	61 f0       	breq	.+24     	; 0x180c <vfprintf+0x92>
    17f4:	80 33       	cpi	r24, 0x30	; 48
    17f6:	69 f4       	brne	.+26     	; 0x1812 <vfprintf+0x98>
    17f8:	23 2d       	mov	r18, r3
    17fa:	21 60       	ori	r18, 0x01	; 1
    17fc:	16 c0       	rjmp	.+44     	; 0x182a <vfprintf+0xb0>
    17fe:	83 2d       	mov	r24, r3
    1800:	82 60       	ori	r24, 0x02	; 2
    1802:	38 2e       	mov	r3, r24
    1804:	e3 2d       	mov	r30, r3
    1806:	e4 60       	ori	r30, 0x04	; 4
    1808:	3e 2e       	mov	r3, r30
    180a:	2a c0       	rjmp	.+84     	; 0x1860 <vfprintf+0xe6>
    180c:	f3 2d       	mov	r31, r3
    180e:	f8 60       	ori	r31, 0x08	; 8
    1810:	1d c0       	rjmp	.+58     	; 0x184c <vfprintf+0xd2>
    1812:	37 fc       	sbrc	r3, 7
    1814:	2d c0       	rjmp	.+90     	; 0x1870 <vfprintf+0xf6>
    1816:	20 ed       	ldi	r18, 0xD0	; 208
    1818:	28 0f       	add	r18, r24
    181a:	2a 30       	cpi	r18, 0x0A	; 10
    181c:	40 f0       	brcs	.+16     	; 0x182e <vfprintf+0xb4>
    181e:	8e 32       	cpi	r24, 0x2E	; 46
    1820:	b9 f4       	brne	.+46     	; 0x1850 <vfprintf+0xd6>
    1822:	36 fc       	sbrc	r3, 6
    1824:	81 c1       	rjmp	.+770    	; 0x1b28 <vfprintf+0x3ae>
    1826:	23 2d       	mov	r18, r3
    1828:	20 64       	ori	r18, 0x40	; 64
    182a:	32 2e       	mov	r3, r18
    182c:	19 c0       	rjmp	.+50     	; 0x1860 <vfprintf+0xe6>
    182e:	36 fe       	sbrs	r3, 6
    1830:	06 c0       	rjmp	.+12     	; 0x183e <vfprintf+0xc4>
    1832:	8a e0       	ldi	r24, 0x0A	; 10
    1834:	98 9e       	mul	r9, r24
    1836:	20 0d       	add	r18, r0
    1838:	11 24       	eor	r1, r1
    183a:	92 2e       	mov	r9, r18
    183c:	11 c0       	rjmp	.+34     	; 0x1860 <vfprintf+0xe6>
    183e:	ea e0       	ldi	r30, 0x0A	; 10
    1840:	2e 9e       	mul	r2, r30
    1842:	20 0d       	add	r18, r0
    1844:	11 24       	eor	r1, r1
    1846:	22 2e       	mov	r2, r18
    1848:	f3 2d       	mov	r31, r3
    184a:	f0 62       	ori	r31, 0x20	; 32
    184c:	3f 2e       	mov	r3, r31
    184e:	08 c0       	rjmp	.+16     	; 0x1860 <vfprintf+0xe6>
    1850:	8c 36       	cpi	r24, 0x6C	; 108
    1852:	21 f4       	brne	.+8      	; 0x185c <vfprintf+0xe2>
    1854:	83 2d       	mov	r24, r3
    1856:	80 68       	ori	r24, 0x80	; 128
    1858:	38 2e       	mov	r3, r24
    185a:	02 c0       	rjmp	.+4      	; 0x1860 <vfprintf+0xe6>
    185c:	88 36       	cpi	r24, 0x68	; 104
    185e:	41 f4       	brne	.+16     	; 0x1870 <vfprintf+0xf6>
    1860:	f7 01       	movw	r30, r14
    1862:	93 fd       	sbrc	r25, 3
    1864:	85 91       	lpm	r24, Z+
    1866:	93 ff       	sbrs	r25, 3
    1868:	81 91       	ld	r24, Z+
    186a:	7f 01       	movw	r14, r30
    186c:	81 11       	cpse	r24, r1
    186e:	b3 cf       	rjmp	.-154    	; 0x17d6 <vfprintf+0x5c>
    1870:	98 2f       	mov	r25, r24
    1872:	9f 7d       	andi	r25, 0xDF	; 223
    1874:	95 54       	subi	r25, 0x45	; 69
    1876:	93 30       	cpi	r25, 0x03	; 3
    1878:	28 f4       	brcc	.+10     	; 0x1884 <vfprintf+0x10a>
    187a:	0c 5f       	subi	r16, 0xFC	; 252
    187c:	1f 4f       	sbci	r17, 0xFF	; 255
    187e:	9f e3       	ldi	r25, 0x3F	; 63
    1880:	99 83       	std	Y+1, r25	; 0x01
    1882:	0d c0       	rjmp	.+26     	; 0x189e <vfprintf+0x124>
    1884:	83 36       	cpi	r24, 0x63	; 99
    1886:	31 f0       	breq	.+12     	; 0x1894 <vfprintf+0x11a>
    1888:	83 37       	cpi	r24, 0x73	; 115
    188a:	71 f0       	breq	.+28     	; 0x18a8 <vfprintf+0x12e>
    188c:	83 35       	cpi	r24, 0x53	; 83
    188e:	09 f0       	breq	.+2      	; 0x1892 <vfprintf+0x118>
    1890:	59 c0       	rjmp	.+178    	; 0x1944 <vfprintf+0x1ca>
    1892:	21 c0       	rjmp	.+66     	; 0x18d6 <vfprintf+0x15c>
    1894:	f8 01       	movw	r30, r16
    1896:	80 81       	ld	r24, Z
    1898:	89 83       	std	Y+1, r24	; 0x01
    189a:	0e 5f       	subi	r16, 0xFE	; 254
    189c:	1f 4f       	sbci	r17, 0xFF	; 255
    189e:	88 24       	eor	r8, r8
    18a0:	83 94       	inc	r8
    18a2:	91 2c       	mov	r9, r1
    18a4:	53 01       	movw	r10, r6
    18a6:	13 c0       	rjmp	.+38     	; 0x18ce <vfprintf+0x154>
    18a8:	28 01       	movw	r4, r16
    18aa:	f2 e0       	ldi	r31, 0x02	; 2
    18ac:	4f 0e       	add	r4, r31
    18ae:	51 1c       	adc	r5, r1
    18b0:	f8 01       	movw	r30, r16
    18b2:	a0 80       	ld	r10, Z
    18b4:	b1 80       	ldd	r11, Z+1	; 0x01
    18b6:	36 fe       	sbrs	r3, 6
    18b8:	03 c0       	rjmp	.+6      	; 0x18c0 <vfprintf+0x146>
    18ba:	69 2d       	mov	r22, r9
    18bc:	70 e0       	ldi	r23, 0x00	; 0
    18be:	02 c0       	rjmp	.+4      	; 0x18c4 <vfprintf+0x14a>
    18c0:	6f ef       	ldi	r22, 0xFF	; 255
    18c2:	7f ef       	ldi	r23, 0xFF	; 255
    18c4:	c5 01       	movw	r24, r10
    18c6:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <strnlen>
    18ca:	4c 01       	movw	r8, r24
    18cc:	82 01       	movw	r16, r4
    18ce:	f3 2d       	mov	r31, r3
    18d0:	ff 77       	andi	r31, 0x7F	; 127
    18d2:	3f 2e       	mov	r3, r31
    18d4:	16 c0       	rjmp	.+44     	; 0x1902 <vfprintf+0x188>
    18d6:	28 01       	movw	r4, r16
    18d8:	22 e0       	ldi	r18, 0x02	; 2
    18da:	42 0e       	add	r4, r18
    18dc:	51 1c       	adc	r5, r1
    18de:	f8 01       	movw	r30, r16
    18e0:	a0 80       	ld	r10, Z
    18e2:	b1 80       	ldd	r11, Z+1	; 0x01
    18e4:	36 fe       	sbrs	r3, 6
    18e6:	03 c0       	rjmp	.+6      	; 0x18ee <vfprintf+0x174>
    18e8:	69 2d       	mov	r22, r9
    18ea:	70 e0       	ldi	r23, 0x00	; 0
    18ec:	02 c0       	rjmp	.+4      	; 0x18f2 <vfprintf+0x178>
    18ee:	6f ef       	ldi	r22, 0xFF	; 255
    18f0:	7f ef       	ldi	r23, 0xFF	; 255
    18f2:	c5 01       	movw	r24, r10
    18f4:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <strnlen_P>
    18f8:	4c 01       	movw	r8, r24
    18fa:	f3 2d       	mov	r31, r3
    18fc:	f0 68       	ori	r31, 0x80	; 128
    18fe:	3f 2e       	mov	r3, r31
    1900:	82 01       	movw	r16, r4
    1902:	33 fc       	sbrc	r3, 3
    1904:	1b c0       	rjmp	.+54     	; 0x193c <vfprintf+0x1c2>
    1906:	82 2d       	mov	r24, r2
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	88 16       	cp	r8, r24
    190c:	99 06       	cpc	r9, r25
    190e:	b0 f4       	brcc	.+44     	; 0x193c <vfprintf+0x1c2>
    1910:	b6 01       	movw	r22, r12
    1912:	80 e2       	ldi	r24, 0x20	; 32
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <fputc>
    191a:	2a 94       	dec	r2
    191c:	f4 cf       	rjmp	.-24     	; 0x1906 <vfprintf+0x18c>
    191e:	f5 01       	movw	r30, r10
    1920:	37 fc       	sbrc	r3, 7
    1922:	85 91       	lpm	r24, Z+
    1924:	37 fe       	sbrs	r3, 7
    1926:	81 91       	ld	r24, Z+
    1928:	5f 01       	movw	r10, r30
    192a:	b6 01       	movw	r22, r12
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <fputc>
    1932:	21 10       	cpse	r2, r1
    1934:	2a 94       	dec	r2
    1936:	21 e0       	ldi	r18, 0x01	; 1
    1938:	82 1a       	sub	r8, r18
    193a:	91 08       	sbc	r9, r1
    193c:	81 14       	cp	r8, r1
    193e:	91 04       	cpc	r9, r1
    1940:	71 f7       	brne	.-36     	; 0x191e <vfprintf+0x1a4>
    1942:	e8 c0       	rjmp	.+464    	; 0x1b14 <vfprintf+0x39a>
    1944:	84 36       	cpi	r24, 0x64	; 100
    1946:	11 f0       	breq	.+4      	; 0x194c <vfprintf+0x1d2>
    1948:	89 36       	cpi	r24, 0x69	; 105
    194a:	41 f5       	brne	.+80     	; 0x199c <vfprintf+0x222>
    194c:	f8 01       	movw	r30, r16
    194e:	37 fe       	sbrs	r3, 7
    1950:	07 c0       	rjmp	.+14     	; 0x1960 <vfprintf+0x1e6>
    1952:	60 81       	ld	r22, Z
    1954:	71 81       	ldd	r23, Z+1	; 0x01
    1956:	82 81       	ldd	r24, Z+2	; 0x02
    1958:	93 81       	ldd	r25, Z+3	; 0x03
    195a:	0c 5f       	subi	r16, 0xFC	; 252
    195c:	1f 4f       	sbci	r17, 0xFF	; 255
    195e:	08 c0       	rjmp	.+16     	; 0x1970 <vfprintf+0x1f6>
    1960:	60 81       	ld	r22, Z
    1962:	71 81       	ldd	r23, Z+1	; 0x01
    1964:	07 2e       	mov	r0, r23
    1966:	00 0c       	add	r0, r0
    1968:	88 0b       	sbc	r24, r24
    196a:	99 0b       	sbc	r25, r25
    196c:	0e 5f       	subi	r16, 0xFE	; 254
    196e:	1f 4f       	sbci	r17, 0xFF	; 255
    1970:	f3 2d       	mov	r31, r3
    1972:	ff 76       	andi	r31, 0x6F	; 111
    1974:	3f 2e       	mov	r3, r31
    1976:	97 ff       	sbrs	r25, 7
    1978:	09 c0       	rjmp	.+18     	; 0x198c <vfprintf+0x212>
    197a:	90 95       	com	r25
    197c:	80 95       	com	r24
    197e:	70 95       	com	r23
    1980:	61 95       	neg	r22
    1982:	7f 4f       	sbci	r23, 0xFF	; 255
    1984:	8f 4f       	sbci	r24, 0xFF	; 255
    1986:	9f 4f       	sbci	r25, 0xFF	; 255
    1988:	f0 68       	ori	r31, 0x80	; 128
    198a:	3f 2e       	mov	r3, r31
    198c:	2a e0       	ldi	r18, 0x0A	; 10
    198e:	30 e0       	ldi	r19, 0x00	; 0
    1990:	a3 01       	movw	r20, r6
    1992:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <__ultoa_invert>
    1996:	88 2e       	mov	r8, r24
    1998:	86 18       	sub	r8, r6
    199a:	45 c0       	rjmp	.+138    	; 0x1a26 <vfprintf+0x2ac>
    199c:	85 37       	cpi	r24, 0x75	; 117
    199e:	31 f4       	brne	.+12     	; 0x19ac <vfprintf+0x232>
    19a0:	23 2d       	mov	r18, r3
    19a2:	2f 7e       	andi	r18, 0xEF	; 239
    19a4:	b2 2e       	mov	r11, r18
    19a6:	2a e0       	ldi	r18, 0x0A	; 10
    19a8:	30 e0       	ldi	r19, 0x00	; 0
    19aa:	25 c0       	rjmp	.+74     	; 0x19f6 <vfprintf+0x27c>
    19ac:	93 2d       	mov	r25, r3
    19ae:	99 7f       	andi	r25, 0xF9	; 249
    19b0:	b9 2e       	mov	r11, r25
    19b2:	8f 36       	cpi	r24, 0x6F	; 111
    19b4:	c1 f0       	breq	.+48     	; 0x19e6 <vfprintf+0x26c>
    19b6:	18 f4       	brcc	.+6      	; 0x19be <vfprintf+0x244>
    19b8:	88 35       	cpi	r24, 0x58	; 88
    19ba:	79 f0       	breq	.+30     	; 0x19da <vfprintf+0x260>
    19bc:	b5 c0       	rjmp	.+362    	; 0x1b28 <vfprintf+0x3ae>
    19be:	80 37       	cpi	r24, 0x70	; 112
    19c0:	19 f0       	breq	.+6      	; 0x19c8 <vfprintf+0x24e>
    19c2:	88 37       	cpi	r24, 0x78	; 120
    19c4:	21 f0       	breq	.+8      	; 0x19ce <vfprintf+0x254>
    19c6:	b0 c0       	rjmp	.+352    	; 0x1b28 <vfprintf+0x3ae>
    19c8:	e9 2f       	mov	r30, r25
    19ca:	e0 61       	ori	r30, 0x10	; 16
    19cc:	be 2e       	mov	r11, r30
    19ce:	b4 fe       	sbrs	r11, 4
    19d0:	0d c0       	rjmp	.+26     	; 0x19ec <vfprintf+0x272>
    19d2:	fb 2d       	mov	r31, r11
    19d4:	f4 60       	ori	r31, 0x04	; 4
    19d6:	bf 2e       	mov	r11, r31
    19d8:	09 c0       	rjmp	.+18     	; 0x19ec <vfprintf+0x272>
    19da:	34 fe       	sbrs	r3, 4
    19dc:	0a c0       	rjmp	.+20     	; 0x19f2 <vfprintf+0x278>
    19de:	29 2f       	mov	r18, r25
    19e0:	26 60       	ori	r18, 0x06	; 6
    19e2:	b2 2e       	mov	r11, r18
    19e4:	06 c0       	rjmp	.+12     	; 0x19f2 <vfprintf+0x278>
    19e6:	28 e0       	ldi	r18, 0x08	; 8
    19e8:	30 e0       	ldi	r19, 0x00	; 0
    19ea:	05 c0       	rjmp	.+10     	; 0x19f6 <vfprintf+0x27c>
    19ec:	20 e1       	ldi	r18, 0x10	; 16
    19ee:	30 e0       	ldi	r19, 0x00	; 0
    19f0:	02 c0       	rjmp	.+4      	; 0x19f6 <vfprintf+0x27c>
    19f2:	20 e1       	ldi	r18, 0x10	; 16
    19f4:	32 e0       	ldi	r19, 0x02	; 2
    19f6:	f8 01       	movw	r30, r16
    19f8:	b7 fe       	sbrs	r11, 7
    19fa:	07 c0       	rjmp	.+14     	; 0x1a0a <vfprintf+0x290>
    19fc:	60 81       	ld	r22, Z
    19fe:	71 81       	ldd	r23, Z+1	; 0x01
    1a00:	82 81       	ldd	r24, Z+2	; 0x02
    1a02:	93 81       	ldd	r25, Z+3	; 0x03
    1a04:	0c 5f       	subi	r16, 0xFC	; 252
    1a06:	1f 4f       	sbci	r17, 0xFF	; 255
    1a08:	06 c0       	rjmp	.+12     	; 0x1a16 <vfprintf+0x29c>
    1a0a:	60 81       	ld	r22, Z
    1a0c:	71 81       	ldd	r23, Z+1	; 0x01
    1a0e:	80 e0       	ldi	r24, 0x00	; 0
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	0e 5f       	subi	r16, 0xFE	; 254
    1a14:	1f 4f       	sbci	r17, 0xFF	; 255
    1a16:	a3 01       	movw	r20, r6
    1a18:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <__ultoa_invert>
    1a1c:	88 2e       	mov	r8, r24
    1a1e:	86 18       	sub	r8, r6
    1a20:	fb 2d       	mov	r31, r11
    1a22:	ff 77       	andi	r31, 0x7F	; 127
    1a24:	3f 2e       	mov	r3, r31
    1a26:	36 fe       	sbrs	r3, 6
    1a28:	0d c0       	rjmp	.+26     	; 0x1a44 <vfprintf+0x2ca>
    1a2a:	23 2d       	mov	r18, r3
    1a2c:	2e 7f       	andi	r18, 0xFE	; 254
    1a2e:	a2 2e       	mov	r10, r18
    1a30:	89 14       	cp	r8, r9
    1a32:	58 f4       	brcc	.+22     	; 0x1a4a <vfprintf+0x2d0>
    1a34:	34 fe       	sbrs	r3, 4
    1a36:	0b c0       	rjmp	.+22     	; 0x1a4e <vfprintf+0x2d4>
    1a38:	32 fc       	sbrc	r3, 2
    1a3a:	09 c0       	rjmp	.+18     	; 0x1a4e <vfprintf+0x2d4>
    1a3c:	83 2d       	mov	r24, r3
    1a3e:	8e 7e       	andi	r24, 0xEE	; 238
    1a40:	a8 2e       	mov	r10, r24
    1a42:	05 c0       	rjmp	.+10     	; 0x1a4e <vfprintf+0x2d4>
    1a44:	b8 2c       	mov	r11, r8
    1a46:	a3 2c       	mov	r10, r3
    1a48:	03 c0       	rjmp	.+6      	; 0x1a50 <vfprintf+0x2d6>
    1a4a:	b8 2c       	mov	r11, r8
    1a4c:	01 c0       	rjmp	.+2      	; 0x1a50 <vfprintf+0x2d6>
    1a4e:	b9 2c       	mov	r11, r9
    1a50:	a4 fe       	sbrs	r10, 4
    1a52:	0f c0       	rjmp	.+30     	; 0x1a72 <vfprintf+0x2f8>
    1a54:	fe 01       	movw	r30, r28
    1a56:	e8 0d       	add	r30, r8
    1a58:	f1 1d       	adc	r31, r1
    1a5a:	80 81       	ld	r24, Z
    1a5c:	80 33       	cpi	r24, 0x30	; 48
    1a5e:	21 f4       	brne	.+8      	; 0x1a68 <vfprintf+0x2ee>
    1a60:	9a 2d       	mov	r25, r10
    1a62:	99 7e       	andi	r25, 0xE9	; 233
    1a64:	a9 2e       	mov	r10, r25
    1a66:	09 c0       	rjmp	.+18     	; 0x1a7a <vfprintf+0x300>
    1a68:	a2 fe       	sbrs	r10, 2
    1a6a:	06 c0       	rjmp	.+12     	; 0x1a78 <vfprintf+0x2fe>
    1a6c:	b3 94       	inc	r11
    1a6e:	b3 94       	inc	r11
    1a70:	04 c0       	rjmp	.+8      	; 0x1a7a <vfprintf+0x300>
    1a72:	8a 2d       	mov	r24, r10
    1a74:	86 78       	andi	r24, 0x86	; 134
    1a76:	09 f0       	breq	.+2      	; 0x1a7a <vfprintf+0x300>
    1a78:	b3 94       	inc	r11
    1a7a:	a3 fc       	sbrc	r10, 3
    1a7c:	11 c0       	rjmp	.+34     	; 0x1aa0 <vfprintf+0x326>
    1a7e:	a0 fe       	sbrs	r10, 0
    1a80:	06 c0       	rjmp	.+12     	; 0x1a8e <vfprintf+0x314>
    1a82:	b2 14       	cp	r11, r2
    1a84:	88 f4       	brcc	.+34     	; 0x1aa8 <vfprintf+0x32e>
    1a86:	28 0c       	add	r2, r8
    1a88:	92 2c       	mov	r9, r2
    1a8a:	9b 18       	sub	r9, r11
    1a8c:	0e c0       	rjmp	.+28     	; 0x1aaa <vfprintf+0x330>
    1a8e:	b2 14       	cp	r11, r2
    1a90:	60 f4       	brcc	.+24     	; 0x1aaa <vfprintf+0x330>
    1a92:	b6 01       	movw	r22, r12
    1a94:	80 e2       	ldi	r24, 0x20	; 32
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <fputc>
    1a9c:	b3 94       	inc	r11
    1a9e:	f7 cf       	rjmp	.-18     	; 0x1a8e <vfprintf+0x314>
    1aa0:	b2 14       	cp	r11, r2
    1aa2:	18 f4       	brcc	.+6      	; 0x1aaa <vfprintf+0x330>
    1aa4:	2b 18       	sub	r2, r11
    1aa6:	02 c0       	rjmp	.+4      	; 0x1aac <vfprintf+0x332>
    1aa8:	98 2c       	mov	r9, r8
    1aaa:	21 2c       	mov	r2, r1
    1aac:	a4 fe       	sbrs	r10, 4
    1aae:	10 c0       	rjmp	.+32     	; 0x1ad0 <vfprintf+0x356>
    1ab0:	b6 01       	movw	r22, r12
    1ab2:	80 e3       	ldi	r24, 0x30	; 48
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <fputc>
    1aba:	a2 fe       	sbrs	r10, 2
    1abc:	17 c0       	rjmp	.+46     	; 0x1aec <vfprintf+0x372>
    1abe:	a1 fc       	sbrc	r10, 1
    1ac0:	03 c0       	rjmp	.+6      	; 0x1ac8 <vfprintf+0x34e>
    1ac2:	88 e7       	ldi	r24, 0x78	; 120
    1ac4:	90 e0       	ldi	r25, 0x00	; 0
    1ac6:	02 c0       	rjmp	.+4      	; 0x1acc <vfprintf+0x352>
    1ac8:	88 e5       	ldi	r24, 0x58	; 88
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	b6 01       	movw	r22, r12
    1ace:	0c c0       	rjmp	.+24     	; 0x1ae8 <vfprintf+0x36e>
    1ad0:	8a 2d       	mov	r24, r10
    1ad2:	86 78       	andi	r24, 0x86	; 134
    1ad4:	59 f0       	breq	.+22     	; 0x1aec <vfprintf+0x372>
    1ad6:	a1 fe       	sbrs	r10, 1
    1ad8:	02 c0       	rjmp	.+4      	; 0x1ade <vfprintf+0x364>
    1ada:	8b e2       	ldi	r24, 0x2B	; 43
    1adc:	01 c0       	rjmp	.+2      	; 0x1ae0 <vfprintf+0x366>
    1ade:	80 e2       	ldi	r24, 0x20	; 32
    1ae0:	a7 fc       	sbrc	r10, 7
    1ae2:	8d e2       	ldi	r24, 0x2D	; 45
    1ae4:	b6 01       	movw	r22, r12
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <fputc>
    1aec:	89 14       	cp	r8, r9
    1aee:	38 f4       	brcc	.+14     	; 0x1afe <vfprintf+0x384>
    1af0:	b6 01       	movw	r22, r12
    1af2:	80 e3       	ldi	r24, 0x30	; 48
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <fputc>
    1afa:	9a 94       	dec	r9
    1afc:	f7 cf       	rjmp	.-18     	; 0x1aec <vfprintf+0x372>
    1afe:	8a 94       	dec	r8
    1b00:	f3 01       	movw	r30, r6
    1b02:	e8 0d       	add	r30, r8
    1b04:	f1 1d       	adc	r31, r1
    1b06:	80 81       	ld	r24, Z
    1b08:	b6 01       	movw	r22, r12
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <fputc>
    1b10:	81 10       	cpse	r8, r1
    1b12:	f5 cf       	rjmp	.-22     	; 0x1afe <vfprintf+0x384>
    1b14:	22 20       	and	r2, r2
    1b16:	09 f4       	brne	.+2      	; 0x1b1a <vfprintf+0x3a0>
    1b18:	42 ce       	rjmp	.-892    	; 0x179e <vfprintf+0x24>
    1b1a:	b6 01       	movw	r22, r12
    1b1c:	80 e2       	ldi	r24, 0x20	; 32
    1b1e:	90 e0       	ldi	r25, 0x00	; 0
    1b20:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <fputc>
    1b24:	2a 94       	dec	r2
    1b26:	f6 cf       	rjmp	.-20     	; 0x1b14 <vfprintf+0x39a>
    1b28:	f6 01       	movw	r30, r12
    1b2a:	86 81       	ldd	r24, Z+6	; 0x06
    1b2c:	97 81       	ldd	r25, Z+7	; 0x07
    1b2e:	02 c0       	rjmp	.+4      	; 0x1b34 <vfprintf+0x3ba>
    1b30:	8f ef       	ldi	r24, 0xFF	; 255
    1b32:	9f ef       	ldi	r25, 0xFF	; 255
    1b34:	2b 96       	adiw	r28, 0x0b	; 11
    1b36:	e2 e1       	ldi	r30, 0x12	; 18
    1b38:	0c 94 9c 0e 	jmp	0x1d38	; 0x1d38 <__epilogue_restores__>

00001b3c <strnlen_P>:
    1b3c:	fc 01       	movw	r30, r24
    1b3e:	05 90       	lpm	r0, Z+
    1b40:	61 50       	subi	r22, 0x01	; 1
    1b42:	70 40       	sbci	r23, 0x00	; 0
    1b44:	01 10       	cpse	r0, r1
    1b46:	d8 f7       	brcc	.-10     	; 0x1b3e <strnlen_P+0x2>
    1b48:	80 95       	com	r24
    1b4a:	90 95       	com	r25
    1b4c:	8e 0f       	add	r24, r30
    1b4e:	9f 1f       	adc	r25, r31
    1b50:	08 95       	ret

00001b52 <strnlen>:
    1b52:	fc 01       	movw	r30, r24
    1b54:	61 50       	subi	r22, 0x01	; 1
    1b56:	70 40       	sbci	r23, 0x00	; 0
    1b58:	01 90       	ld	r0, Z+
    1b5a:	01 10       	cpse	r0, r1
    1b5c:	d8 f7       	brcc	.-10     	; 0x1b54 <strnlen+0x2>
    1b5e:	80 95       	com	r24
    1b60:	90 95       	com	r25
    1b62:	8e 0f       	add	r24, r30
    1b64:	9f 1f       	adc	r25, r31
    1b66:	08 95       	ret

00001b68 <fputc>:
    1b68:	0f 93       	push	r16
    1b6a:	1f 93       	push	r17
    1b6c:	cf 93       	push	r28
    1b6e:	df 93       	push	r29
    1b70:	fb 01       	movw	r30, r22
    1b72:	23 81       	ldd	r18, Z+3	; 0x03
    1b74:	21 fd       	sbrc	r18, 1
    1b76:	03 c0       	rjmp	.+6      	; 0x1b7e <fputc+0x16>
    1b78:	8f ef       	ldi	r24, 0xFF	; 255
    1b7a:	9f ef       	ldi	r25, 0xFF	; 255
    1b7c:	2c c0       	rjmp	.+88     	; 0x1bd6 <fputc+0x6e>
    1b7e:	22 ff       	sbrs	r18, 2
    1b80:	16 c0       	rjmp	.+44     	; 0x1bae <fputc+0x46>
    1b82:	46 81       	ldd	r20, Z+6	; 0x06
    1b84:	57 81       	ldd	r21, Z+7	; 0x07
    1b86:	24 81       	ldd	r18, Z+4	; 0x04
    1b88:	35 81       	ldd	r19, Z+5	; 0x05
    1b8a:	42 17       	cp	r20, r18
    1b8c:	53 07       	cpc	r21, r19
    1b8e:	44 f4       	brge	.+16     	; 0x1ba0 <fputc+0x38>
    1b90:	a0 81       	ld	r26, Z
    1b92:	b1 81       	ldd	r27, Z+1	; 0x01
    1b94:	9d 01       	movw	r18, r26
    1b96:	2f 5f       	subi	r18, 0xFF	; 255
    1b98:	3f 4f       	sbci	r19, 0xFF	; 255
    1b9a:	31 83       	std	Z+1, r19	; 0x01
    1b9c:	20 83       	st	Z, r18
    1b9e:	8c 93       	st	X, r24
    1ba0:	26 81       	ldd	r18, Z+6	; 0x06
    1ba2:	37 81       	ldd	r19, Z+7	; 0x07
    1ba4:	2f 5f       	subi	r18, 0xFF	; 255
    1ba6:	3f 4f       	sbci	r19, 0xFF	; 255
    1ba8:	37 83       	std	Z+7, r19	; 0x07
    1baa:	26 83       	std	Z+6, r18	; 0x06
    1bac:	14 c0       	rjmp	.+40     	; 0x1bd6 <fputc+0x6e>
    1bae:	8b 01       	movw	r16, r22
    1bb0:	ec 01       	movw	r28, r24
    1bb2:	fb 01       	movw	r30, r22
    1bb4:	00 84       	ldd	r0, Z+8	; 0x08
    1bb6:	f1 85       	ldd	r31, Z+9	; 0x09
    1bb8:	e0 2d       	mov	r30, r0
    1bba:	09 95       	icall
    1bbc:	89 2b       	or	r24, r25
    1bbe:	e1 f6       	brne	.-72     	; 0x1b78 <fputc+0x10>
    1bc0:	d8 01       	movw	r26, r16
    1bc2:	16 96       	adiw	r26, 0x06	; 6
    1bc4:	8d 91       	ld	r24, X+
    1bc6:	9c 91       	ld	r25, X
    1bc8:	17 97       	sbiw	r26, 0x07	; 7
    1bca:	01 96       	adiw	r24, 0x01	; 1
    1bcc:	17 96       	adiw	r26, 0x07	; 7
    1bce:	9c 93       	st	X, r25
    1bd0:	8e 93       	st	-X, r24
    1bd2:	16 97       	sbiw	r26, 0x06	; 6
    1bd4:	ce 01       	movw	r24, r28
    1bd6:	df 91       	pop	r29
    1bd8:	cf 91       	pop	r28
    1bda:	1f 91       	pop	r17
    1bdc:	0f 91       	pop	r16
    1bde:	08 95       	ret

00001be0 <__ultoa_invert>:
    1be0:	fa 01       	movw	r30, r20
    1be2:	aa 27       	eor	r26, r26
    1be4:	28 30       	cpi	r18, 0x08	; 8
    1be6:	51 f1       	breq	.+84     	; 0x1c3c <__ultoa_invert+0x5c>
    1be8:	20 31       	cpi	r18, 0x10	; 16
    1bea:	81 f1       	breq	.+96     	; 0x1c4c <__ultoa_invert+0x6c>
    1bec:	e8 94       	clt
    1bee:	6f 93       	push	r22
    1bf0:	6e 7f       	andi	r22, 0xFE	; 254
    1bf2:	6e 5f       	subi	r22, 0xFE	; 254
    1bf4:	7f 4f       	sbci	r23, 0xFF	; 255
    1bf6:	8f 4f       	sbci	r24, 0xFF	; 255
    1bf8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bfa:	af 4f       	sbci	r26, 0xFF	; 255
    1bfc:	b1 e0       	ldi	r27, 0x01	; 1
    1bfe:	3e d0       	rcall	.+124    	; 0x1c7c <__ultoa_invert+0x9c>
    1c00:	b4 e0       	ldi	r27, 0x04	; 4
    1c02:	3c d0       	rcall	.+120    	; 0x1c7c <__ultoa_invert+0x9c>
    1c04:	67 0f       	add	r22, r23
    1c06:	78 1f       	adc	r23, r24
    1c08:	89 1f       	adc	r24, r25
    1c0a:	9a 1f       	adc	r25, r26
    1c0c:	a1 1d       	adc	r26, r1
    1c0e:	68 0f       	add	r22, r24
    1c10:	79 1f       	adc	r23, r25
    1c12:	8a 1f       	adc	r24, r26
    1c14:	91 1d       	adc	r25, r1
    1c16:	a1 1d       	adc	r26, r1
    1c18:	6a 0f       	add	r22, r26
    1c1a:	71 1d       	adc	r23, r1
    1c1c:	81 1d       	adc	r24, r1
    1c1e:	91 1d       	adc	r25, r1
    1c20:	a1 1d       	adc	r26, r1
    1c22:	20 d0       	rcall	.+64     	; 0x1c64 <__ultoa_invert+0x84>
    1c24:	09 f4       	brne	.+2      	; 0x1c28 <__ultoa_invert+0x48>
    1c26:	68 94       	set
    1c28:	3f 91       	pop	r19
    1c2a:	2a e0       	ldi	r18, 0x0A	; 10
    1c2c:	26 9f       	mul	r18, r22
    1c2e:	11 24       	eor	r1, r1
    1c30:	30 19       	sub	r19, r0
    1c32:	30 5d       	subi	r19, 0xD0	; 208
    1c34:	31 93       	st	Z+, r19
    1c36:	de f6       	brtc	.-74     	; 0x1bee <__ultoa_invert+0xe>
    1c38:	cf 01       	movw	r24, r30
    1c3a:	08 95       	ret
    1c3c:	46 2f       	mov	r20, r22
    1c3e:	47 70       	andi	r20, 0x07	; 7
    1c40:	40 5d       	subi	r20, 0xD0	; 208
    1c42:	41 93       	st	Z+, r20
    1c44:	b3 e0       	ldi	r27, 0x03	; 3
    1c46:	0f d0       	rcall	.+30     	; 0x1c66 <__ultoa_invert+0x86>
    1c48:	c9 f7       	brne	.-14     	; 0x1c3c <__ultoa_invert+0x5c>
    1c4a:	f6 cf       	rjmp	.-20     	; 0x1c38 <__ultoa_invert+0x58>
    1c4c:	46 2f       	mov	r20, r22
    1c4e:	4f 70       	andi	r20, 0x0F	; 15
    1c50:	40 5d       	subi	r20, 0xD0	; 208
    1c52:	4a 33       	cpi	r20, 0x3A	; 58
    1c54:	18 f0       	brcs	.+6      	; 0x1c5c <__ultoa_invert+0x7c>
    1c56:	49 5d       	subi	r20, 0xD9	; 217
    1c58:	31 fd       	sbrc	r19, 1
    1c5a:	40 52       	subi	r20, 0x20	; 32
    1c5c:	41 93       	st	Z+, r20
    1c5e:	02 d0       	rcall	.+4      	; 0x1c64 <__ultoa_invert+0x84>
    1c60:	a9 f7       	brne	.-22     	; 0x1c4c <__ultoa_invert+0x6c>
    1c62:	ea cf       	rjmp	.-44     	; 0x1c38 <__ultoa_invert+0x58>
    1c64:	b4 e0       	ldi	r27, 0x04	; 4
    1c66:	a6 95       	lsr	r26
    1c68:	97 95       	ror	r25
    1c6a:	87 95       	ror	r24
    1c6c:	77 95       	ror	r23
    1c6e:	67 95       	ror	r22
    1c70:	ba 95       	dec	r27
    1c72:	c9 f7       	brne	.-14     	; 0x1c66 <__ultoa_invert+0x86>
    1c74:	00 97       	sbiw	r24, 0x00	; 0
    1c76:	61 05       	cpc	r22, r1
    1c78:	71 05       	cpc	r23, r1
    1c7a:	08 95       	ret
    1c7c:	9b 01       	movw	r18, r22
    1c7e:	ac 01       	movw	r20, r24
    1c80:	0a 2e       	mov	r0, r26
    1c82:	06 94       	lsr	r0
    1c84:	57 95       	ror	r21
    1c86:	47 95       	ror	r20
    1c88:	37 95       	ror	r19
    1c8a:	27 95       	ror	r18
    1c8c:	ba 95       	dec	r27
    1c8e:	c9 f7       	brne	.-14     	; 0x1c82 <__ultoa_invert+0xa2>
    1c90:	62 0f       	add	r22, r18
    1c92:	73 1f       	adc	r23, r19
    1c94:	84 1f       	adc	r24, r20
    1c96:	95 1f       	adc	r25, r21
    1c98:	a0 1d       	adc	r26, r0
    1c9a:	08 95       	ret

00001c9c <__divmodsi4>:
    1c9c:	05 2e       	mov	r0, r21
    1c9e:	97 fb       	bst	r25, 7
    1ca0:	1e f4       	brtc	.+6      	; 0x1ca8 <__divmodsi4+0xc>
    1ca2:	00 94       	com	r0
    1ca4:	0e 94 65 0e 	call	0x1cca	; 0x1cca <__negsi2>
    1ca8:	57 fd       	sbrc	r21, 7
    1caa:	07 d0       	rcall	.+14     	; 0x1cba <__divmodsi4_neg2>
    1cac:	0e 94 b7 0e 	call	0x1d6e	; 0x1d6e <__udivmodsi4>
    1cb0:	07 fc       	sbrc	r0, 7
    1cb2:	03 d0       	rcall	.+6      	; 0x1cba <__divmodsi4_neg2>
    1cb4:	4e f4       	brtc	.+18     	; 0x1cc8 <__divmodsi4_exit>
    1cb6:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <__negsi2>

00001cba <__divmodsi4_neg2>:
    1cba:	50 95       	com	r21
    1cbc:	40 95       	com	r20
    1cbe:	30 95       	com	r19
    1cc0:	21 95       	neg	r18
    1cc2:	3f 4f       	sbci	r19, 0xFF	; 255
    1cc4:	4f 4f       	sbci	r20, 0xFF	; 255
    1cc6:	5f 4f       	sbci	r21, 0xFF	; 255

00001cc8 <__divmodsi4_exit>:
    1cc8:	08 95       	ret

00001cca <__negsi2>:
    1cca:	90 95       	com	r25
    1ccc:	80 95       	com	r24
    1cce:	70 95       	com	r23
    1cd0:	61 95       	neg	r22
    1cd2:	7f 4f       	sbci	r23, 0xFF	; 255
    1cd4:	8f 4f       	sbci	r24, 0xFF	; 255
    1cd6:	9f 4f       	sbci	r25, 0xFF	; 255
    1cd8:	08 95       	ret

00001cda <__muluhisi3>:
    1cda:	0e 94 d9 0e 	call	0x1db2	; 0x1db2 <__umulhisi3>
    1cde:	a5 9f       	mul	r26, r21
    1ce0:	90 0d       	add	r25, r0
    1ce2:	b4 9f       	mul	r27, r20
    1ce4:	90 0d       	add	r25, r0
    1ce6:	a4 9f       	mul	r26, r20
    1ce8:	80 0d       	add	r24, r0
    1cea:	91 1d       	adc	r25, r1
    1cec:	11 24       	eor	r1, r1
    1cee:	08 95       	ret

00001cf0 <__mulshisi3>:
    1cf0:	b7 ff       	sbrs	r27, 7
    1cf2:	0c 94 6d 0e 	jmp	0x1cda	; 0x1cda <__muluhisi3>

00001cf6 <__mulohisi3>:
    1cf6:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <__muluhisi3>
    1cfa:	82 1b       	sub	r24, r18
    1cfc:	93 0b       	sbc	r25, r19
    1cfe:	08 95       	ret

00001d00 <__prologue_saves__>:
    1d00:	2f 92       	push	r2
    1d02:	3f 92       	push	r3
    1d04:	4f 92       	push	r4
    1d06:	5f 92       	push	r5
    1d08:	6f 92       	push	r6
    1d0a:	7f 92       	push	r7
    1d0c:	8f 92       	push	r8
    1d0e:	9f 92       	push	r9
    1d10:	af 92       	push	r10
    1d12:	bf 92       	push	r11
    1d14:	cf 92       	push	r12
    1d16:	df 92       	push	r13
    1d18:	ef 92       	push	r14
    1d1a:	ff 92       	push	r15
    1d1c:	0f 93       	push	r16
    1d1e:	1f 93       	push	r17
    1d20:	cf 93       	push	r28
    1d22:	df 93       	push	r29
    1d24:	cd b7       	in	r28, 0x3d	; 61
    1d26:	de b7       	in	r29, 0x3e	; 62
    1d28:	ca 1b       	sub	r28, r26
    1d2a:	db 0b       	sbc	r29, r27
    1d2c:	0f b6       	in	r0, 0x3f	; 63
    1d2e:	f8 94       	cli
    1d30:	de bf       	out	0x3e, r29	; 62
    1d32:	0f be       	out	0x3f, r0	; 63
    1d34:	cd bf       	out	0x3d, r28	; 61
    1d36:	09 94       	ijmp

00001d38 <__epilogue_restores__>:
    1d38:	2a 88       	ldd	r2, Y+18	; 0x12
    1d3a:	39 88       	ldd	r3, Y+17	; 0x11
    1d3c:	48 88       	ldd	r4, Y+16	; 0x10
    1d3e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1d40:	6e 84       	ldd	r6, Y+14	; 0x0e
    1d42:	7d 84       	ldd	r7, Y+13	; 0x0d
    1d44:	8c 84       	ldd	r8, Y+12	; 0x0c
    1d46:	9b 84       	ldd	r9, Y+11	; 0x0b
    1d48:	aa 84       	ldd	r10, Y+10	; 0x0a
    1d4a:	b9 84       	ldd	r11, Y+9	; 0x09
    1d4c:	c8 84       	ldd	r12, Y+8	; 0x08
    1d4e:	df 80       	ldd	r13, Y+7	; 0x07
    1d50:	ee 80       	ldd	r14, Y+6	; 0x06
    1d52:	fd 80       	ldd	r15, Y+5	; 0x05
    1d54:	0c 81       	ldd	r16, Y+4	; 0x04
    1d56:	1b 81       	ldd	r17, Y+3	; 0x03
    1d58:	aa 81       	ldd	r26, Y+2	; 0x02
    1d5a:	b9 81       	ldd	r27, Y+1	; 0x01
    1d5c:	ce 0f       	add	r28, r30
    1d5e:	d1 1d       	adc	r29, r1
    1d60:	0f b6       	in	r0, 0x3f	; 63
    1d62:	f8 94       	cli
    1d64:	de bf       	out	0x3e, r29	; 62
    1d66:	0f be       	out	0x3f, r0	; 63
    1d68:	cd bf       	out	0x3d, r28	; 61
    1d6a:	ed 01       	movw	r28, r26
    1d6c:	08 95       	ret

00001d6e <__udivmodsi4>:
    1d6e:	a1 e2       	ldi	r26, 0x21	; 33
    1d70:	1a 2e       	mov	r1, r26
    1d72:	aa 1b       	sub	r26, r26
    1d74:	bb 1b       	sub	r27, r27
    1d76:	fd 01       	movw	r30, r26
    1d78:	0d c0       	rjmp	.+26     	; 0x1d94 <__udivmodsi4_ep>

00001d7a <__udivmodsi4_loop>:
    1d7a:	aa 1f       	adc	r26, r26
    1d7c:	bb 1f       	adc	r27, r27
    1d7e:	ee 1f       	adc	r30, r30
    1d80:	ff 1f       	adc	r31, r31
    1d82:	a2 17       	cp	r26, r18
    1d84:	b3 07       	cpc	r27, r19
    1d86:	e4 07       	cpc	r30, r20
    1d88:	f5 07       	cpc	r31, r21
    1d8a:	20 f0       	brcs	.+8      	; 0x1d94 <__udivmodsi4_ep>
    1d8c:	a2 1b       	sub	r26, r18
    1d8e:	b3 0b       	sbc	r27, r19
    1d90:	e4 0b       	sbc	r30, r20
    1d92:	f5 0b       	sbc	r31, r21

00001d94 <__udivmodsi4_ep>:
    1d94:	66 1f       	adc	r22, r22
    1d96:	77 1f       	adc	r23, r23
    1d98:	88 1f       	adc	r24, r24
    1d9a:	99 1f       	adc	r25, r25
    1d9c:	1a 94       	dec	r1
    1d9e:	69 f7       	brne	.-38     	; 0x1d7a <__udivmodsi4_loop>
    1da0:	60 95       	com	r22
    1da2:	70 95       	com	r23
    1da4:	80 95       	com	r24
    1da6:	90 95       	com	r25
    1da8:	9b 01       	movw	r18, r22
    1daa:	ac 01       	movw	r20, r24
    1dac:	bd 01       	movw	r22, r26
    1dae:	cf 01       	movw	r24, r30
    1db0:	08 95       	ret

00001db2 <__umulhisi3>:
    1db2:	a2 9f       	mul	r26, r18
    1db4:	b0 01       	movw	r22, r0
    1db6:	b3 9f       	mul	r27, r19
    1db8:	c0 01       	movw	r24, r0
    1dba:	a3 9f       	mul	r26, r19
    1dbc:	70 0d       	add	r23, r0
    1dbe:	81 1d       	adc	r24, r1
    1dc0:	11 24       	eor	r1, r1
    1dc2:	91 1d       	adc	r25, r1
    1dc4:	b2 9f       	mul	r27, r18
    1dc6:	70 0d       	add	r23, r0
    1dc8:	81 1d       	adc	r24, r1
    1dca:	11 24       	eor	r1, r1
    1dcc:	91 1d       	adc	r25, r1
    1dce:	08 95       	ret

00001dd0 <_exit>:
    1dd0:	f8 94       	cli

00001dd2 <__stop_program>:
    1dd2:	ff cf       	rjmp	.-2      	; 0x1dd2 <__stop_program>
